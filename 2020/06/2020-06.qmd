---
title: "2020-06: Custom Customs"
format: html
---

```{r}
library(readxl)
library(sets)
dt <- read_xls("input.xls")
```

## Part 1

Recycling this from D4P2

```{r}
df <- dt
testDF <- df[1,]
dfRow <- 1
dfColumn <- 1
for(r in 1:2001) {
  if(!is.na(df[r,1])) {
    testDF[dfRow, dfColumn] <- df[r,1]
    dfColumn <- dfColumn + 1
  }
  else {
    dfRow <- dfRow + 1
    dfColumn <- 1
  }
}
df <- testDF
df
```

```{r}
df[is.na(df)] <- ""
df$all <- ""
for(r in 1:456) {
  df$all[r] <- paste(df[r,1], df[r,2], df[r,3], df[r,4], df[r,5], sep = "")
  df$count[r] <- length(unique(unlist(strsplit(df$all[r], ""))))
}
df
```

```{r}
sum(df$count)
```

## Part 2

```{r}
df <- dt
testDF <- df[1,]
dfRow <- 1
dfColumn <- 1
for(r in 1:2001) {
  if(!is.na(df[r,1])) {
    testDF[dfRow, dfColumn] <- df[r,1]
    dfColumn <- dfColumn + 1
  }
  else {
    dfRow <- dfRow + 1
    dfColumn <- 1
  }
}
df <- testDF
df
```

Credit to [Matthew McMillan](https://github.com/UnsolvedCypher) for the idea of using sets

```{r}
for(r in 1:456)
  for(c in 2:5)
    if(is.na(df[r,c]))
      df[r,c] <- df[r,1]
df$matthew <- NA_integer_
for(r in 1:456) {
  df$matthew[r] <-
    length(unique(
      set_intersection(
        unique(unlist(strsplit(
          as.character(df[r, 1]), ""
        ))),
        unique(unlist(strsplit(
          as.character(df[r, 2]), ""
        ))),
        unique(unlist(strsplit(
          as.character(df[r, 3]), ""
        ))),
        unique(unlist(strsplit(
          as.character(df[r, 4]), ""
        ))),
        unique(unlist(strsplit(
          as.character(df[r, 5]), ""
        )))
      )
    ))
}

df
```

```{r}
sum(df$matthew)
```