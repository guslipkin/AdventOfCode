---
title: "2022-14: Extended Polymerization"
format: html
---

```{r}
library(tidyverse)
library(stringr)
library(data.table)

dt <- readLines("input.txt")
polymer <- dt[!grepl(" -> ", dt)][1]
polymer <- str_split(polymer, "", simplify = TRUE)[1,]
pairs <- 
  data.frame(str_split(dt[grepl(" -> ", dt)], " -> ", simplify = TRUE))
```

## Part 1

```{r}
dt <- readLines("input.txt")
polymer <- dt[!grepl(" -> ", dt)][1]
polymer <- str_split(polymer, "", simplify = TRUE)[1,]
pairs <- data.frame(str_split(dt[grepl(" -> ", dt)], " -> ", simplify = TRUE))

for(d in 1:10) {
  pos <- data.frame("let" = NA, "pos" = NA)
  for (i in 1:(length(polymer) - 1)) {
    pos <- rbind(pos, data.frame("let" =
                                   pairs$X2[pairs$X1 == paste0(polymer[i:(i + 1)],
                                                               collapse = "")],
                                 "pos" = i))
  }
  pos <- pos[-1, ]
  
  for (r in 1:nrow(pos)) {
    polymer <-
      R.utils::insert(x = polymer,
                      values = pos$let[r],
                      ats = r + pos$pos[r])
  }
  # print((table(polymer)))
}
t <- sort(table(polymer), decreasing = TRUE)
t[1] - rev(t)[1]
```

## Part 2

```{r}
dt <- readLines("input2.txt")
polymer <- dt[!grepl(" -> ", dt)][1]
polymer <- str_split(polymer, "", simplify = TRUE)[1,]
pairs <- 
  data.frame(str_split(dt[grepl(" -> ", dt)], " -> ", simplify = TRUE)) %>%
  `colnames<-`(c("pair", "add"))

get_pairs <- function(x) {
  data.table("x" = x, y = c(x[-1], NA))
}
get_pairs(polymer)
```

4 7 13 25 49
4 6 12 24 48

```{r}
dt <- readLines("input2.txt")
polymer <- dt[!grepl(" -> ", dt)][1]
polymer <- str_split(polymer, "", simplify = TRUE)[1,]
pairs <- 
  data.frame(str_split(dt[grepl(" -> ", dt)], " -> ", simplify = TRUE))

dt <-
  data.frame("x" = polymer[-length(polymer)], "y" = polymer[-1]) %>%
  mutate("z" = paste0(x, y, sep = "")) %>%
  select("z") %>%
  group_by(z) %>%
  count()
  
counts <- unique(unlist(strsplit(pairs$X1, "")))
counts <- 
  rep(0, length(counts)) %>%
  `names<-`(sort(unique(counts))) %>%
  data.frame() %>%
  rownames_to_column(var = "value") %>%
  `colnames<-`(c("value", "n"))

build_poly <- function(dt, counts, i = 1) {
  if (i == 10) { return(list(dt, counts)) }
  # i <- 1
  dt <- dt %>%
    right_join(pairs, by = c("z" = "X1")) %>%
    filter(!is.na(n))
  
  counts <-
    dt %>%
    group_by(X2) %>%
      summarise(n = n()) %>%
    ungroup() %>%
    `colnames<-`(c("value", "n")) %>%
    rbind(data.frame(counts)) %>%
    group_by(value) %>%
      summarise(n = sum(n)) %>%
    ungroup() %>%
    filter(!is.na(n))
  print(counts)
  
  dt <- dt %>%
    separate("z", into = c("x", "y"), sep = 1) %>%
    mutate(x = paste(x, X2, sep = ""),
           y = paste(X2, y, sep = "")) %>%
    select(-X2) %>%
    pivot_longer(cols = c(x, y)) %>%
    select(-name) %>%
    group_by(value) %>%
    summarise(n = sum(n)) %>%
    rename("z" = value)
  
  build_poly(dt, counts, i + 1)
}

options(digits = 20)

tab <- build_poly(dt, counts)
tab <-
  tab[[1]] |>
  separate("z", into = c("x", "y"), sep = 1) |>
  pivot_longer(cols = c(x, y)) |>
  select(-name) |>
  group_by(value) |>
    summarise(n = sum(n)) |>
  ungroup() |>
  arrange(desc(n)) |>
  left_join(tab[[2]] %>% rename(n1 = n), by = "value") |>
  mutate(n = n + n1) |>
  select(-n1) |>
  deframe()

unname(tab[1] - rev(tab)[1])
tab
```

NC NB CH CN BC HB

NC NB CH B

N b CN BC HB

```{r}
# part 2
dt <- readLines("input2.txt")
polymer <- dt[!grepl(" -> ", dt)][1]
polymer <- str_split(polymer, "", simplify = TRUE)[1,]
pairs <- str_split(dt[grepl(" -> ", dt)], " -> ", simplify = TRUE)
pairsV <- pairs[,2]
names(pairsV) <- pairs[,1]

pairsList <- c()
for(i in 1:(length(polymer) - 1)) {
  pairsList <- append(pairsList, paste0(polymer[i:(i + 1)], collapse = ""))
}
pairsList <- table(pairsList)

ohNo <- function(x, n) {
  if(n == 1) { return(x) }
  
  pairsNames <- names(x)
  temp <- c()
  for (i in pairsNames) {
    mid <- pairsV[i]
    str <- str_split(i, "", simplify = TRUE)[1, ]
    temp <- append(temp,
                   paste0(str[1], mid, str[2], collapse = ""))
  }
  temp <- table(temp)
  print(temp)

  newPairs <- c()
  for (i in 1:length(temp)) {
    val1 <- x[i]
    names(val1) <- paste0(substr(names(temp[i]), 1, 2))
    newPairs <- append(newPairs, val1)
    
    val2 <- x[i]
    names(val2) <- paste0(substr(names(temp[i]), 2, 3))
    newPairs <- append(newPairs, val2)
  }

  x <- data.table("pairs" = names(newPairs), "vals" = as.double(newPairs))
  x <- x[, sum(.SD), by = "pairs"]
  
  newPairs <- x$V1
  names(newPairs) <- x$pairs
  
  print(newPairs)

  return(ohNo(newPairs, n-1))
}
options(scipen=999)
temp <- ohNo(pairsList, 10)
# print(temp)
letters <- str_split(names(temp), "", simplify = TRUE)
dt <- data.table("let1" = letters[,1], "let2" = letters[,2], "vals" = temp)
dt <- rbind(dt[,.(let1, vals)], dt[,.(let2, vals)], use.names = FALSE) %>%
  .[, sum(.SD), by = "let1"] %>%
  arrange(desc(V1))
dt
head(dt, 1)$V1 - tail(dt, 1)$V1
# 6415466473169 too high
# 26510512726256 too high
```

