{
  "hash": "f7ce9187586d4d1d433615a770418b0b",
  "result": {
    "markdown": "---\ntitle: \"02: Corruption Checksum\"\nformat: html\n---\n\n::: {.cell hash='2017-02_cache/html/unnamed-chunk-1_4031149108085b702981a7228e48ad2b'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell hash='2017-02_cache/html/unnamed-chunk-2_b42eac0b1d32ed8501ba88baed53d3f4'}\n\n```{.r .cell-code}\ndt <- data.table::fread(\"input.txt\")\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2017-02_cache/html/unnamed-chunk-3_6b596e502c51d70d771e8c46053c634b'}\n\n```{.r .cell-code}\ndt %>%\n  rowwise() %>%\n  mutate(\n    \"min\" = min(across()),\n    \"max\" = max(across())\n  ) %>%\n  mutate(\"diff\" = max - min) %>%\n  pull(diff) %>%\n  sum()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `min = min(across())`.\nℹ In row 1.\nCaused by warning:\n! Using `across()` without supplying `.cols` was deprecated in dplyr 1.1.0.\nℹ Please supply `.cols` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 36174\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2017-02_cache/html/unnamed-chunk-4_a2775898ed1e05a4e4b33f70d4bf6833'}\n\n```{.r .cell-code}\napply(dt, 1, function(x) {\n  expand.grid(x, x) %>%\n    filter(Var1 != Var2) %>%\n    mutate(\"valid\" = ifelse(Var1 %% Var2 == 0, TRUE, FALSE)) %>%\n    filter(valid) %>%\n    mutate(\"val\" = Var1 / Var2) %>%\n    pull(val)\n}) %>%\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 244\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}