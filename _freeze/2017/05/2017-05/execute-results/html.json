{
  "hash": "fd986f27f0a104ef1e909337f83affb8",
  "result": {
    "markdown": "---\ntitle: \"05: A Maze of Twisty Trampolines, All Alike\"\n---\n\n::: {.cell hash='2017-05_cache/html/unnamed-chunk-1_522c25aa00f520029c06c7862c78d6ff'}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n\nx2 <- \n  readLines(\"input.txt\") |>\n  as.integer()\n```\n:::\n\n\n## Part 1\n\nI tried recursion first, had a bit of trouble, then got C stack errors. Back to while loops we go...\n\n\n::: {.cell hash='2017-05_cache/html/unnamed-chunk-2_97790e869db0e09aa604fcc56a07773a'}\n\n```{.r .cell-code}\nx <- x2\npos <- 1\ninc <- 0\nwhile(pos >= 1 & pos <= length(x)) {\n  x[pos] <- x[pos] + 1\n  pos <- pos + x[pos] - 1\n  inc <- inc + 1\n}\ninc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 376976\n```\n:::\n:::\n\n\n## Part 2\n\nFor some reason I struggled with getting the logic in the right order, but a poor night's sleep does wonders :|\n\n\n::: {.cell hash='2017-05_cache/html/unnamed-chunk-3_219384b49e84273cbded4573a6302bc4'}\n\n```{.r .cell-code}\nx <- x2\npos <- 1\ninc <- 0\nwhile(pos >= 1 & pos <= length(x)) {\n  jmp <- x[pos]\n  x[pos] <- if(x[pos] >= 3) x[pos] - 1 else x[pos] + 1\n  inc <- inc + 1\n  pos <- pos + jmp\n}\ninc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 29227751\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}