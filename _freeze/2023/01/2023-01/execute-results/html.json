{
  "hash": "61a5e215d1e803fe854600246e40d7fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"01: Trebuchet?!\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n\noptions(scipen = 999)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\n```\n:::\n\n\n\n\n## Part 1\n\nThis wasn't too bad. Just forgot to `unlist` initially.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt |>\n   sapply(\\(x) {\n     x |>\n      str_extract_all('[0-9]') |>\n      unlist() -> y\n    glue::glue('{head(y, 1)}{tail(y, 1)}')\n  }) |>\n  as.numeric() |>\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 56397\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\nThis took way too long and I hate incomplete examples. Absolutely no indication that `oneight` flips for both 1 and 8.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumbers <-\n  c(\n    'one' = 1,\n    'two' = 2,\n    'three' = 3,\n    'four' = 4,\n    'five' = 5,\n    'six' = 6,\n    'seven' = 7,\n    'eight' = 8,\n    'nine' = 9\n  )\ndt |>\n  sapply(\\(x) {\n    n <- c(names(numbers), '[1-9]')\n    i <-\n      x |>\n      stringi::stri_locate_all_regex(n, omit_no_match = TRUE) |>\n      lapply(data.frame) |>\n      purrr::list_rbind() |>\n      dplyr::pull(start) |>\n      order()\n    x <-\n      stringi::stri_match_all_regex(x, n) |>\n      unlist() |>\n      purrr::discard(is.na)\n    y <- ifelse(x %in% names(numbers), numbers[x], x)[i]\n    glue::glue('{head(y, 1)}{tail(y, 1)}')\n  }) |>\n  as.numeric() |>\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 55701\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}