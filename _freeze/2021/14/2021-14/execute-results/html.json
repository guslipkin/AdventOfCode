{
  "hash": "14811369f283d2f7460bde0e88d0248a",
  "result": {
    "markdown": "---\ntitle: \"2022-14: Extended Polymerization\"\nformat: html\n---\n\n::: {.cell hash='2021-14_cache/html/unnamed-chunk-1_bb80ae1e5720b8c29e4f02e0c9b4e7f4'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n:::\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2021-14_cache/html/unnamed-chunk-2_f1a3de23ec5c20e5bf0115e913da80b8'}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n\nfor(d in 1:10) {\n  pos <- data.frame(\"let\" = NA, \"pos\" = NA)\n  for (i in 1:(length(polymer) - 1)) {\n    pos <- rbind(pos, data.frame(\"let\" =\n                                   pairs$X2[pairs$X1 == paste0(polymer[i:(i + 1)],\n                                                               collapse = \"\")],\n                                 \"pos\" = i))\n  }\n  pos <- pos[-1, ]\n  \n  for (r in 1:nrow(pos)) {\n    polymer <-\n      R.utils::insert(x = polymer,\n                      values = pos$let[r],\n                      ats = r + pos$pos[r])\n  }\n  # print((table(polymer)))\n}\nt <- sort(table(polymer), decreasing = TRUE)\nt[1] - rev(t)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   S \n3230 \n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2021-14_cache/html/unnamed-chunk-3_d4119a8acb8d2335dc08198c82dbb118'}\n\n```{.r .cell-code}\ndt <- readLines(\"input2.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE)) %>%\n  `colnames<-`(c(\"pair\", \"add\"))\n\nget_pairs <- function(x) {\n  data.table(\"x\" = x, y = c(x[-1], NA))\n}\nget_pairs(polymer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   x    y\n1: N    N\n2: N    C\n3: C    B\n4: B <NA>\n```\n:::\n:::\n\n\n4 7 13 25 49\n4 6 12 24 48\n\n\n::: {.cell hash='2021-14_cache/html/unnamed-chunk-4_eeeab3d4e3856190d7244564c5691bb5'}\n\n```{.r .cell-code}\ndt <- readLines(\"input2.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n\ndt <-\n  data.frame(\"x\" = polymer[-length(polymer)], \"y\" = polymer[-1]) %>%\n  mutate(\"z\" = paste0(x, y, sep = \"\")) %>%\n  select(\"z\") %>%\n  group_by(z) %>%\n  count()\n  \ncounts <- unique(unlist(strsplit(pairs$X1, \"\")))\ncounts <- \n  rep(0, length(counts)) %>%\n  `names<-`(sort(unique(counts))) %>%\n  data.frame() %>%\n  rownames_to_column(var = \"value\") %>%\n  `colnames<-`(c(\"value\", \"n\"))\n\nbuild_poly <- function(dt, counts, i = 1) {\n  if (i == 10) { return(list(dt, counts)) }\n  # i <- 1\n  dt <- dt %>%\n    right_join(pairs, by = c(\"z\" = \"X1\")) %>%\n    filter(!is.na(n))\n  \n  counts <-\n    dt %>%\n    group_by(X2) %>%\n      summarise(n = n()) %>%\n    ungroup() %>%\n    `colnames<-`(c(\"value\", \"n\")) %>%\n    rbind(data.frame(counts)) %>%\n    group_by(value) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    filter(!is.na(n))\n  print(counts)\n  \n  dt <- dt %>%\n    separate(\"z\", into = c(\"x\", \"y\"), sep = 1) %>%\n    mutate(x = paste(x, X2, sep = \"\"),\n           y = paste(X2, y, sep = \"\")) %>%\n    select(-X2) %>%\n    pivot_longer(cols = c(x, y)) %>%\n    select(-name) %>%\n    group_by(value) %>%\n    summarise(n = sum(n)) %>%\n    rename(\"z\" = value)\n  \n  build_poly(dt, counts, i + 1)\n}\n\noptions(digits = 20)\n\ntab <- build_poly(dt, counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B         1\n2 C         1\n3 H         1\n4 N         0\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B         5\n2 C         3\n3 H         1\n4 N         0\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B         8\n2 C         4\n3 H         3\n4 N         2\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B        13\n2 C         6\n3 H         4\n4 N         5\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B        18\n2 C         9\n3 H         6\n4 N         8\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B        24\n2 C        13\n3 H         7\n4 N        11\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B        30\n2 C        17\n3 H         9\n4 N        14\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B        36\n2 C        21\n3 H        11\n4 N        17\n# A tibble: 4 × 2\n  value     n\n  <chr> <dbl>\n1 B        42\n2 C        25\n3 H        13\n4 N        20\n```\n:::\n\n```{.r .cell-code}\ntab <-\n  tab[[1]] |>\n  separate(\"z\", into = c(\"x\", \"y\"), sep = 1) |>\n  pivot_longer(cols = c(x, y)) |>\n  select(-name) |>\n  group_by(value) |>\n    summarise(n = sum(n)) |>\n  ungroup() |>\n  arrange(desc(n)) |>\n  left_join(tab[[2]] %>% rename(n1 = n), by = \"value\") |>\n  mutate(n = n + n1) |>\n  select(-n1) |>\n  deframe()\n\nunname(tab[1] - rev(tab)[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1482\n```\n:::\n\n```{.r .cell-code}\ntab\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   B    N    C    H \n1731  863  329  249 \n```\n:::\n:::\n\n\nNC NB CH CN BC HB\n\nNC NB CH B\n\nN b CN BC HB\n\n\n::: {.cell hash='2021-14_cache/html/unnamed-chunk-5_7aa13a0c70bc43eb41738e5833493070'}\n\n```{.r .cell-code}\n# part 2\ndt <- readLines(\"input2.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE)\npairsV <- pairs[,2]\nnames(pairsV) <- pairs[,1]\n\npairsList <- c()\nfor(i in 1:(length(polymer) - 1)) {\n  pairsList <- append(pairsList, paste0(polymer[i:(i + 1)], collapse = \"\"))\n}\npairsList <- table(pairsList)\n\nohNo <- function(x, n) {\n  if(n == 1) { return(x) }\n  \n  pairsNames <- names(x)\n  temp <- c()\n  for (i in pairsNames) {\n    mid <- pairsV[i]\n    str <- str_split(i, \"\", simplify = TRUE)[1, ]\n    temp <- append(temp,\n                   paste0(str[1], mid, str[2], collapse = \"\"))\n  }\n  temp <- table(temp)\n  print(temp)\n\n  newPairs <- c()\n  for (i in 1:length(temp)) {\n    val1 <- x[i]\n    names(val1) <- paste0(substr(names(temp[i]), 1, 2))\n    newPairs <- append(newPairs, val1)\n    \n    val2 <- x[i]\n    names(val2) <- paste0(substr(names(temp[i]), 2, 3))\n    newPairs <- append(newPairs, val2)\n  }\n\n  x <- data.table(\"pairs\" = names(newPairs), \"vals\" = as.double(newPairs))\n  x <- x[, sum(.SD), by = \"pairs\"]\n  \n  newPairs <- x$V1\n  names(newPairs) <- x$pairs\n  \n  print(newPairs)\n\n  return(ohNo(newPairs, n-1))\n}\noptions(scipen=999)\ntemp <- ohNo(pairsList, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntemp\nCHB NBC NCN \n  1   1   1 \nCH HB NB BC NC CN \n 1  1  1  1  1  1 \ntemp\nBBC CBH CCN HCB NBB NBC \n  1   1   1   1   1   1 \nBB BC CB BH CC CN HC NB \n 2  2  2  1  1  1  1  2 \ntemp\nBBC BHH BNB CCN CHB CNC HBC NBB \n  1   1   1   1   1   1   1   1 \nBB BC BH HH BN NB CC CN CH HB NC \n 4  3  2  2  2  4  1  2  1  2  1 \ntemp\nBBC BBN BHH BNB CBH CCN CNC HCB HNH NBB NBC \n  1   1   1   1   1   1   1   1   1   1   1 \nBB BC BN BH HH NB CB CC CN NC HC HN NH \n 9  5  5  4  2  5  4  4  5  1  2  1  1 \ntemp\nBBC BBN BHH BNB CCN CHB CNC HBC HCN HNH NBB NBC NCH \n  1   1   1   1   1   1   1   1   1   1   1   1   1 \nBB BC BN BH HH NB CC CN CH HB NC HC HN NH \n16 14  9  5  5  7  2 11  6  9  5  5  1  1 \ntemp\nBBC BBN BHH BNB CBH CCN CNC HBC HCB HCN HNH NBB NBC NCH \n  1   1   1   1   1   1   1   1   1   1   1   1   1   1 \nBB BC BN BH HH NB CB CC CN NC HB HC HN NH CH \n35 28 19 14  9 11 11  7 18  3 11 15  5  5  1 \ntemp\nBBC BBN BHH BNB CBH CCN CHB CNC HBC HCB HCN HNH NBB NBC NCH \n  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 \nBB BC BN BH HH NB CB CC CN CH HB NC HC HN NH \n68 58 42 28 19 24 12 11 29 12 29  8 14 15 15 \ntemp\nBBC BBN BHH BNB CBH CCN CHB CNC HBC HCB HCN HNH NBB NBC NCH \n  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 \n BB  BC  BN  BH  HH  NB  CB  CC  CN  CH  HB  NC  HC  HN  NH \n140 112  86  61  42  57  31  24  64  27  41  26  41   8   8 \ntemp\nBBC BBN BHH BNB CBH CCN CHB CNC HBC HCB HCN HNH NBB NBC NCH \n  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 \n BB  BC  BN  BH  HH  NB  CB  CC  CN  CH  HB  NC  HC  HN  NH \n293 212 173 128  86 110  69  57 122  39  95  32  68  26  26 \n```\n:::\n\n```{.r .cell-code}\n# print(temp)\nletters <- str_split(names(temp), \"\", simplify = TRUE)\ndt <- data.table(\"let1\" = letters[,1], \"let2\" = letters[,2], \"vals\" = temp)\ndt <- rbind(dt[,.(let1, vals)], dt[,.(let2, vals)], use.names = FALSE) %>%\n  .[, sum(.SD), by = \"let1\"] %>%\n  arrange(desc(V1))\ndt\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   let1   V1\n1:    B 1373\n2:    C  656\n3:    H  554\n4:    N  489\n```\n:::\n\n```{.r .cell-code}\nhead(dt, 1)$V1 - tail(dt, 1)$V1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 884\n```\n:::\n\n```{.r .cell-code}\n# 6415466473169 too high\n# 26510512726256 too high\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}