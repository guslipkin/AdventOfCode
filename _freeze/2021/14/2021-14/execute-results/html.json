{
  "hash": "b7af19ecec1ce72fd6670452b4724309",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2022-14: Extended Polymerization\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(data.table)\n\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n```\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n\nfor(d in 1:10) {\n  pos <- data.frame(\"let\" = NA, \"pos\" = NA)\n  for (i in 1:(length(polymer) - 1)) {\n    pos <- rbind(pos, data.frame(\"let\" =\n                                   pairs$X2[pairs$X1 == paste0(polymer[i:(i + 1)],\n                                                               collapse = \"\")],\n                                 \"pos\" = i))\n  }\n  pos <- pos[-1, ]\n  \n  for (r in 1:nrow(pos)) {\n    polymer <-\n      R.utils::insert(x = polymer,\n                      values = pos$let[r],\n                      ats = r + pos$pos[r])\n  }\n  # print((table(polymer)))\n}\nt <- sort(table(polymer), decreasing = TRUE)\nt[1] - rev(t)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   S \n3230 \n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n\ndt <-\n  data.frame(\"x\" = polymer[-length(polymer)], \"y\" = polymer[-1]) %>%\n  mutate(\"z\" = paste0(x, y, sep = \"\")) %>%\n  select(\"z\") %>%\n  group_by(z) %>%\n  count()\n  \ncounts <- unique(unlist(strsplit(pairs$X1, \"\")))\ncounts <- \n  rep(0, length(counts)) %>%\n  `names<-`(sort(unique(counts))) %>%\n  data.frame() %>%\n  rownames_to_column(var = \"value\") %>%\n  `colnames<-`(c(\"value\", \"n\")) %>%\n  rbind(table(polymer) |> data.frame() |> `colnames<-`(c(\"value\", \"n\"))) %>%\n  group_by(value) |>\n    summarise(n = sum(n)) |>\n    ungroup()\n\nbuild_poly <- function(dt, counts, i = 1) {\n  if (i == 40 + 1) { return(counts) }\n  dt <- dt %>%\n    right_join(pairs, by = c(\"z\" = \"X1\")) %>%\n    filter(!is.na(n))\n  \n  counts <-\n    dt %>%\n    group_by(X2) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    `colnames<-`(c(\"value\", \"n\")) %>%\n    rbind(counts) %>%\n    group_by(value) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    filter(!is.na(n))\n  \n  dt <- dt %>%\n    separate(\"z\", into = c(\"x\", \"y\"), sep = 1) %>%\n    mutate(x = paste(x, X2, sep = \"\"),\n           y = paste(X2, y, sep = \"\")) %>%\n    select(-X2) %>%\n    pivot_longer(cols = c(x, y)) %>%\n    select(-name) %>%\n    group_by(value) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    rename(\"z\" = value)\n  \n  build_poly(dt, counts, i + 1)\n}\n\noptions(digits = 20)\n\ntab <- \n  build_poly(dt, counts) |>\n  deframe() |>\n  sort()\n\ntab[length(tab)] - tab[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            S \n3542388214529 \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}