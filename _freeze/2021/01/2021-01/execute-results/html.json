{
  "hash": "898b2570fe754c4ce5b6cdb1451ccde4",
  "result": {
    "markdown": "---\ntitle: \"2021-01: Sonar Sweep\"\nformat: html\n---\n\n::: {.cell hash='2021-01_cache/html/unnamed-chunk-1_7ac96778bfd3a47343296164df0bbfc1'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n:::\n:::\n\n::: {.cell hash='2021-01_cache/html/unnamed-chunk-2_a926652c586d449abda7e95f7a88aad9'}\n\n```{.r .cell-code}\ndt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\nhead(dt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    V1\n1: 191\n2: 192\n3: 201\n4: 205\n5: 206\n6: 203\n```\n:::\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2021-01_cache/html/unnamed-chunk-3_5d0465e80258a3e313c44498522533aa'}\n\n```{.r .cell-code}\ndt$diff <- c(0, diff(dt$V1))\ndt %>%\n  filter(diff > 0) %>%\n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1374\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2021-01_cache/html/unnamed-chunk-4_54a09a79607c223b9c9788250c439a4c'}\n\n```{.r .cell-code}\ndt$diff <- c(0, 0, 0, diff(dt$V1, lag = 3))\ndt %>%\n  filter(diff > 0) %>%\n  nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1418\n```\n:::\n:::\n\n\n## Speed Edition\n\n### Fastest Solution\n\n\n::: {.cell hash='2021-01_cache/html/unnamed-chunk-5_159a2f1382d357eb4a5f5f26ecd64966'}\n\n```{.r .cell-code}\n# fastest solution\n# data.table was faster until I turned on warn=FALSE in readLines for Base R\ndt <- as.numeric(readLines(\"input.txt\", warn = FALSE))\n# part 1\nsum(diff(dt, lag = 1) > 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1374\n```\n:::\n\n```{.r .cell-code}\n# part 2\nsum(diff(dt, lag = 3) > 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1418\n```\n:::\n:::\n\n\n### Benchmarks\n\n\n::: {.cell hash='2021-01_cache/html/unnamed-chunk-6_be70f437cbc52d1afd4af218b3dea0b3'}\n\n```{.r .cell-code}\nrbenchmark::benchmark(\n  \"First try\" = {\n    library(tidyverse)\n    library(data.table)\n    dt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\n    # part 1\n    dt$diff <- c(0, diff(dt$V1))\n    dt %>% filter(diff > 0) %>% nrow()\n    # part 2\n    dt$diff <- c(0, 0, 0, diff(dt$V1, lag = 3))\n    dt %>% filter(diff > 0) %>% nrow()\n    },\n  \"Base R\" = {\n    dt <- as.numeric(readLines(\"input.txt\", warn = FALSE))\n    # part 1\n    sum(diff(dt, lag = 1) > 0)\n    # part 2\n    sum(diff(dt, lag = 3) > 0)\n    },\n  \"data.table\" = {\n    # part 1 and 2\n    data.table::fread(\"input.txt\", \n                      sep = \"\\n\")[, .(diff1 = sum(diff(V1, lag = 1) > 0),\n                                      diff3 = sum(diff(V1, lag = 3) > 0))]\n  },\n  replications = 100, columns = c(1:5), order = \"user.self\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        test replications user.self sys.self elapsed\n2     Base R          100     0.024    0.007   0.032\n3 data.table          100     0.048    0.004   0.052\n1  First try          100     0.427    0.014   0.442\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}