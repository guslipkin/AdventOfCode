{
  "hash": "0602cb8a37ad0bc532ba4da3707c278c",
  "result": {
    "markdown": "---\ntitle: \"2021-09: Smoke Basin\"\nformat: html\n---\n\n::: {.cell hash='2021-09_cache/html/unnamed-chunk-1_206e4782ff7d8f63991716df6f256065'}\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ forcats 0.5.2 \n✔ readr   2.1.3      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n:::\n\n```{.r .cell-code}\nlibrary(dbscan)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dbscan'\n\nThe following object is masked from 'package:stats':\n\n    as.dendrogram\n```\n:::\n\n```{.r .cell-code}\nlibrary(factoextra)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n```\n:::\n\n```{.r .cell-code}\ndt <- fread(\"input.txt\", header = FALSE, colClasses = \"character\")\ndt <- data.frame(str_split(dt$V1, \"\", simplify = TRUE))\ndtPadTop <- dt[1,]\ndtPadTop[!is.na(dtPadTop)] <- 10\ndt <- rbind(rbind(dtPadTop, dt), dtPadTop)\ndtPadSides <- dt[,1]\ndtPadSides[!is.na(dtPadSides)] <- 10\ndt <- cbind(cbind(dtPadSides, dt), dtPadSides)\ndt <- data.frame(apply(dt, 2, as.numeric))\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2021-09_cache/html/unnamed-chunk-2_7ced77e6cdcdf3d46d5e6536c84b1f5d'}\n\n```{.r .cell-code}\ndt2 <- dt\n\ncoordX <- c()\ncoordY <- c()\nrLow <- c()\nfor(r in 2:(nrow(dt2) - 1)) {\n  for(c in 2:(ncol(dt2) - 1)) {\n    if(dt2[r,c] == min(dt[(r-1):(r+1),(c-1):(c+1)])) {\n      rLow <- append(rLow, dt2[r,c])\n      coordX <- append(coordX, c)\n      coordY <- append(coordY, r)\n    }\n  }\n}\n\ns <- 0\nfor(n in 1:length(rLow)) {\n  s <- s + (rLow[n] + 1)\n}\ns\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 575\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2021-09_cache/html/unnamed-chunk-3_f931fd8388763e817a2f5d4ced63205e'}\n\n```{.r .cell-code}\ndt2 <- dt\ndt2[dt2 == 9 | dt2 == 10] <- NA\n\ncoordX <- c()\ncoordY <- c()\nrLow <- c()\nfor(r in 2:(nrow(dt2) - 1)) {\n  for(c in 2:(ncol(dt2) - 1)) {\n    if(!is.na(dt2[r,c])) {\n      rLow <- append(rLow, dt2[r,c])\n      coordX <- append(coordX, c)\n      coordY <- append(coordY, r)\n    }\n  }\n}\n\ndt3 <- data.frame(\"x\" = coordX, \"y\" = coordY, \"d\" = rLow)\ndt3 <- dt3[dt3$d <= 8,]\ndb <- dbscan(dt3[,1:2], eps = 1, minPts = 0)\ndt3$cluster <- db$cluster\ndt <- dt3 %>%\n  group_by(cluster) %>%\n  count() %>%\n  filter(cluster != 0) %>%\n  arrange(desc(n)) %>%\n  head(3)\nprod(dt$n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1019700\n```\n:::\n\n```{.r .cell-code}\ndt3$cluster <- ifelse(dt3$cluster %in% dt$cluster, dt3$cluster, 0)\ndt3 %>%\n  mutate(cluster = as.factor(cluster)) %>%\n  ggplot() +\n  geom_point(aes(x = x, y = y, color = cluster))\n```\n\n::: {.cell-output-display}\n![](2021-09_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"cluster.png\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSaving 7 x 5 in image\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}