{
  "hash": "5e9174d3c0948dbe57e05758c9ace960",
  "result": {
    "markdown": "---\ntitle: \"2021-06: Lanternfish\"\nformat: html\n---\n\n\n## Part 1\n\n\n::: {.cell hash='2021-06_cache/html/unnamed-chunk-1_5f854bfc00481ba90dfb696d7f639fe7'}\n\n```{.r .cell-code}\ndt2 <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n\nt <- table(dt2)\nv <- c(0, 0, t, rep(0, 8 - length(t)))\n\nfor(i in 1:80)\n  v <- c(v[2:7], v[8] + v[1], v[9:10], v[2])\nsum(v)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 363101\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2021-06_cache/html/unnamed-chunk-2_e49203e1b9b4d9a4c6d1313b5b4fe174'}\n\n```{.r .cell-code}\ndt2 <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n\nt <- table(dt2)\nv <- c(0, 0, t, rep(0, 8 - length(t)))\n\nfor(i in 1:256)\n  v <- c(v[2:7], v[8] + v[1], v[9:10], v[2])\noptions(scipen=999)\nsum(v)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1644286074024\n```\n:::\n:::\n\n\n## Speed Edition\n\n> This was a classic Advent Of Code misdirection. Once I figured it out, my solution was quick to write and execute.\n\n### Fastest solution\n\n\n::: {.cell hash='2021-06_cache/html/unnamed-chunk-3_58d413e461046dc82bc556306f942635'}\n\n```{.r .cell-code}\n# part 1 and 2\ndt2 <- c(1,3,3,4,5,1,1,1,1,1,1,2,1,4,1,1,1,5,2,2,4,3,1,1,2,5,4,2,2,3,1,2,3,2,1,\n         1,4,4,2,4,4,1,2,4,3,3,3,1,1,3,4,5,2,5,1,2,5,1,1,1,3,2,3,3,1,4,1,1,4,1,\n         4,1,1,1,1,5,4,2,1,2,2,5,5,1,1,1,1,2,1,1,1,1,3,2,3,1,4,3,1,1,3,1,1,1,1,\n         3,3,4,5,1,1,5,4,4,4,4,2,5,1,1,2,5,1,3,4,4,1,4,1,5,5,2,4,5,1,1,3,1,3,1,\n         4,1,3,1,2,2,1,5,1,5,1,3,1,3,1,4,1,4,5,1,4,5,1,1,5,2,2,4,5,1,3,2,4,2,1,\n         1,1,2,1,2,1,3,4,4,2,2,4,2,1,4,1,3,1,3,5,3,1,1,2,2,1,5,2,1,1,1,1,1,5,4,\n         3,5,3,3,1,5,5,4,4,2,1,1,1,2,5,3,3,2,1,1,1,5,5,3,1,4,4,2,4,2,1,1,1,5,1,\n         2,4,1,3,4,4,2,1,4,2,1,3,4,3,3,2,3,1,5,3,1,1,5,1,2,2,4,4,1,2,3,1,2,1,1,\n         2,1,1,1,2,3,5,5,1,2,3,1,3,5,4,2,1,3,3,4)\n\nfishTable <- c(0, 0, table(dt2), rep(0, 8 - max(dt2)))\n\nfish <- function(v, d) {\n  if (d == 0) {\n    return(sum(v, digits = 999))\n  } else if (d == 176) {\n    print(sum(v))\n  }\n  fish(c(v[2:7], v[8] + v[1], v[9:10], v[2]), d - 1)\n}\nfish(fishTable, 256)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 363101\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1644286075023\n```\n:::\n:::\n\n\n### Benchmark\n\n\n::: {.cell hash='2021-06_cache/html/unnamed-chunk-4_657d925e32811c976a2af609b566ec98'}\n\n```{.r .cell-code}\nbench <- rbenchmark::benchmark(\n  \"First try\" = {\n    # part 1\n    dt <- as.numeric(unlist(stringr::str_split(readLines(\"input.txt\"), \",\")))\n    dt2 <- dt\n    for(d in 1:80) {\n      dt2 <- dt2 - 1\n      if(sum(dt2 == -1) > 0) {\n        dt2 <- append(dt2, rep(8, sum(dt2 == -1)))\n        dt2[dt2 == -1] <- 6\n        }\n      }\n    s <- length(dt2)\n\n    # part 2\n    dt <- as.numeric(unlist(stringr::str_split(readLines(\"input2.txt\"), \",\")))\n    dt2 <- dt\n\n    dt <- data.frame(\"m\" = 0, \"zero\" = 0, \"one\" = 0, \"two\" = 0,\n                     \"three\" = 0, \"four\" = 0, \"five\" = 0, \"six\" = 0,\n                     \"seven\" = 0, \"eight\" = 0)\n\n    for(i in 1:length(dt2)) {\n      if(dt2[i] == 0) {dt$zero[1] <- dt$zero[1] + 1}\n      if(dt2[i] == 1) {dt$one[1] <- dt$one[1] + 1}\n      if(dt2[i] == 2) {dt$two[1] <- dt$two[1] + 1}\n      if(dt2[i] == 3) {dt$three[1] <- dt$three[1] + 1}\n      if(dt2[i] == 4) {dt$four[1] <- dt$four[1] + 1}\n      if(dt2[i] == 5) {dt$five[1] <- dt$five[1] + 1}\n      if(dt2[i] == 6) {dt$six[1] <- dt$six[1] + 1}\n      if(dt2[i] == 7) {dt$seven[1] <- dt$seven[1] + 1}\n      if(dt2[i] == 8) {dt$eight[1] <- dt$eight[1] + 1}\n    }\n\n    for (i in 1:255) {\n      dt$zero[1] <- dt$one[1]\n      dt$one[1] <- dt$two[1]\n      dt$two[1] <- dt$three[1]\n      dt$three[1] <- dt$four[1]\n      dt$four[1] <- dt$five[1]\n      dt$five[1] <- dt$six[1]\n      dt$six[1] <- dt$seven[1] + dt$m[1]\n      dt$seven[1] <- dt$eight[1]\n\n      dt$eight[1] <- dt$m[1]\n      dt$m[1] <- dt$zero[1]\n    }\n\n    options(scipen = 999)\n    s <- sum(dt[1, ])\n    },\n  \"Third try\" = {\n      # part 1 and 2\n      dt2 <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n\n      t <- table(dt2)\n      v <- c(0, 0, t, rep(0, 8 - length(t)))\n\n      for (i in 1:256) {\n        v <- c(v[2:7], v[8] + v[1], v[9:10], v[2])\n        if(i == 80)\n          s <- sum(v)\n      }\n      options(scipen = 999)\n      s <- sum(v)\n    },\n  \"With recursion!\" = {\n    # part 1 and 2\n    dt2 <- c(1,3,3,4,5,1,1,1,1,1,1,2,1,4,1,1,1,5,2,2,4,3,1,1,2,5,4,2,2,3,1,2,3,\n             2,1,1,4,4,2,4,4,1,2,4,3,3,3,1,1,3,4,5,2,5,1,2,5,1,1,1,3,2,3,3,1,4,\n             1,1,4,1,4,1,1,1,1,5,4,2,1,2,2,5,5,1,1,1,1,2,1,1,1,1,3,2,3,1,4,3,1,\n             1,3,1,1,1,1,3,3,4,5,1,1,5,4,4,4,4,2,5,1,1,2,5,1,3,4,4,1,4,1,5,5,2,\n             4,5,1,1,3,1,3,1,4,1,3,1,2,2,1,5,1,5,1,3,1,3,1,4,1,4,5,1,4,5,1,1,5,\n             2,2,4,5,1,3,2,4,2,1,1,1,2,1,2,1,3,4,4,2,2,4,2,1,4,1,3,1,3,5,3,1,1,\n             2,2,1,5,2,1,1,1,1,1,5,4,3,5,3,3,1,5,5,4,4,2,1,1,1,2,5,3,3,2,1,1,1,\n             5,5,3,1,4,4,2,4,2,1,1,1,5,1,2,4,1,3,4,4,2,1,4,2,1,3,4,3,3,2,3,1,5,\n             3,1,1,5,1,2,2,4,4,1,2,3,1,2,1,1,2,1,1,1,2,3,5,5,1,2,3,1,3,5,4,2,1,\n             3,3,4)\n\n    fishTable <- c(0, 0, table(dt2), rep(0, 8 - max(dt2)))\n    \n    fish <- function(v, d) {\n      if (d == 0) {\n        return(sum(v, digits = 999))\n      } else if (d == 176) {\n        s <- sum(v)\n      }\n      fish(c(v[2:7], v[8] + v[1], v[9:10], v[2]), d - 1)\n    }\n    s <- fish(fishTable, 256)\n  }, \n  replications = 100, columns = c(1:5), order = \"user.self\")\n\nbench$per <- bench$user.self / bench$replications\nbench\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             test replications user.self sys.self elapsed     per\n3 With recursion!          100     0.079    0.001   0.079 0.00079\n2       Third try          100     0.437    0.012   0.450 0.00437\n1       First try          100     7.977    1.149   9.155 0.07977\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}