{
  "hash": "1fbb47dfd4343972d68c4fecc2d5a8dd",
  "result": {
    "markdown": "---\ntitle: \"2020-09: Encoding Error\"\nformat: html\n---\n\n::: {.cell hash='2020-09_cache/html/unnamed-chunk-1_fc2d2e341d80f0d94ddbb4c207d354f5'}\n\n```{.r .cell-code}\ndf <- read.csv(\"input.csv\")\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2020-09_cache/html/unnamed-chunk-2_c812b3e7386b6585c42da1767dcc393f'}\n\n```{.r .cell-code}\ngoodNum <- FALSE\nfor(i in 26:1000) {\n  for(r1 in (i-25):(i-1)) {\n    if(df[r1,1] < df[i,1])\n      for(r2 in (i-25):(i-1))\n        if(df[i,1] - df[r1,1] == df[r2,1]) {\n          goodNum <- TRUE\n          break\n        }\n    if(goodNum)\n      break\n  }\n  if(!goodNum) {\n    print(df[i,1])\n    break\n  }\n  goodNum <- FALSE\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 69316178\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2020-09_cache/html/unnamed-chunk-3_ab4e787d812d531cb69e0936bf61fc37'}\n\n```{.r .cell-code}\ngoalNum <- 0\ngoodNum <- FALSE\nfor(i in 26:1000) {\n  for(r1 in (i-25):(i-1)) {\n    if(df[r1,1] < df[i,1])\n      for(r2 in (i-25):(i-1))\n        if(df[i,1] - df[r1,1] == df[r2,1]) {\n          goodNum <- TRUE\n          break\n        }\n    if(goodNum)\n      break\n  }\n  if(!goodNum) {\n    goalNum <- df[i,1]\n    break\n  }\n  goodNum <- FALSE\n}\n```\n:::\n\n::: {.cell hash='2020-09_cache/html/unnamed-chunk-4_1aa6bcb5ea107b44ce991963b84f5ae8'}\n\n```{.r .cell-code}\nbreakFlag <- FALSE\nfor(start in 1:1000) {\n  for(end in start:1000) {\n    if(sum(df$num[start:end]) == goalNum) {\n      breakFlag <- TRUE\n      break\n    }\n  }\n  if(breakFlag)\n    break\n}\n```\n:::\n\n::: {.cell hash='2020-09_cache/html/unnamed-chunk-5_c7df14216538302e4f7a305e1ec3837c'}\n\n```{.r .cell-code}\nsmallest <- max(df$num)\nlargest <- min(df$num)\n\nfor(r in start:end) {\n  if(df$num[r] < smallest)\n    smallest <- df$num[r]\n  if(df$num[r] > largest)\n    largest <- df$num[r]\n}\n\nsmallest + largest\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9351526\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}