{
  "hash": "aff7462db081cba7d92ddf2d15132f24",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"07: Handy Haversacks\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mistlecode)\noptions(scipen = 999)\n\ndf <- \n  read.csv(\"input.csv\") |>\n  dplyr::mutate(dplyr::across(\n      tidyselect::matches('child[2-4]C'), \n      \\(x) ifelse(as.character(x) == \" \", NA, x)\n  ))\n\ndf$child2C[as.character(df$child2C) == \" \"] <- NA\ndf$child3C[as.character(df$child3C) == \" \"] <- NA\ndf$child4C[as.character(df$child4C) == \" \"] <- NA\n```\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlongerDF <- data.frame(parent = \"\", nChild = 0, cChild = \"\")\n\nfor(col in seq(3, 9, by = 2)) {\n  for(r in 1:nrow(df)) {\n    if(!is.na(df[r,col-1]))\n      for(i in 1:df[r,col-1]) {\n        longerDF <- rbind(longerDF, data.frame(parent = df[r,1], \n                                               nChild = df[r,col-1], \n                                               cChild = df[r,col]))\n    }\n  }\n}\nlongerDF <- longerDF[-1,]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshinygoldDF <- \n  longerDF[longerDF$cChild == \"shiny gold\" | longerDF$parent == \"shiny gold\",]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel <- c(\"shiny gold\")\noldRows <- 0\n\nwhile(oldRows != nrow(shinygoldDF)) {\n  oldRows <- nrow(shinygoldDF)\n  level <- unlist(shinygoldDF$parent)\n  shinygoldDF <-\n    df[as.character(df$parent) %in% level |\n         as.character(df$child1C) %in% level |\n         as.character(df$child2C) %in% level |\n         as.character(df$child3C) %in% level |\n         as.character(df$child4C) %in% level, ]\n}\nnrow(shinygoldDF) - 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 164\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n::: {.callout-caution}\n\nThis solution is still under construction.\n\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshorterDF <-\n  longerDF |>\n  dplyr::summarise(nChild = dplyr::n(), .by = c('parent', 'cChild'))\n\ntraverse <- function(shorterDF, start, i = 0) {\n  if (length(start) == 1) return(i)\n  tmp <- dplyr::filter(shorterDF, parent == start[1])\n  if (nrow(tmp) == 0) return(traverse(shorterDF, start[-1], i + 1))\n  traverse(shorterDF, tmp$cChild, i + 1)\n}\ntraverse(shorterDF, 'shiny gold')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble::tibble(\n  'parent' = c('shiny gold', 'red', 'orange', 'yellow', 'green', 'blue', 'violet'),\n  'nChild' = c(2, 2, 2, 2, 2, 2, 0),\n  'cChild' = c('red', 'orange', 'yellow', 'green', 'blue', 'violet', NA)\n) |>\n  tidyr::uncount(nChild, .remove = FALSE) -> longerDF\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshorterDF <-\n  longerDF |>\n  dplyr::summarise(nChild = dplyr::n(), .by = c('parent', 'cChild'))\nbags <- \n  c(longerDF$parent, longerDF$cChild) |>\n  unique() |>\n  sort() |>\n  factor()\nbags |>\n  purrr::map_dbl(\\(x) {\n    x <-\n      longerDF |>\n      dplyr::select(parent, cChild) |>\n      dplyr::mutate(dplyr::across(\n        tidyselect::everything(),\n        \\(x) { purrr::map_dbl(x, \\(x) { which(levels(bags) == x) }) }\n      )) |>\n      as.matrix() |>\n      t() |>\n      as.vector() |>\n      igraph::make_graph(n = length(bags)) |>\n      igraph::all_simple_paths(from = which(bags == 'shiny gold'), to = which(bags == x)) |>\n      unlist()\n    x <- x[x != which(bags == 'shiny gold')]\n    shorterDF |>\n      dplyr::filter(cChild %in% bags[x]) |>\n      dplyr::pull(nChild) |>\n      prod()\n  }, .progress = TRUE) |>\n  sum(-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 126\n```\n\n\n:::\n:::\n\n\n\n\n> 2068\n6268\n6286\n<16014\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}