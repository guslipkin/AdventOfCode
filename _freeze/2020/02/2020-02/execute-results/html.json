{
  "hash": "24c65443871a98e744fa20592db6f0df",
  "result": {
    "markdown": "---\ntitle: \"2020-02: Password Philosophy\"\nformat: html\n---\n\n::: {.cell hash='2020-02_cache/html/unnamed-chunk-1_63b5dac76eee911875a59cdcc41731c3'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.1 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\ndf <- read.csv(\"input.csv\")\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  min max letter             password\n1   1  14      b  bbbbbbbbbbbbbbbbbbb\n2   3  14      v      vvpvvvmvvvvvvvv\n3   2   5      m              mfvxmmm\n4  15  20      z zdzzzrjzzzdpzzdzzzzz\n5   6   8      g           tggjggggrg\n6   2   3      l                nlllw\n```\n:::\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2020-02_cache/html/unnamed-chunk-2_b6916f48ede1b4d4d1229e4758b0490d'}\n\n```{.r .cell-code}\ncount <- 0\n\nfor(i in 1:nrow(df)) {\n  if(str_count(df$password[i], as.character(df$letter[i])) >= df$min[i] & \n     str_count(df$password[i], as.character(df$letter[i])) <= df$max[i])\n    count <- count + 1\n}\n\ncount\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 548\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2020-02_cache/html/unnamed-chunk-3_e243bd030d257284b1a7b70a3e090c9b'}\n\n```{.r .cell-code}\ncount <- 0\n\nfor(i in 1:nrow(df)) {\n  sub <- paste(substr(df$password[i], df$min[i], df$min[i]), \n               substr(df$password[i], df$max[i], df$max[i]))\n  if(str_count(sub, as.character(df$letter[i])) == 1)\n    count <- count + 1\n}\n\ncount\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 502\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}