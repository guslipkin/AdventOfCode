{
  "hash": "78ac5bf98916518753cceda131d2cd6f",
  "result": {
    "markdown": "---\ntitle: \"2022-02\"\nformat: html\n---\n\n::: {.cell hash='2022-02_cache/html/unnamed-chunk-1_1b5d7d23c651ee51a0efe25d7ce9a99c'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n:::\n:::\n\n::: {.cell hash='2022-02_cache/html/unnamed-chunk-2_9452efa0af485ecba2182d37d60029bf'}\n\n```{.r .cell-code}\ndt <- fread(\"input.txt\", header = FALSE)\n# dt <- readLines(\"input.txt\")\n```\n:::\n\n\nThis isn't so bad, just rock, paper, scissors.\n\n## Part 1\n\nI initially did `V1 == V2` but that doesn't work with `ABC` and `XYZ`, but a quick fix put me at 549 on the leaderboard so I'm really pleased.\n\n\n::: {.cell hash='2022-02_cache/html/unnamed-chunk-3_311f486f2cf96b6aa5e27da55ccc2fc2'}\n\n```{.r .cell-code}\ndt %>%\n  mutate(\"my_score\" = case_when(\n    V2 == \"X\" ~ 1,\n    V2 == \"Y\" ~ 2,\n    V2 == \"Z\" ~ 3\n  )) %>%\n  mutate(\"win_score\" = case_when(\n    (V1 == \"A\" & V2 == \"X\") | (V1 == \"B\" & V2 == \"Y\") | (V1 == \"C\" & V2 == \"Z\") ~ 3,\n    V1 == \"A\" & V2 == \"Y\" ~ 6,\n    V1 == \"A\" & V2 == \"Z\" ~ 0,\n    V1 == \"B\" & V2 == \"X\" ~ 0,\n    V1 == \"B\" & V2 == \"Z\" ~ 6,\n    V1 == \"C\" & V2 == \"X\" ~ 6,\n    V1 == \"C\" & V2 == \"Y\" ~ 0\n  )) %>%\n  mutate(\"score\" = my_score + win_score) %>%\n  pull(\"score\") %>%\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 14163\n```\n:::\n:::\n\n\n## Part 2\n\nI had this one pretty quick, just a bit of logic to get the `play` column right. Of course, I then had to remember to change all the right `V2` references which took me a minute to figure out when I missed the second mutate.\n\n\n::: {.cell hash='2022-02_cache/html/unnamed-chunk-4_7d9426bfe270d07c7ae0e20e7938772e'}\n\n```{.r .cell-code}\ndt %>%\n  mutate(\"play\" = case_when(\n    V2 == \"X\" & V1 == \"A\" ~ \"Z\",\n    V2 == \"X\" & V1 == \"B\" ~ \"X\",\n    V2 == \"X\" & V1 == \"C\" ~ \"Y\",\n    V2 == \"Y\" & V1 == \"A\" ~ \"X\",\n    V2 == \"Y\" & V1 == \"B\" ~ \"Y\",\n    V2 == \"Y\" & V1 == \"C\" ~ \"Z\",\n    V2 == \"Z\" & V1 == \"A\" ~ \"Y\",\n    V2 == \"Z\" & V1 == \"B\" ~ \"Z\",\n    V2 == \"Z\" & V1 == \"C\" ~ \"X\",\n  )) %>%\n  mutate(\"my_score\" = case_when(\n    play == \"X\" ~ 1,\n    play == \"Y\" ~ 2,\n    play == \"Z\" ~ 3\n  )) %>%\n  mutate(\"win_score\" = case_when(\n    (V1 == \"A\" & play == \"X\") | (V1 == \"B\" & play == \"Y\") | (V1 == \"C\" & play == \"Z\") ~ 3,\n    V1 == \"A\" & play == \"Y\" ~ 6,\n    V1 == \"A\" & play == \"Z\" ~ 0,\n    V1 == \"B\" & play == \"X\" ~ 0,\n    V1 == \"B\" & play == \"Z\" ~ 6,\n    V1 == \"C\" & play == \"X\" ~ 6,\n    V1 == \"C\" & play == \"Y\" ~ 0\n  )) %>%\n  mutate(\"score\" = my_score + win_score) %>%\n  pull(\"score\") %>%\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12091\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}