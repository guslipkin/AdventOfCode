{
  "hash": "6252d70f6e4cac250600211fdee473c5",
  "result": {
    "markdown": "---\ntitle: \"2022-12: Hill Climbing Algorithm\"\nformat: html\n---\n\n::: {.cell hash='2022-12_cache/html/unnamed-chunk-1_7bd787420ab75a34675b2994e6b1d83a'}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n```\n:::\n\n::: {.cell hash='2022-12_cache/html/unnamed-chunk-2_21c419f56838dfa18b73dce60316e0cd'}\n\n```{.r .cell-code}\ndt <- \n  readLines(\"input2.txt\") |>\n  str_split(\"\", simplify = TRUE)\n```\n:::\n\n::: {.cell hash='2022-12_cache/html/unnamed-chunk-3_92c8c8dfe5af04cb2498b46286d8eabc'}\n\n```{.r .cell-code}\nlettersE <- c(\"S\", letters, \"E\")\nm <- apply(dt, c(1,2), \\(l) which(lettersE == l))\ne <- which(m == length(lettersE), arr.ind = TRUE)[1,]\n```\n:::\n\n::: {.cell hash='2022-12_cache/html/unnamed-chunk-4_e2c1749ebfe1b250b470b34b9e523c04'}\n\n```{.r .cell-code}\n.lee <- function(.data, row, col, paths = NULL) {\n  if (is.null(paths)) { \n    paths <- matrix(0, nrow(.data), ncol(.data))\n    pts <- which(.data == min(.data), arr.ind = TRUE)[1,]\n    paths[pts[\"row\"], pts[\"col\"]] <- max(paths + 1)\n    return(.lee(.data, row, col, paths))\n  } else {\n    mPaths <- max(paths)\n    pts <- which(.data == mPaths, arr.ind = TRUE)\n    for(i in 1:nrow(pts)) { paths[pts[i,\"row\"], pts[i,\"col\"]] <- mPaths + 1 }\n  }\n  if (paths[row, col] != 0) { return(paths) }\n  else { return(.lee(.data, row, col, paths)) }\n}\n\nl <- .lee(m, e[\"row\"], e[\"col\"])\nwhich(l == max(l), arr.ind = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     row col\n[1,]   3   6\n```\n:::\n\n```{.r .cell-code}\nmax(l)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 29\n```\n:::\n:::\n\n\n53\n29\n\n\n::: {.cell hash='2022-12_cache/html/unnamed-chunk-5_9b1d75820f1775319641a13b80ad19e1'}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}