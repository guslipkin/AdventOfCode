{
  "hash": "9d83473f493f81848dabece45a92183d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2022-10: Cathode-Ray Tube\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# dt <- fread(\"input.txt\", header = FALSE)\ndt <-\n  readLines(\"input.txt\") |>\n  str_split(\" \", simplify = TRUE) |>\n  unlist(recursive = FALSE) |>\n  data.frame() |>\n  mutate(X2 = as.numeric(X2))\n```\n:::\n\n\n\n\nOh. This looks a lot like last year's day one.\n\n## Part 1\n\nPart 1 wasn't too bad. I was a really big dummy and forgot to download the test\ninput then was trying to check my real input as the test input which didn't\nwork. Other than that, I'm really happy I got to use\n`mistlecode::expand_directions` which I only wrote a few hours prior. I did have\nto make some live modifications, but nothing crazy. Once everything was mostly\nright, I had a problem where the first five signals were correct, but the last\nwasn't. I eventually realized that I needed to lead the add values and that got\neverything sorted.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <-\n  dt |>\n  mutate(\"mag\" = ifelse(X1 == \"noop\", 1, 2)) |>\n  select(\"dir\" = \"X1\", \"mag\", \"X2\") |>\n  mutate(ins = row_number()) |>\n  expand_directions(preserve_data = TRUE) |>\n  data.table()\n\ndt$dup = duplicated(dt$ins, fromLast = TRUE)\ndt$X2 = ifelse(dt$dup, NA, dt$X2)\n\ndt$X3 <- lead(dt$X2, 1)\n\nsapply(c(20, 60, 100, 140, 180, 220), \\(x) {\n  sum(1, sum(dt[1:x, \"X3\"], na.rm = TRUE)) * x\n}) |>\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14260\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\nThis was an absolute mess. I didn't understand the question at all and still\ndon't really get it. The difference between what I had and what I thought I\nshould have made the solution relatively clear, but only after struggling with\nit for hours. I do like ggplot-able solutions though. Those are always nice.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- matrix(\" \", 6, 40)\n\ndt$X2 <- ifelse(is.na(dt$X2), 0, dt$X2)\ndt$cumsum <- sapply(1:240, \\(x) { sum(1, sum(dt[1:x, \"X2\"], na.rm = TRUE)) })\n\nm <-\n  sapply(1:240, \\(x) {\n    forty <- (x %/% 40)\n    cumsum <- c(dt$cumsum[x] - 1, dt$cumsum[x], dt$cumsum[x] + 1)\n    sprite_pos <- cumsum[!is.na(cumsum)]\n    if (any((sprite_pos + (40 * forty)) == x)) {\n      sprite_pos <- suppressWarnings(min(which(sprite_pos == x), na.rm = TRUE))\n      if (sprite_pos == 1) { sprite_pos <- cumsum[1] }\n      else if (sprite_pos == 3) { sprite_pos <- cumsum[3] }\n      else { sprite_pos <- cumsum[2] }\n      return(sprite_pos + (40 * forty))\n    }\n    return(NA)\n  })\n\nm[240] <- 0\n\nmatrix_to_coords(matrix(m, 6, 40, byrow = TRUE)) |>\n  data.frame() |>\n  filter(!is.na(data)) |>\n  mutate(col = ifelse(col == 40, 0, col)) |>\n  ggplot() +\n  geom_point(aes(x = col, y = -row), size = 5, shape = 15) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](2022-10_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}