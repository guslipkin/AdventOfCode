{
  "hash": "dedad3e52f5c1d19334bdf078493aaba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2018-04: Repose Record\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(stringi)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\npattern <- \"\\\\[([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2})\\\\] (.*)\"\ndt <- data.table(do.call(rbind, stri_match_all_regex(dt, pattern)))\ncolnames(dt) <- c(\"input\", \"time\", \"action\")\ndt$guard <- as.numeric(do.call(rbind, stri_match_all_regex(dt$action, \"[0-9]{3,4}\")))\ndt$time <- as.POSIXct(dt$time)\ndt$action <- ifelse(dt$action == \"falls asleep\", \"asleep\", \"awake\")\ndt <- dt[order(time)] |> \n  fill(guard) |>\n  select(-input) |>\n  mutate(minute = minute(time), day = as.Date(time)) |>\n  filter(hour(time) == 0)\n```\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.table(\"day\" =\n             rep(seq.Date(as.Date(min(dt$time)), \n                          as.Date(max(dt$time)), \n                          by = \"day\"), \n                 each = 60),\n           \"minute\" = 0:59) |>\n  left_join(dt, by = c(\"day\", \"minute\")) |>\n  select(-time) |>\n  arrange(day, minute) |>\n  fill(action, guard) |>\n  filter(action == \"asleep\") |>\n  dcast(guard ~ minute, value.var = \"action\", fun.aggregate = length) -> saved\nsaved %>%\n  mutate(total = rowSums(.) - guard) |>\n  filter(total == max(total)) |>\n  select(-total) |>\n  as.vector() |>\n  unlist() -> vec\n\nunname(vec[\"guard\"] * as.numeric(names(which.max(vec[-1]))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 146622\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaved |>\n  pivot_longer(cols = matches(\"[0-9]{1,2}\"), names_to = \"minute\", values_to = \"times\") |>\n  filter(times == max(times)) |>\n  mutate(value = guard * as.numeric(minute)) |>\n  pull(value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 31848\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}