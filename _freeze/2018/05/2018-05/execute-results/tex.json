{
  "hash": "001b215195fb91654158d43b764492e9",
  "result": {
    "markdown": "# 2018-05: Alchemical Reduction\n\n\n\n::: {.cell hash='2018-05_cache/pdf/unnamed-chunk-1_dd33707cb3299fca9669cd4d384cc0d9'}\n\n```{.r .cell-code}\nlibrary(stringi)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching packages --------------------------------------- tidyverse 1.3.2 --\nv ggplot2 3.3.6      v purrr   0.3.4 \nv tibble  3.1.8      v dplyr   1.0.10\nv tidyr   1.2.0      v stringr 1.4.1 \nv readr   2.1.2      v forcats 0.5.2 \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n```\n:::\n:::\n\n::: {.cell hash='2018-05_cache/pdf/unnamed-chunk-2_9f405b7cc397da9d8b07f1a41910f866'}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\ndt <- unlist(strsplit(dt, \"\"))\n```\n:::\n\n\n\n## Part 1\n\n\n\n::: {.cell hash='2018-05_cache/pdf/unnamed-chunk-3_5163ef2de1d391fe0a4b38f00f062978'}\n\n```{.r .cell-code}\nreduced <- TRUE\nwhile(reduced) {\n  old <- length(dt)\n  for (x in 1:(old - 1)) {\n    if (dt[x] != dt[x + 1] & toupper(dt[x]) == toupper(dt[x + 1])) {\n      dt[c(x, x + 1)] <- \"\"\n      reduced <- TRUE\n    }\n  }\n  dt <- dt[dt != \"\"]\n  if(old == length(dt)) {\n    reduced <- FALSE\n  }\n}\nlength(dt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10598\n```\n:::\n:::\n\n\n\n## Part 2\n\n\n\n::: {.cell hash='2018-05_cache/pdf/unnamed-chunk-4_7a3a901f93742e200a2bd6f532cd131b'}\n\n```{.r .cell-code}\nsapply(1:26, function(l) {\n  tmp <- stri_replace_all_regex(dt, paste0(letters[l], \"|\", LETTERS[l]), \"\")\n  reduced <- TRUE\n  while (reduced) {\n    old <- length(tmp)\n    for (x in 1:(old - 1)) {\n      if (tmp[x] != tmp[x + 1] & toupper(tmp[x]) == toupper(tmp[x + 1])) {\n        tmp[c(x, x + 1)] <- \"\"\n        reduced <- TRUE\n      }\n    }\n    tmp <- tmp[tmp != \"\"]\n    if (old == length(tmp)) {\n      reduced <- FALSE\n    }\n  }\n  length(tmp)\n}) |>\n  min()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5312\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}