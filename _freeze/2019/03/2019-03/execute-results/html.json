{
  "hash": "a3da37805375f32687813101c0e4eb0d",
  "result": {
    "markdown": "---\ntitle: \"Day 3: Crossed Wires\"\nformat: html\n---\n\n::: {.cell hash='2019-03_cache/html/unnamed-chunk-1_65a7c1d6b5e984e82971ce167b1f4353'}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse\n```\n:::\n:::\n\n::: {.cell hash='2019-03_cache/html/unnamed-chunk-2_941278555bee22828792eefa16a351fe'}\n\n```{.r .cell-code}\ndtM <-\n  readLines(\"input.txt\") |>\n  lapply(\\(x) {\n    strsplit(x, \",\")[[1]] |>\n      data.frame() |>\n      `colnames<-`(c(\"col\")) |>\n      separate(col = \"col\", into = c(\"dir\", \"mag\"), sep = 1) |>\n      mutate(mag = as.integer(mag))\n  })\n```\n:::\n\n\n## Part 1\n\n\n::: {.cell hash='2019-03_cache/html/unnamed-chunk-3_46757ef456796f4e77b677e390fb5293'}\n\n```{.r .cell-code}\ndtM <- lapply(dtM, expand_directions)\n\ndtM[[1]] <- follow_directions(dtM[[1]], 0, 0)\ndtM[[2]] <- follow_directions(dtM[[2]], 0, 0)\n\ninner_join(dtM[[1]], dtM[[2]], by = c(\"row\", \"col\")) |>\n  lapply(abs) |>\n  data.frame() |>\n  mutate(dist = row + col) |>\n  arrange(dist) |>\n  head(1) |>\n  pull(dist)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1264\n```\n:::\n:::\n\n\n## Part 2\n\n\n::: {.cell hash='2019-03_cache/html/unnamed-chunk-4_20422e18d078d46a5ad2ebb717edcd8d'}\n\n```{.r .cell-code}\ndtM <-\n  readLines(\"input.txt\") |>\n  lapply(\\(x) {\n    strsplit(x, \",\")[[1]] |>\n      data.frame() |>\n      `colnames<-`(c(\"col\")) |>\n      separate(col = \"col\", into = c(\"dir\", \"mag\"), sep = 1) |>\n      mutate(mag = as.integer(mag), step = row_number())\n  })\n\ndtM <- lapply(dtM, expand_directions)\n\ndtM[[1]] <- follow_directions(dtM[[1]], 0, 0)\ndtM[[2]] <- follow_directions(dtM[[2]], 0, 0)\n\ninner_join(dtM[[1]], dtM[[2]], by = c(\"row\", \"col\")) |>\n  lapply(abs) |>\n  data.frame() |>\n  mutate(dist = row + col) |>\n  arrange(dist) |>\n  head(1) |>\n  pull(dist)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1264\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}