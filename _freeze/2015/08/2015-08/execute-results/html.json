{
  "hash": "c927acb966cb9738e6cbddb2e14c072c",
  "result": {
    "markdown": "---\ntitle: \"08: Matchsticks\"\n---\n\n::: {.cell hash='2015-08_cache/html/unnamed-chunk-1_2156663d5be9a48cd30b79dff2dd14d6'}\n\n```{.r .cell-code}\nlibrary(mistlecode)\ndt <- readLines(\"input.txt\")\n```\n:::\n\n\nThis doesn't look too bad. Dealing with R's `\\\\` nonsense is going to be a pain.\n\n## Part 1\n\nGetting the regex right was the worst part, just like I thought. `\\\\` is the worst part about R.\n\n\n::: {.cell hash='2015-08_cache/html/unnamed-chunk-2_46ae169ec41effac56410127de3bdc43'}\n\n```{.r .cell-code}\nliteral_length <- \n  dt |>\n  nchar() |>\n  sum()\n\nmemory_length <-\n  dt |>\n  str_sub(start = 2) |>\n  str_sub(end = -2) |>\n  str_replace_all('\\\\\\\\x[0-9a-f]{2}', ' ') |>\n  str_replace_all('\\\\\\\\\\\\\"', ' ') |>\n  str_replace_all('\\\\\\\\\\\\\\\\', ' ') |>\n  nchar() |>\n  sum()\n\nliteral_length - memory_length\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1371\n```\n:::\n:::\n\n\n## Part 2\n\nTurns out R also auto-converts double spaces to tabs so to get two characters, you need three spaces...\n\n\n::: {.cell hash='2015-08_cache/html/unnamed-chunk-3_849e068bd45303672aa3515ae974cae0'}\n\n```{.r .cell-code}\ntotal_length <-\n  dt |>\n  str_escape() |>\n  str_replace_all('^\"|\"$', '   ') |>\n  str_replace_all('\\\\\\\\x[0-9a-f]{2}', '    ') |>\n  str_replace_all('\\\\\\\\\\\\\"', '   ') |>\n  str_replace_all('\\\\\\\\', ' ') |>\n  nchar() |>\n  sum()\ntotal_length - literal_length\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2117\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}