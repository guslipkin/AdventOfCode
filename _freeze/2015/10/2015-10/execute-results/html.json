{
  "hash": "1ef8ac0e661b94346f28cad8dd131909",
  "result": {
    "markdown": "---\ntitle: \"10: Elves Look, Elves Say\"\n---\n\n::: {.cell hash='2015-10_cache/html/unnamed-chunk-1_7ad6140e0b6661805ef3a80810557bb0'}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse glue\n```\n:::\n\n```{.r .cell-code}\nlibrary(progressr)\ndt <- \"1113222113\"\n```\n:::\n\n\n## Part 1\n\nI got stuck trying to think of the smart way to do this so I'm brute-forcing it with recursion instead.\n\n\n::: {.cell hash='2015-10_cache/html/unnamed-chunk-2_45fc8818a10e496a9845f1d3c5dfecf0'}\n\n```{.r .cell-code}\nexpand <- function(x, max, i = 1) {\n  if (i == (max + 1)) { return(nchar(x)) }\n  x <-\n    x |>\n    strsplit(\"\") |>\n    unlist() |>\n    data.table() |>\n    `colnames<-`(\"input\") |>\n    mutate(group = rleid(input)) |>\n    group_by(group, input) |>\n    summarise(count = n(), .groups = \"drop\") |>\n    mutate(string = glue::glue(\"{count}{input}\")) |>\n    pull(string) |>\n    paste0(collapse = \"\")\n  p()\n  return(expand(x, max, i + 1))\n}\n\ntimes <- 40\nwith_progress({ \n  p <- progressor(steps = times)\n  expand(dt, times) \n})\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 252594\n```\n:::\n:::\n\n\n## Part 2\n\nI thought it was going to be 100 iterations. I can't believe I'm glad for just 50... But I think I can brute-force this too. I definitely have enough RAM. I just modified the function a bit to take a max iteration input argument as well.\n\n\n::: {.cell hash='2015-10_cache/html/unnamed-chunk-3_21472caf13248c81172421ea3bfc6312'}\n\n```{.r .cell-code}\ntimes <- 50\nwith_progress({ \n  p <- progressor(steps = times)\n  expand(dt, times) \n})\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3579328\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}