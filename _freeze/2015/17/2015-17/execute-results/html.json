{
  "hash": "aa6c9b9d99c8604f713d729e7154f07b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"17: No Such Thing as Too Much\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n\ndt <- \n  readLines(\"input.txt\") |>\n  as.integer() |>\n  sort(decreasing = TRUE)\n\nbuckets <-\n  dt |>\n  seq_along() |>\n  map_int(\\(x) {\n    x <-\n      dt |>\n      combn(x) |>\n      data.frame() |>\n      map_int(sum)\n    x <- sum(x == 150)\n    if (x == 0) NA else x\n  })\n```\n:::\n\n\n\n\n`buckets` was made for part 1, but is used in part 2 as well.\n\n## Part 1\n\nThis was surprisingly easy. I thought for sure I was going to have to run stuff in parallel.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(buckets, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4372\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\nAlso weirdly easy. Especially since I set myself up for that with part 1.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuckets |>\n  na.omit() |>\n  head(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}