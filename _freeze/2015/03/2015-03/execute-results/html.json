{
  "hash": "3937226db72a82c1d10e59add28b6b2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"03: Perfectly Spherical Houses in a Vacuum\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in readLines(\"input.txt\"): incomplete final line found on 'input.txt'\n```\n\n\n:::\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndirX <- function(x) {\n  case_when(\n    x == \"^\" ~ 0,\n    x == \">\" ~ 1,\n    x == \"<\" ~ -1,\n    x == \"v\" ~ 0\n  )\n}\ndirY <- function(x) {\n  case_when(\n    x == \"^\" ~ 1,\n    x == \">\" ~ 0,\n    x == \"<\" ~ 0,\n    x == \"v\" ~ -1\n  )\n}\n\ndf <- data.frame(\"x\" = 0, \"y\" = 0)\nfor(i in 1:nchar(dt))\n  df <- rbind(df, data.frame(\"x\" = dirX(substr(dt, i, i)),\n                             \"y\" = dirY(substr(dt, i, i))))\ndf <- data.table::data.table(df)\ndf$cumX <- cumsum(df$x)\ndf$cumY <- cumsum(df$y)\ndf <- df[, .(cumX, cumY)]\nnrow(unique(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2565\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfR <- data.frame(\"x\" = 0, \"y\" = 0)\ndfS <- data.frame(\"x\" = 0, \"y\" = 0)\nfor(i in seq(1, nchar(dt), 2))\n  dfS <- rbind(dfS, data.frame(\"x\" = dirX(substr(dt, i, i)),\n                               \"y\" = dirY(substr(dt, i, i))))\nfor(i in seq(2, nchar(dt), 2))\n  dfR <- rbind(dfR, data.frame(\"x\" = dirX(substr(dt, i, i)),\n                               \"y\" = dirY(substr(dt, i, i))))\n\ndts <- data.table::data.table(dfS)\ndts$cumX <- cumsum(dts$x)\ndts$cumY <- cumsum(dts$y)\ndtr <- data.table::data.table(dfR)\ndtr$cumX <- cumsum(dtr$x)\ndtr$cumY <- cumsum(dtr$y)\n\ndf <- data.table::data.table(rbind(dts, dtr))\n\ndf <- df[, .(cumX, cumY)]\nnrow(unique(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2639\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}