{
  "hash": "9e9815f1b1a25740a9f187294042d764",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"06: Probably a Fire Hazard\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in readLines(\"input.txt\"): incomplete final line found on 'input.txt'\n```\n\n\n:::\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt <- data.frame(\"dir\" = str_extract(dt, \"off|on|toggle\"),\n                 \"from\" = str_extract(dt, \"[0-9]{1,3},[0-9]{1,3}\"),\n                 \"to\" = str_extract(dt, \"[0-9]{1,3},[0-9]{1,3}$\"))\nfrom <- str_split(dt$from, \",\", simplify = TRUE)\ndt$fromX <- as.numeric(from[,1]) + 1\ndt$fromY <- as.numeric(from[,2]) + 1\n\nto <- str_split(dt$to, \",\", simplify = TRUE)\ndt$toX <- as.numeric(to[,1]) + 1\ndt$toY <- as.numeric(to[,2]) + 1\n\nlights <- data.frame(\"x\" = rep(1:1000, 1000), \n                     \"y\" = rep(1:1000, each = 1000),\n                     \"stat\" = as.integer(0))\n\nfor(i in 1:nrow(dt)) {\n  if(dt$dir[i] == \"on\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- 1\n  }\n  if(dt$dir[i] == \"off\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- 0\n  }\n  if(dt$dir[i] == \"toggle\") {\n    lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] <- \n      ifelse(lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] == 1, 0, 1)\n  }\n}\n\nnrow(lights[lights$stat == 1,])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 400410\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# part 2\nlights <- data.frame(\"x\" = rep(1:1000, 1000), \n                     \"y\" = rep(1:1000, each = 1000),\n                     \"stat\" = as.integer(0))\n\nfor(i in 1:nrow(dt)) {\n  if(dt$dir[i] == \"on\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] + 1\n  }\n  if(dt$dir[i] == \"off\") {\n    lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] <- \n      ifelse(lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] == 0, \n             lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y], \n             lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] - 1)\n  }\n  if(dt$dir[i] == \"toggle\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] + 2\n  }\n}\n\nsum(lights$stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15343601\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}