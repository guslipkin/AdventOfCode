{
  "hash": "8365b9edcf0fda168342f36e520fa5d4",
  "result": {
    "markdown": "---\ntitle: \"12: Leonardo's Monorail\"\n---\n\n::: {.cell hash='2016-12_cache/html/unnamed-chunk-1_9c9ef7925c02b21abd72b828ebba072f'}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse glue rlang R6\n```\n:::\n\n```{.r .cell-code}\ndt <- readLines(\"input.txt\")\n```\n:::\n\n\n## Part 1\n\nOkay. I finally had the motivation I needed to write an AoC BASIC interpreter/runner. It's super slow, but it works and I don't really have to do anything besides define the registers and the functions. If you want to learn more, take a look [here](https://mistlecode.guslipkin.me/reference/basic).\n\n\n::: {.cell hash='2016-12_cache/html/unnamed-chunk-2_a2bbec16c87c6b10b90f0accb0a602d8'}\n\n```{.r .cell-code}\nregisters <- list(\"a\" = 0L, \"b\" = 0L, \"c\" = 0L, \"d\" = 0L)\nfunctions <- list(\n  \"cpy\" = \\(x, y) {\n    self[[y]] <- self$val_or_index(x)\n    private$.inc()\n  },\n  \"inc\" = \\(x, y) {\n    self[[x]] <- self[[x]] + 1\n    private$.inc()\n  },\n  \"dec\" = \\(x, y) {\n    self[[x]] <- self[[x]] - 1\n    private$.inc()\n  },\n  \"jnz\" = \\(x, y) {\n    x <- self$val_or_index(x)\n    if (x != 0) private$.inc(y) else private$.inc()\n  }\n)\ncreate_assembly(registers, functions)$run(dt, target = \"a\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 318009\n```\n:::\n:::\n\n\n## Part 2\n\nJust a quick change, but oh so slow...\n\n\n::: {.cell hash='2016-12_cache/html/unnamed-chunk-3_077e534516a53ad6592848c45438a2ee'}\n\n```{.r .cell-code}\nregisters <- list(\"a\" = 0L, \"b\" = 0L, \"c\" = 1L, \"d\" = 0L)\ncreate_assembly(registers, functions)$run(dt, target = \"a\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9227663\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}