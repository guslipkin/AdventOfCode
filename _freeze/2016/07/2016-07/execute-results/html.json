{
  "hash": "c3ebed82bf07f0ed8ed10a1cecd7d654",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"07: Internet Protocol Version 7\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mistlecode)\n\ndt <- readLines(\"input.txt\")\n```\n:::\n\n\n\n\n## Part 1\n\nUgh. A stupid mistake with my variable scoping and a lot of headaches...\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfind_char <- function(x, char) {\n  x |>\n    str_locate_all(char) |>\n    unlist() |>\n    unique()\n}\n\nfind_abba <- function(s) {\n  any(\n    s != lead(s, 1) & s == lead(s, 3) & lead(s, 1) == lead(s, 2), \n    na.rm = TRUE\n  )\n}\n\ndt |>\n  map_lgl(\\(x) {\n    s <- find_char(x, \"\\\\[\")\n    e <- find_char(x, \"\\\\]\")\n    brackets <-\n      map2_lgl(s, e, \\(s, e) {\n        x |>\n          substr(s, e) |>\n          str_split_1(\"\") |>\n          find_abba()\n      }) |>\n      any()\n    if (!brackets) {\n      pat <-\n        map2_chr(s, e, ~ str_sub(x, .x, .y)) |>\n        str_escape() |>\n        paste0(collapse = \"|\")\n      x <-\n        x |>\n        str_replace_all(pat, \" \") |>\n        str_split_1(\" \") |>\n        map_lgl(~ find_abba(str_split_1(.x, \"\"))) |>\n        any()\n      return(x)\n    } else {\n      return(FALSE)\n    }\n  }) |>\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 110\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\nJust not my day today, I guess. Spent a bit of time struggling with vector comparison issues that I couldn't find.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfind_bab <- function(s) {\n  w <- which(s != lead(s, 1) & s == lead(s, 2))\n  if (length(w) > 0) map(w, ~ paste0(s[.x+1], s[.x], s[.x+1])) else NULL\n}\n\ndt |>\n  map_lgl(\\(x) {\n    s <- find_char(x, \"\\\\[\")\n    e <- find_char(x, \"\\\\]\")\n    brackets <-\n      map2(s, e, \\(s, e) {\n        x |>\n          substr(s, e) |>\n          str_split_1(\"\") |>\n          find_bab()\n      }) |>\n      discard(is.null) |>\n      unlist() |>\n      unique()\n    if (length(brackets) > 0) {\n      x <-\n        brackets |>\n        map_lgl(\\(aba) {\n          pat <-\n            map2_chr(s, e, ~ str_sub(x, .x, .y)) |>\n            str_escape() |>\n            paste0(collapse = \"|\")\n          x |>\n            str_replace_all(pat, \" \") |>\n            str_detect(aba)\n        }) |>\n        any()\n      return(x)\n    } else {\n      return(FALSE)\n    }\n  }) |>\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 242\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}