[
  {
    "objectID": "2015/01/2015-01.html",
    "href": "2015/01/2015-01.html",
    "title": "2015-01: Not Quite Lisp",
    "section": "",
    "text": "library(stringr)"
  },
  {
    "objectID": "2015/01/2015-01.html#part-1",
    "href": "2015/01/2015-01.html#part-1",
    "title": "2015-01: Not Quite Lisp",
    "section": "Part 1",
    "text": "Part 1\n\nstr_count(dt, \"\\\\(\") - str_count(dt, \"\\\\)\")\n\n[1] 138"
  },
  {
    "objectID": "2015/01/2015-01.html#part-2",
    "href": "2015/01/2015-01.html#part-2",
    "title": "2015-01: Not Quite Lisp",
    "section": "Part 2",
    "text": "Part 2\n\ndt <- data.frame(\"paren\" = t(str_split_fixed(dt, \"\", nchar(dt))))\ndt$val <- ifelse(dt$paren == \"(\", 1, -1)\nwhich(cumsum(dt$val) == -1)[1]\n\n[1] 1771"
  },
  {
    "objectID": "2015/02/2015-02.html",
    "href": "2015/02/2015-02.html",
    "title": "2015-02: I Was Told There Would Be No Math",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(stringr)"
  },
  {
    "objectID": "2015/02/2015-02.html#part-1",
    "href": "2015/02/2015-02.html#part-1",
    "title": "2015-02: I Was Told There Would Be No Math",
    "section": "Part 1",
    "text": "Part 1\n\n# part 1\ntmp <- dt %>%\n  .[, c(\"l\", \"w\", \"h\") := .(V1 * V2, V2 * V3, V1 * V3)] %>%\n  .[, min := ifelse(l <= w & l <= h, l, \n                    ifelse(w <= l & w <= h, w, h))] %>%\n  .[, sq := 2*l + 2*w + 2*h + min]\nsum(tmp$sq, na.rm = TRUE)\n\n[1] 1598415"
  },
  {
    "objectID": "2015/02/2015-02.html#part-2",
    "href": "2015/02/2015-02.html#part-2",
    "title": "2015-02: I Was Told There Would Be No Math",
    "section": "Part 2",
    "text": "Part 2\n\ntmp <- dt %>%\n  .[, c(\"l\", \"w\", \"h\") := .(V1 * V2, V2 * V3, V1 * V3)]\ntmp <- tmp[, c(\"l\", \"w\", \"h\") := .(V1, V2, V3)] %>%\n  .[, max := apply(dt[, .(l, w, h)], 1, max)] %>%\n  rowwise() %>%\n  mutate(test = list(c(l, w, h)))\ntmp$min1 <- t(data.frame(sapply(tmp$test, sort)))[,1]\ntmp$min2 <- t(data.frame(sapply(tmp$test, sort)))[,2]\n\ntmp <- data.table::data.table(tmp)[,rib := ((2*min1 + 2*min2) + (V1 * V2 * V3))]\nsum(tmp$rib, na.rm = TRUE)\n\n[1] 3812909"
  },
  {
    "objectID": "2015/03/2015-03.html",
    "href": "2015/03/2015-03.html",
    "title": "2015-03: Perfectly Spherical Houses in a Vacuum",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(stringr)"
  },
  {
    "objectID": "2015/03/2015-03.html#part-1",
    "href": "2015/03/2015-03.html#part-1",
    "title": "2015-03: Perfectly Spherical Houses in a Vacuum",
    "section": "Part 1",
    "text": "Part 1\n\ndirX <- function(x) {\n  case_when(\n    x == \"^\" ~ 0,\n    x == \">\" ~ 1,\n    x == \"<\" ~ -1,\n    x == \"v\" ~ 0\n  )\n}\ndirY <- function(x) {\n  case_when(\n    x == \"^\" ~ 1,\n    x == \">\" ~ 0,\n    x == \"<\" ~ 0,\n    x == \"v\" ~ -1\n  )\n}\n\ndf <- data.frame(\"x\" = 0, \"y\" = 0)\nfor(i in 1:nchar(dt))\n  df <- rbind(df, data.frame(\"x\" = dirX(substr(dt, i, i)),\n                             \"y\" = dirY(substr(dt, i, i))))\ndf <- data.table::data.table(df)\ndf$cumX <- cumsum(df$x)\ndf$cumY <- cumsum(df$y)\ndf <- df[, .(cumX, cumY)]\nnrow(unique(df))\n\n[1] 2565"
  },
  {
    "objectID": "2015/03/2015-03.html#part-2",
    "href": "2015/03/2015-03.html#part-2",
    "title": "2015-03: Perfectly Spherical Houses in a Vacuum",
    "section": "Part 2",
    "text": "Part 2\n\ndfR <- data.frame(\"x\" = 0, \"y\" = 0)\ndfS <- data.frame(\"x\" = 0, \"y\" = 0)\nfor(i in seq(1, nchar(dt), 2))\n  dfS <- rbind(dfS, data.frame(\"x\" = dirX(substr(dt, i, i)),\n                               \"y\" = dirY(substr(dt, i, i))))\nfor(i in seq(2, nchar(dt), 2))\n  dfR <- rbind(dfR, data.frame(\"x\" = dirX(substr(dt, i, i)),\n                               \"y\" = dirY(substr(dt, i, i))))\n\ndts <- data.table::data.table(dfS)\ndts$cumX <- cumsum(dts$x)\ndts$cumY <- cumsum(dts$y)\ndtr <- data.table::data.table(dfR)\ndtr$cumX <- cumsum(dtr$x)\ndtr$cumY <- cumsum(dtr$y)\n\ndf <- data.table::data.table(rbind(dts, dtr))\n\ndf <- df[, .(cumX, cumY)]\nnrow(unique(df))\n\n[1] 2639"
  },
  {
    "objectID": "2015/04/2015-04.html",
    "href": "2015/04/2015-04.html",
    "title": "2015-04: The Ideal Stocking Stuffer",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(stringr)\nlibrary(digest)"
  },
  {
    "objectID": "2015/04/2015-04.html#part-1",
    "href": "2015/04/2015-04.html#part-1",
    "title": "2015-04: The Ideal Stocking Stuffer",
    "section": "Part 1",
    "text": "Part 1\n\ni <- 0\nwhile(substr(digest(paste0(dt, i), algo = \"md5\", serialize = FALSE), 1, 5) != \"00000\")\n  i <- i + 1\ndigest(paste0(dt, i), algo = \"md5\", serialize = FALSE)\n\n[1] \"000004b30d481662b9cb0c105f6549b2\"\n\ni\n\n[1] 254575"
  },
  {
    "objectID": "2015/04/2015-04.html#part-2",
    "href": "2015/04/2015-04.html#part-2",
    "title": "2015-04: The Ideal Stocking Stuffer",
    "section": "Part 2",
    "text": "Part 2\n\ni <- 0\nwhile(substr(digest(paste0(dt, i), algo = \"md5\", serialize = FALSE), 1, 6) != \"000000\")\n  i <- i + 1\ndigest(paste0(dt, i), algo = \"md5\", serialize = FALSE)\n\n[1] \"000000b1b64bf5eb55aad89986126953\"\n\ni\n\n[1] 1038736"
  },
  {
    "objectID": "2015/05/2015-05.html",
    "href": "2015/05/2015-05.html",
    "title": "2015-05: Doesn’t He Have Intern-Elves For This?",
    "section": "",
    "text": "df <- readLines(\"input.txt\")\n\nWarning in readLines(\"input.txt\"): incomplete final line found on 'input.txt'"
  },
  {
    "objectID": "2015/05/2015-05.html#part-1",
    "href": "2015/05/2015-05.html#part-1",
    "title": "2015-05: Doesn’t He Have Intern-Elves For This?",
    "section": "Part 1",
    "text": "Part 1\n\ndt <- df\ndt <- dt[!grepl(\"(ab)|(cd)|(pq)|(xy)\", dt)]\ndt <- dt[grepl(\"(\\\\w*[aeuio]\\\\w*){3,}\", dt)]\ndt <- dt[grepl(\"(.)\\\\1+\", dt)]\nlength(dt)\n\n[1] 255"
  },
  {
    "objectID": "2015/05/2015-05.html#part-2",
    "href": "2015/05/2015-05.html#part-2",
    "title": "2015-05: Doesn’t He Have Intern-Elves For This?",
    "section": "Part 2",
    "text": "Part 2\n\ndt <- df\ndt <- dt[grepl(\"(..).*(\\\\1)\", dt, perl = TRUE)]\ndt <- dt[grepl(\"(.)(.)(\\\\1)\", dt, perl = TRUE)]\nlength(dt)\n\n[1] 55"
  },
  {
    "objectID": "2015/06/2015-06.html",
    "href": "2015/06/2015-06.html",
    "title": "2015-06: Probably a Fire Hazard",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(stringr)"
  },
  {
    "objectID": "2015/06/2015-06.html#part-1",
    "href": "2015/06/2015-06.html#part-1",
    "title": "2015-06: Probably a Fire Hazard",
    "section": "Part 1",
    "text": "Part 1\n\ndt <- data.frame(\"dir\" = str_extract(dt, \"off|on|toggle\"),\n                 \"from\" = str_extract(dt, \"[0-9]{1,3},[0-9]{1,3}\"),\n                 \"to\" = str_extract(dt, \"[0-9]{1,3},[0-9]{1,3}$\"))\nfrom <- str_split(dt$from, \",\", simplify = TRUE)\ndt$fromX <- as.numeric(from[,1]) + 1\ndt$fromY <- as.numeric(from[,2]) + 1\n\nto <- str_split(dt$to, \",\", simplify = TRUE)\ndt$toX <- as.numeric(to[,1]) + 1\ndt$toY <- as.numeric(to[,2]) + 1\n\nlights <- data.frame(\"x\" = rep(1:1000, 1000), \n                     \"y\" = rep(1:1000, each = 1000),\n                     \"stat\" = as.integer(0))\n\nfor(i in 1:nrow(dt)) {\n  if(dt$dir[i] == \"on\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- 1\n  }\n  if(dt$dir[i] == \"off\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- 0\n  }\n  if(dt$dir[i] == \"toggle\") {\n    lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] <- \n      ifelse(lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] == 1, 0, 1)\n  }\n}\n\nnrow(lights[lights$stat == 1,])\n\n[1] 400410"
  },
  {
    "objectID": "2015/06/2015-06.html#part-2",
    "href": "2015/06/2015-06.html#part-2",
    "title": "2015-06: Probably a Fire Hazard",
    "section": "Part 2",
    "text": "Part 2\n\n# part 2\nlights <- data.frame(\"x\" = rep(1:1000, 1000), \n                     \"y\" = rep(1:1000, each = 1000),\n                     \"stat\" = as.integer(0))\n\nfor(i in 1:nrow(dt)) {\n  if(dt$dir[i] == \"on\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] + 1\n  }\n  if(dt$dir[i] == \"off\") {\n    lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] <- \n      ifelse(lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] == 0, \n             lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y], \n             lights$stat[dt$fromX[i] <= lights$x & dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & dt$toY[i] >= lights$y] - 1)\n  }\n  if(dt$dir[i] == \"toggle\") {\n    lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] <- lights$stat[dt$fromX[i] <= lights$x & \n                  dt$toX[i] >= lights$x & \n                  dt$fromY[i] <= lights$y & \n                  dt$toY[i] >= lights$y] + 2\n  }\n}\n\nsum(lights$stat)\n\n[1] 15343601"
  },
  {
    "objectID": "2015/07/2015-07.html",
    "href": "2015/07/2015-07.html",
    "title": "2017-07: Some Assembly Required",
    "section": "",
    "text": "library(data.table)\nlibrary(stringi)"
  },
  {
    "objectID": "2015/07/2015-07.html#part-1",
    "href": "2015/07/2015-07.html#part-1",
    "title": "2017-07: Some Assembly Required",
    "section": "Part 1",
    "text": "Part 1"
  },
  {
    "objectID": "2016/01/2016-01.html",
    "href": "2016/01/2016-01.html",
    "title": "2016-01: No Time for a Taxicab",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(stringr)"
  },
  {
    "objectID": "2016/01/2016-01.html#part-1",
    "href": "2016/01/2016-01.html#part-1",
    "title": "2016-01: No Time for a Taxicab",
    "section": "Part 1",
    "text": "Part 1\n\ndt$deg <- 0\nfor(i in 2:nrow(dt)) {\n  if(dt$dir[i] == \"R\") { dt$deg[i] <- dt$deg[i-1] + 90 }\n  else {dt$deg[i] <- dt$deg[i-1] - 90}\n}\ndt |>\n  mutate(deg = deg %% 360, \n         dis = ifelse(deg %in% c(180, 270), -dis, dis)) |>\n  group_by(deg) |>\n  summarise(n = sum(dis)) |>\n  pull(n) |>\n  sum()\n\n[1] 250"
  },
  {
    "objectID": "2016/01/2016-01.html#part-2",
    "href": "2016/01/2016-01.html#part-2",
    "title": "2016-01: No Time for a Taxicab",
    "section": "Part 2",
    "text": "Part 2\n\npoints <- matrix(c(ifelse(dt$dir[1] == \"R\", dt$dis[1], -dt$dis[1]), 0), 1, 2)\nfor (j in 2:nrow(dt)) {\n  tmp <- dt[1:j,]\n  tmp$deg <- 0\n  for (i in 2:j) {\n    if (tmp$dir[i] == \"R\") { tmp$deg[i] <- tmp$deg[i - 1] + 90 }\n    else {  tmp$deg[i] <- tmp$deg[i - 1] - 90 }\n  }\n  tmp |>\n    mutate(deg = deg %% 360,\n           dis = ifelse(deg %in% c(180, 270), -dis, dis)) |>\n    group_by(deg) |>\n      summarise(n = sum(dis)) |>\n      ungroup() |>\n    mutate(deg = ifelse(deg %% 360 %in% c(0, 180), TRUE, FALSE)) |>\n    group_by(deg) |>\n      summarise(n = sum(n)) |>\n      ungroup() |>\n    pull(n) -> point\n  points <- rbind(points, unname(point))\n}\npoints <- rbind(t(c(0, 0)), points)\n\ntmp <- t(c(NA, NA))\n\nfor(i in 1:(nrow(points) - 1)) {\n  tmp <- \n    rbind(tmp, cbind(points[i,1]:points[i+1,1], points[i,2]:points[i+1,2]))\n}\n\nWarning in cbind(points[i, 1]:points[i + 1, 1], points[i, 2]:points[i + : number\nof rows of result is not a multiple of vector length (arg 1)\n\ntmp <- tmp[-1,]\nfor(i in 1:(nrow(tmp) - 1)) {\n  if(all(tmp[i,] == tmp[i+1,])) {\n    tmp[i,] <- t(c(NA, NA))\n  }\n}\ntmp <- na.omit(tmp)\nsum(tmp[duplicated(tmp),][1,])\n\n[1] 151"
  },
  {
    "objectID": "2016/02/2016-02.html",
    "href": "2016/02/2016-02.html",
    "title": "2016-02: Bathroom Security",
    "section": "",
    "text": "library(data.table)\nlibrary(stringi)"
  },
  {
    "objectID": "2016/02/2016-02.html#part-1",
    "href": "2016/02/2016-02.html#part-1",
    "title": "2016-02: Bathroom Security",
    "section": "Part 1",
    "text": "Part 1\n\nmat <- matrix(1:9, 3, 3)\n\nstartX <<- 2\nstartY <<- 2\napply(dt, 1, function(x) {\n  sapply(unlist(stri_match_all_regex(x, \"[ULRD]\")), function(y) {\n    if (y == \"U\") { startY <<- startY - 1 }\n    else if (y == \"D\") { startY <<- startY + 1 }\n    else if (y == \"L\") { startX <<- startX - 1 }\n    else { startX <<- startX + 1 }\n    \n    if(startX == 0) { startX <<- 1 }\n    else if (startX == 4) {startX <<- 3}\n    \n    if(startY == 0) { startY <<- 1 }\n    else if (startY == 4) {startY <<- 3}\n  })\n  return(rbind(startX, startY))\n}) |> \n  t() |>\n  apply(1, function(x) {\n    return(mat[x[1], x[2]])\n  }) |>\n  paste0(collapse = \"\")\n\n[1] \"82958\""
  },
  {
    "objectID": "2016/02/2016-02.html#part-2",
    "href": "2016/02/2016-02.html#part-2",
    "title": "2016-02: Bathroom Security",
    "section": "Part 2",
    "text": "Part 2\n\nmat <- as.matrix(fread(\"grid2.csv\", header = FALSE, na.strings = \"\"))\n\nstartX <<- 3\nstartY <<- 1\n\napply(dt, 1, function(x) {\n  sapply(unlist(stri_match_all_regex(x, \"[ULRD]\")), function(y) {\n    if (y == \"L\") { \n      startY <<- startY - 1\n      if (startY == 0 || is.na(mat[startX,startY])) { startY <<- startY + 1 }\n    } else if (y == \"R\") { \n      startY <<- startY + 1 \n      if (startY == 6 || is.na(mat[startX,startY])) { startY <<- startY - 1 }\n    } else if (y == \"U\") { \n      startX <<- startX - 1 \n      if (startX == 0 || is.na(mat[startX,startY])) { startX <<- startX + 1 }\n    } else { \n      startX <<- startX + 1 \n      if (startX == 6 || is.na(mat[startX,startY])) { startX <<- startX - 1 }\n    }\n  })\n  return(rbind(startX, startY))\n}) |> \n  t() |>\n  apply(1, function(x) {\n    return(mat[x[1], x[2]])\n  }) |>\n  paste0(collapse = \"\") |>\n  stri_replace_all_regex(\" \", \"\")\n\n[1] \"B3DB8\""
  },
  {
    "objectID": "2016/03/2016-03.html",
    "href": "2016/03/2016-03.html",
    "title": "2016-03: Squares With Three Sides",
    "section": "",
    "text": "library(data.table)"
  },
  {
    "objectID": "2016/03/2016-03.html#part-1",
    "href": "2016/03/2016-03.html#part-1",
    "title": "2016-03: Squares With Three Sides",
    "section": "Part 1",
    "text": "Part 1\n\ndt <- dtM\ndt$valid <- ifelse(dt$a + dt$b > dt$c &\n                     dt$a + dt$c > dt$b &\n                     dt$b + dt$c > dt$a, TRUE, FALSE)\ntable(dt$valid)[\"TRUE\"]\n\nTRUE \n 862"
  },
  {
    "objectID": "2016/03/2016-03.html#part-2",
    "href": "2016/03/2016-03.html#part-2",
    "title": "2016-03: Squares With Three Sides",
    "section": "Part 2",
    "text": "Part 2\n\ndt <- dtM\ndt <- data.table(t(matrix(c(dt$a, dt$b, dt$c), 3, nrow(dt)))) |>\n  `colnames<-`(c(letters[1:3]))\n\ndt$valid <- ifelse(dt$a + dt$b > dt$c & \n                     dt$a + dt$c > dt$b &\n                     dt$b + dt$c > dt$a, TRUE, FALSE)\ntable(dt$valid)[\"TRUE\"]\n\nTRUE \n1577"
  },
  {
    "objectID": "2016/04/2016-04.html",
    "href": "2016/04/2016-04.html",
    "title": "2016-04: Security Through Obscurity",
    "section": "",
    "text": "library(stringi)"
  },
  {
    "objectID": "2016/04/2016-04.html#part-1",
    "href": "2016/04/2016-04.html#part-1",
    "title": "2016-04: Security Through Obscurity",
    "section": "Part 1",
    "text": "Part 1\n\nstri_extract_all_regex(dt, \"[a-z]+\") |>\n  lapply(function(x) {\n    x <- paste0(x, collapse = \"\") |>\n      strsplit(\"\") |>\n      unlist()\n    check <- x[(length(x) - 4):length(x)]\n    x <- x[1:(length(x) - 4)]\n    x <- sort(table(x), decreasing = TRUE)[1:5]\n    \n    check <- paste0(check, collapse = \"\")\n    x <- paste0(names(x), collapse = \"\")\n    \n    if(x == check) { return(TRUE) }\n    return(FALSE)\n  }) |>\n  unlist() -> tmp\n\ndt[tmp] |>\n  stri_extract_all_regex(\"[0-9]*\", simplify = TRUE) |>\n  as.numeric() |>\n  sum(na.rm = TRUE)\n\n[1] 361724"
  },
  {
    "objectID": "2016/04/2016-04.html#part-2",
    "href": "2016/04/2016-04.html#part-2",
    "title": "2016-04: Security Through Obscurity",
    "section": "Part 2",
    "text": "Part 2\n\nx <- lapply(dt[tmp], function(x) {\n  x <- unlist(stri_match_all(x , regex = \"(.*)-([0-9]*)\"))\n  y <- as.numeric(x[3])\n  x <- unlist(strsplit(x[2], \"-\"))\n  x <- cipheR::caesar(x[-length(x)], n = y, preset = \"lowercase\")\n  return(paste(x, collapse = \" \"))\n}) |>\n  unlist()\n\nas.numeric(stri_extract(dt[tmp][which(x == \"northpole object\")], \n                        regex = \"([0-9]{3})\"))\n\n[1] 482"
  },
  {
    "objectID": "2017/01/2017-01.html",
    "href": "2017/01/2017-01.html",
    "title": "2017-01: Inverse Captcha",
    "section": "",
    "text": "library(data.table)\nlibrary(magrittr)\n\ndt <- readLines(\"input.txt\") |>\n  strsplit(\"\") |>\n  unlist() |>\n  as.numeric()"
  },
  {
    "objectID": "2017/01/2017-01.html#part-1",
    "href": "2017/01/2017-01.html#part-1",
    "title": "2017-01: Inverse Captcha",
    "section": "Part 1",
    "text": "Part 1\n\ndata.table(\n  \"input\" = c(dt),\n  \"test\" = c(dt[-1], dt[1])\n) %>%\n  .[, \"valid\" := ifelse(input == test, TRUE, FALSE)] %>%\n  .[valid == TRUE, test] %>%\n  sum()\n\n[1] 1031"
  },
  {
    "objectID": "2017/01/2017-01.html#part-2",
    "href": "2017/01/2017-01.html#part-2",
    "title": "2017-01: Inverse Captcha",
    "section": "Part 2",
    "text": "Part 2\n\nlen <- length(dt) / 2\ndata.table(\n  \"input\" = c(dt),\n  \"test\" = c(dt[(len + 1):length(dt)], dt[1:len])\n) %>%\n  .[, \"valid\" := ifelse(input == test, TRUE, FALSE)] %>%\n  .[valid == TRUE, test] %>%\n  sum()\n\n[1] 1080"
  },
  {
    "objectID": "2017/02/2017-02.html",
    "href": "2017/02/2017-02.html",
    "title": "2017-02: Corruption Checksum",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()"
  },
  {
    "objectID": "2017/02/2017-02.html#part-1",
    "href": "2017/02/2017-02.html#part-1",
    "title": "2017-02: Corruption Checksum",
    "section": "Part 1",
    "text": "Part 1\n\ndt %>%\n  rowwise() %>%\n  mutate(\n    \"min\" = min(across()),\n    \"max\" = max(across())\n  ) %>%\n  mutate(\"diff\" = max - min) %>%\n  pull(diff) %>%\n  sum()\n\n[1] 36174"
  },
  {
    "objectID": "2017/02/2017-02.html#part-2",
    "href": "2017/02/2017-02.html#part-2",
    "title": "2017-02: Corruption Checksum",
    "section": "Part 2",
    "text": "Part 2\n\napply(dt, 1, function(x) {\n  expand.grid(x, x) %>%\n    filter(Var1 != Var2) %>%\n    mutate(\"valid\" = ifelse(Var1 %% Var2 == 0, TRUE, FALSE)) %>%\n    filter(valid) %>%\n    mutate(\"val\" = Var1 / Var2) %>%\n    pull(val)\n}) %>%\n  sum()\n\n[1] 244"
  },
  {
    "objectID": "2017/03/2017-03.html",
    "href": "2017/03/2017-03.html",
    "title": "2017-03: Spiral Memory",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ninput <- 265149"
  },
  {
    "objectID": "2017/03/2017-03.html#part-1",
    "href": "2017/03/2017-03.html#part-1",
    "title": "2017-03: Spiral Memory",
    "section": "Part 1",
    "text": "Part 1\n\ngrid_dim <- ceiling(sqrt(input))\n\ndiff <- (grid_dim ^ 2) - input\n\nside <- case_when(\n  diff < grid_dim ~ \"bottom\",\n  diff >= grid_dim & diff < grid_dim * 2 ~ \"left\",\n  diff >= grid_dim * 2 & diff < grid_dim * 3 ~ \"top\",\n  diff >= grid_dim * 3 & diff < grid_dim * 4 ~ \"right\",\n)\n\nmid <- ((grid_dim - 1) / 2)\nabs((grid_dim - diff) - mid) + mid - 1\n\n[1] 438"
  },
  {
    "objectID": "2017/03/2017-03.html#part-2",
    "href": "2017/03/2017-03.html#part-2",
    "title": "2017-03: Spiral Memory",
    "section": "Part 2",
    "text": "Part 2\n\ndata.frame(x = 1:23,\n           y = c(1, 1, 2, 4, 5, 10, 11, 23, 25, 26, 54, 57, 59, \n                 122, 133, 142, 147, 304, 330, 351, 362, 747, 806))\n\n    x   y\n1   1   1\n2   2   1\n3   3   2\n4   4   4\n5   5   5\n6   6  10\n7   7  11\n8   8  23\n9   9  25\n10 10  26\n11 11  54\n12 12  57\n13 13  59\n14 14 122\n15 15 133\n16 16 142\n17 17 147\n18 18 304\n19 19 330\n20 20 351\n21 21 362\n22 22 747\n23 23 806\n\nmat <- matrix(NA, 5, 5)\n\nx <- 1\nr <- ceiling(5 / 2)\nc <- ceiling(5 / 2)\ntarget <- 1\nplace <- 0\nmat[r,c] <- x\n\n# while (x < input) {\n#   mat[r,c] <- sum(mat[(r-1):(r+1), (c-1):(c+1)], na.rm = TRUE)\n#   if (is.na(mat[r-1,c])) {}\n# }"
  },
  {
    "objectID": "2018/01/2018-01.html",
    "href": "2018/01/2018-01.html",
    "title": "2018-01: Chronal Calibration",
    "section": "",
    "text": "https://adventofcode.com/2018/day/1"
  },
  {
    "objectID": "2018/01/2018-01.html#part-1",
    "href": "2018/01/2018-01.html#part-1",
    "title": "2018-01: Chronal Calibration",
    "section": "Part 1",
    "text": "Part 1\n\nsum(dt$V1)\n\n[1] 425"
  },
  {
    "objectID": "2018/01/2018-01.html#part-2",
    "href": "2018/01/2018-01.html#part-2",
    "title": "2018-01: Chronal Calibration",
    "section": "Part 2",
    "text": "Part 2\n\nbreakFlag <- FALSE\nre_pete <- 1\nwhile (!breakFlag) {\n  vec <- cumsum(rep(dt$V1, re_pete))\n  \n  twice <- vec[duplicated(vec)]\n  \n  if (length(twice >= 1)) {\n    print(twice[1])\n    breakFlag <- TRUE\n  } else {\n    re_pete <- re_pete + 1\n  }\n}\n\n[1] 57538"
  },
  {
    "objectID": "2018/02/2018-02.html",
    "href": "2018/02/2018-02.html",
    "title": "2018-02: Inventory Management System",
    "section": "",
    "text": "library(data.table)\ndt <- fread(\"input.txt\", header = FALSE)\nhead(dt)\n\n                           V1\n1: jplenqtlagxhivmwmscfukzodp\n2: jbrehqtlagxhivmeyscfuvzodp\n3: jbreaqtlagxzivmwysofukzodp\n4: jxrgnqtlagxhivmwyscfukwodp\n5: jbrenqtwagjhivmwysxfukzodp\n6: jbrenqplagxhivmwyscfuazoip"
  },
  {
    "objectID": "2018/02/2018-02.html#part-1",
    "href": "2018/02/2018-02.html#part-1",
    "title": "2018-02: Inventory Management System",
    "section": "Part 1",
    "text": "Part 1\n\nsapply(strsplit(dt$V1, \"\"), function(x) {\n  x <- table(x)\n  x <- unique(x[x %in% 2:3])\n}) |>\n  unlist() |>\n  unname() |>\n  table() |>\n  prod()\n\n[1] 8118"
  },
  {
    "objectID": "2018/02/2018-02.html#part-2",
    "href": "2018/02/2018-02.html#part-2",
    "title": "2018-02: Inventory Management System",
    "section": "Part 2",
    "text": "Part 2\n\nmat <- adist(dt$V1)\nmat <- as.character(expand.grid(dt$V1, dt$V1)[which(mat == 1),][,1])\nmat <- strsplit(mat, \"\")\npaste0(mat[[1]][mat[[1]] == mat[[2]]], collapse = \"\")\n\n[1] \"jbbenqtlaxhivmwyscjukztdp\""
  },
  {
    "objectID": "2018/03/2018-03.html",
    "href": "2018/03/2018-03.html",
    "title": "2018-03: No Matter How You Slice It",
    "section": "",
    "text": "library(data.table)\nlibrary(stringi)\ndt <- readLines(\"input.txt\")\npattern <- \n  \"#([0-9]{1,4}) @ ([0-9]{0,4}),([0-9]{0,4}): ([0-9]{0,4})x([0-9]{0,4})\"\ndt <- \n  data.table(do.call(rbind, stri_match_all_regex(dt, pattern)))\ncolnames(dt) <- c(\"input\", \"id\", \"xPos\", \"yPos\", \"xSize\", \"ySize\")\ndt <- data.table(apply(dt[, 2:6], 2, as.numeric))\nhead(dt)\n\n   id xPos yPos xSize ySize\n1:  1  393  863    11    29\n2:  2  675  133    15    26\n3:  3  690  605    25    22\n4:  4  342  752    19    17\n5:  5  840   36    14    18\n6:  6  671  653    10    23"
  },
  {
    "objectID": "2018/03/2018-03.html#part-1",
    "href": "2018/03/2018-03.html#part-1",
    "title": "2018-03: No Matter How You Slice It",
    "section": "Part 1",
    "text": "Part 1\n\nmat <- matrix(0, 1000, 1000)\nfor(x in 1:nrow(dt)) {\n  xPos <- dt$xPos[x] + 1\n  xSize <- dt$xSize[x] - 1\n  yPos <- dt$yPos[x] + 1\n  ySize <- dt$ySize[x] - 1\n  mat[xPos:(xPos + xSize), yPos:(yPos + ySize)] <- \n    mat[xPos:(xPos + xSize), yPos:(yPos + ySize)] + 1\n}\nlength(mat[mat >= 2])\n\n[1] 98005"
  },
  {
    "objectID": "2018/03/2018-03.html#part-2",
    "href": "2018/03/2018-03.html#part-2",
    "title": "2018-03: No Matter How You Slice It",
    "section": "Part 2",
    "text": "Part 2\n\nfor(x in 1:nrow(dt)) {\n  xPos <- dt$xPos[x] + 1\n  xSize <- dt$xSize[x] - 1\n  yPos <- dt$yPos[x] + 1\n  ySize <- dt$ySize[x] - 1\n  if (all(mat[xPos:(xPos + xSize), yPos:(yPos + ySize)] == 1)) { print(x) }\n}\n\n[1] 331"
  },
  {
    "objectID": "2018/04/2018-04.html",
    "href": "2018/04/2018-04.html",
    "title": "2018-04: Repose Record",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(stringi)"
  },
  {
    "objectID": "2018/04/2018-04.html#part-1",
    "href": "2018/04/2018-04.html#part-1",
    "title": "2018-04: Repose Record",
    "section": "Part 1",
    "text": "Part 1\n\ndata.table(\"day\" =\n             rep(seq.Date(as.Date(min(dt$time)), \n                          as.Date(max(dt$time)), \n                          by = \"day\"), \n                 each = 60),\n           \"minute\" = 0:59) |>\n  left_join(dt, by = c(\"day\", \"minute\")) |>\n  select(-time) |>\n  arrange(day, minute) |>\n  fill(action, guard) |>\n  filter(action == \"asleep\") |>\n  dcast(guard ~ minute, value.var = \"action\", fun.aggregate = length) -> saved\nsaved %>%\n  mutate(total = rowSums(.) - guard) |>\n  filter(total == max(total)) |>\n  select(-total) |>\n  as.vector() |>\n  unlist() -> vec\n\nunname(vec[\"guard\"] * as.numeric(names(which.max(vec[-1]))))\n\n[1] 146622"
  },
  {
    "objectID": "2018/04/2018-04.html#part-2",
    "href": "2018/04/2018-04.html#part-2",
    "title": "2018-04: Repose Record",
    "section": "Part 2",
    "text": "Part 2\n\nsaved |>\n  pivot_longer(cols = matches(\"[0-9]{1,2}\"), names_to = \"minute\", values_to = \"times\") |>\n  filter(times == max(times)) |>\n  mutate(value = guard * as.numeric(minute)) |>\n  pull(value)\n\n[1] 31848"
  },
  {
    "objectID": "2018/05/2018-05.html",
    "href": "2018/05/2018-05.html",
    "title": "2018-05: Alchemical Reduction",
    "section": "",
    "text": "library(stringi)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose"
  },
  {
    "objectID": "2018/05/2018-05.html#part-1",
    "href": "2018/05/2018-05.html#part-1",
    "title": "2018-05: Alchemical Reduction",
    "section": "Part 1",
    "text": "Part 1\n\nreduced <- TRUE\nwhile(reduced) {\n  old <- length(dt)\n  for (x in 1:(old - 1)) {\n    if (dt[x] != dt[x + 1] & toupper(dt[x]) == toupper(dt[x + 1])) {\n      dt[c(x, x + 1)] <- \"\"\n      reduced <- TRUE\n    }\n  }\n  dt <- dt[dt != \"\"]\n  if(old == length(dt)) {\n    reduced <- FALSE\n  }\n}\nlength(dt)\n\n[1] 10598"
  },
  {
    "objectID": "2018/05/2018-05.html#part-2",
    "href": "2018/05/2018-05.html#part-2",
    "title": "2018-05: Alchemical Reduction",
    "section": "Part 2",
    "text": "Part 2\n\nsapply(1:26, function(l) {\n  tmp <- stri_replace_all_regex(dt, paste0(letters[l], \"|\", LETTERS[l]), \"\")\n  reduced <- TRUE\n  while (reduced) {\n    old <- length(tmp)\n    for (x in 1:(old - 1)) {\n      if (tmp[x] != tmp[x + 1] & toupper(tmp[x]) == toupper(tmp[x + 1])) {\n        tmp[c(x, x + 1)] <- \"\"\n        reduced <- TRUE\n      }\n    }\n    tmp <- tmp[tmp != \"\"]\n    if (old == length(tmp)) {\n      reduced <- FALSE\n    }\n  }\n  length(tmp)\n}) |>\n  min()\n\n[1] 5312"
  },
  {
    "objectID": "2018/06/2018-06.html",
    "href": "2018/06/2018-06.html",
    "title": "2018-06: Chronal Coordinates",
    "section": "",
    "text": "library(data.table)\nlibrary(dbscan)\n\n\nAttaching package: 'dbscan'\n\n\nThe following object is masked from 'package:stats':\n\n    as.dendrogram"
  },
  {
    "objectID": "2018/06/2018-06.html#part-1",
    "href": "2018/06/2018-06.html#part-1",
    "title": "2018-06: Chronal Coordinates",
    "section": "Part 1",
    "text": "Part 1\n\nsize <- max(max(dt$x), max(dt$y))\nmat <- matrix(NA, size, size)\nmat[as.matrix(dt[, 1:2])] <- dt$id\n\nfor(x in 1:ncol(mat)) {\n  for(y in 1:nrow(mat)) {\n    distX <- abs(x - dt$x)\n    distY <- abs(y - dt$y)\n    dist <- (distX + distY) / 2\n    closest <- dist[dist == min(dist)]\n    mat[x,y] <- ifelse(length(closest) == 1, which.min(dist), NA)\n  }\n}\n\nedges <- unique(c(mat[1, ], mat[,1], mat[nrow(mat), ], mat[, ncol(mat)]))\nmat[mat %in% edges] <- NA\nmax(table(mat))\n\n[1] 4166"
  },
  {
    "objectID": "2018/06/2018-06.html#part-2",
    "href": "2018/06/2018-06.html#part-2",
    "title": "2018-06: Chronal Coordinates",
    "section": "Part 2",
    "text": "Part 2\n\ngrid <- expand.grid(1:size, 1:size)\nsapply(1:nrow(grid), function(i) {\n  dist <- abs(dt$x - grid$Var1[i]) + abs(dt$y - grid$Var2[i])\n  if(sum(dist) < 10000) { return(i) }\n  else { return(NA) }\n}) |> \n  na.exclude() |>\n  length()\n\n[1] 42250"
  },
  {
    "objectID": "2018/07/2018-07.html",
    "href": "2018/07/2018-07.html",
    "title": "2018-07: The Sum of Its Parts",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose"
  },
  {
    "objectID": "2018/07/2018-07.html#part-1",
    "href": "2018/07/2018-07.html#part-1",
    "title": "2018-07: The Sum of Its Parts",
    "section": "Part 1",
    "text": "Part 1\n\nDiagrammeR::mermaid(c(\"graph LR;\",\n                      apply(dt[rowSums(is.na(dt)) == 0, ], 1, function(x) {\n                        paste0(x[\"predecessor\"], \" --> \", x[\"task\"], \";\")\n                      })))\n\n\n\n\n\n\nstart <- unique(p[!(p %in% t)])\nend <- unique(t[!(t %in% p)])\nvec <- c()\nls <- list()\n\ngetParent <- function(x) {\n  x <- dt$predecessor[dt$task %in% x]\n  if(length(x) > 0) {\n    x <- rev(sort(unique(x)))\n    ls <<- append(ls, paste(rev(x), collapse = \"\"))\n    vec <<- c(vec, x)\n    return(getParent(x))\n  } else { return(x) }\n}\n\ngetParent(end)\n\ncharacter(0)\n\nlapply(ls, function(x) {\n  unique(str_split(x, \"\"))\n}) |>\n  rev() |>\n  unlist() |>\n  unique() -> vec\npaste(c(vec, end), collapse = \"\")\n\n[1] \"CABDFE\"\n\n\nKVCSHBXDQMJGFZYROUAPLIEWTN CKVSHBXDQMJGFZYROUAPLIEWTN KVCBSHXDJMGQFYRZOAULPIEWTN KCVBHSDXFGJMQRYZOAULPIEWTN"
  },
  {
    "objectID": "2019/01/2019-01.html",
    "href": "2019/01/2019-01.html",
    "title": "2019-01: The Tyranny of the Rocket Equation",
    "section": "",
    "text": "dt <- as.numeric(readLines(\"input.txt\"))"
  },
  {
    "objectID": "2019/01/2019-01.html#part-1",
    "href": "2019/01/2019-01.html#part-1",
    "title": "2019-01: The Tyranny of the Rocket Equation",
    "section": "Part 1",
    "text": "Part 1\n\nsum(floor(dt / 3) - 2)\n\n[1] 3512133"
  },
  {
    "objectID": "2019/01/2019-01.html#part-2",
    "href": "2019/01/2019-01.html#part-2",
    "title": "2019-01: The Tyranny of the Rocket Equation",
    "section": "Part 2",
    "text": "Part 2\n\nx <- 1\ntotal <- 0\nsapply(dt, function(x) {\n  total <- 0\n  val <- x\n  while (floor(val / 3) - 2 >= 0) {\n    val <- floor(val / 3) - 2\n    total <- total + val\n  }\n  return(total)\n}) |>\n  sum()\n\n[1] 5265294"
  },
  {
    "objectID": "2019/02/2019-02.html",
    "href": "2019/02/2019-02.html",
    "title": "Day 2: 1202 Program Alarm",
    "section": "",
    "text": "library(mistlecode)"
  },
  {
    "objectID": "2019/02/2019-02.html#part-1",
    "href": "2019/02/2019-02.html#part-1",
    "title": "Day 2: 1202 Program Alarm",
    "section": "Part 1",
    "text": "Part 1\n\ndt <- dtM\ndt[1 + 1] <- 12\ndt[2 + 1] <- 2\nd <- 0\nx <- 1\nwhile(d != 99) {\n  if (dt[x] == 1) { dt[dt[x + 3] + 1] <- dt[dt[x + 1] + 1] + dt[dt[x + 2] + 1] }\n  else if (dt[x] == 2) { dt[dt[x + 3] + 1] <- dt[dt[x + 1] + 1] * dt[dt[x + 2] + 1] }\n  x <- x + 4\n  d <- dt[x]\n}\ndt[1]\n\n[1] 3706713\n\nx\n\n[1] 125"
  },
  {
    "objectID": "2019/02/2019-02.html#part-2",
    "href": "2019/02/2019-02.html#part-2",
    "title": "Day 2: 1202 Program Alarm",
    "section": "Part 2",
    "text": "Part 2\n\nbreakFlag <- FALSE\nfor (i in 0:99) {\n  for (j in 0:99) {\n    dt <- dtM\n    dt[1 + 1] <- i\n    dt[2 + 1] <- j\n    d <- 0\n    x <- 1\n    while (d != 99) {\n      if (dt[x] == 1) {\n        dt[dt[x + 3] + 1] <- dt[dt[x + 1] + 1] + dt[dt[x + 2] + 1]\n      }\n      else if (dt[x] == 2) {\n        dt[dt[x + 3] + 1] <- dt[dt[x + 1] + 1] * dt[dt[x + 2] + 1]\n      }\n      x <- x + 4\n      d <- dt[x]\n    }\n    if (dt[1] == 19690720) {\n      breakFlag <- TRUE\n      break\n    }\n  }\n  if (breakFlag) { break }\n}\n100 * dt[1 + 1] + dt[2 + 1]\n\n[1] 8609"
  },
  {
    "objectID": "2019/03/2019-03.html",
    "href": "2019/03/2019-03.html",
    "title": "2019-03: Crossed Wires",
    "section": "",
    "text": "library(mistlecode)\n\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse"
  },
  {
    "objectID": "2019/03/2019-03.html#part-1",
    "href": "2019/03/2019-03.html#part-1",
    "title": "2019-03: Crossed Wires",
    "section": "Part 1",
    "text": "Part 1\n\ndtM <- lapply(dtMM, expand_directions, preserve_data = TRUE)\n\ndtM[[1]] <- follow_directions(dtM[[1]], 0, 0, preserve_data = TRUE)\ndtM[[2]] <- follow_directions(dtM[[2]], 0, 0, preserve_data = TRUE)\n\ninner_join(dtM[[1]], dtM[[2]], by = c(\"row\", \"col\")) |>\n  mutate(dist = abs(row) + abs(col)) |>\n  arrange(dist) |>\n  head(1) |>\n  pull(dist)\n\n[1] 1264"
  },
  {
    "objectID": "2019/03/2019-03.html#part-2",
    "href": "2019/03/2019-03.html#part-2",
    "title": "2019-03: Crossed Wires",
    "section": "Part 2",
    "text": "Part 2\n\ndtM[[1]] <- \n  dtM[[1]] |>\n  mutate(step = row_number())\ndtM[[2]] <- \n  dtM[[2]] |>\n  mutate(step = row_number())\n\ninner_join(dtM[[1]], dtM[[2]], by = c(\"row\", \"col\")) |>\n  mutate(steps = step.x + step.y) |>\n  arrange(steps) |>\n  head(1) |>\n  pull(steps)\n\n[1] 37390"
  },
  {
    "objectID": "2019/04/2019-04.html",
    "href": "2019/04/2019-04.html",
    "title": "2019-04: Secure Container",
    "section": "",
    "text": "library(mistlecode)\n\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse"
  },
  {
    "objectID": "2019/04/2019-04.html#part-2",
    "href": "2019/04/2019-04.html#part-2",
    "title": "2019-04: Secure Container",
    "section": "Part 2",
    "text": "Part 2\n\ns2 <-\n  sapply(dt, \\(s) {\n    s <- str_split(s, \"\") |> unlist() |> table()\n    s <- ifelse(any(s == 2), TRUE, FALSE)\n    return(s)\n  })\nsum(s2)\n\n[1] 763"
  },
  {
    "objectID": "2020/01/2020-01.html",
    "href": "2020/01/2020-01.html",
    "title": "2020-01: Report Repair",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ndf <- read.csv(\"Input.csv\")\nhead(df)\n\n  values\n1   1768\n2   1847\n3   1905\n4   1713\n5   1826\n6   1846"
  },
  {
    "objectID": "2020/01/2020-01.html#part-1",
    "href": "2020/01/2020-01.html#part-1",
    "title": "2020-01: Report Repair",
    "section": "Part 1",
    "text": "Part 1\n\nkey <- NA\n\nfor(x in 1:200) {\n  for(y in 1:200) {\n    if((df$values[x] + df$values[y]) == 2020) {\n      print(paste(df$values[x], df$values[y]))\n      key <- df$values[x] * df$values[y]\n      print(key)\n    }\n    if(!is.na(key))\n      break\n  }\n}\n\n[1] \"1825 195\"\n[1] 355875"
  },
  {
    "objectID": "2020/01/2020-01.html#part-2",
    "href": "2020/01/2020-01.html#part-2",
    "title": "2020-01: Report Repair",
    "section": "Part 2",
    "text": "Part 2\n\nkey <- NA\n\nfor(x in 1:200) {\n  for(y in 1:200) {\n    for(z in 1:200) {\n      if((df$values[x] + df$values[y]) + df$values[z] == 2020) {\n        print(paste(df$values[x], df$values[y], df$values[z]))\n        key <- df$values[x] * df$values[y] * df$values[z]\n        print(key)\n      }\n      if(!is.na(key))\n        break\n    }\n  }\n}\n\n[1] \"346 1380 294\"\n[1] 140379120"
  },
  {
    "objectID": "2020/02/2020-02.html",
    "href": "2020/02/2020-02.html",
    "title": "2020-02: Password Philosophy",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ndf <- read.csv(\"input.csv\")\nhead(df)\n\n  min max letter             password\n1   1  14      b  bbbbbbbbbbbbbbbbbbb\n2   3  14      v      vvpvvvmvvvvvvvv\n3   2   5      m              mfvxmmm\n4  15  20      z zdzzzrjzzzdpzzdzzzzz\n5   6   8      g           tggjggggrg\n6   2   3      l                nlllw"
  },
  {
    "objectID": "2020/02/2020-02.html#part-1",
    "href": "2020/02/2020-02.html#part-1",
    "title": "2020-02: Password Philosophy",
    "section": "Part 1",
    "text": "Part 1\n\ncount <- 0\n\nfor(i in 1:nrow(df)) {\n  if(str_count(df$password[i], as.character(df$letter[i])) >= df$min[i] & \n     str_count(df$password[i], as.character(df$letter[i])) <= df$max[i])\n    count <- count + 1\n}\n\ncount\n\n[1] 548"
  },
  {
    "objectID": "2020/02/2020-02.html#part-2",
    "href": "2020/02/2020-02.html#part-2",
    "title": "2020-02: Password Philosophy",
    "section": "Part 2",
    "text": "Part 2\n\ncount <- 0\n\nfor(i in 1:nrow(df)) {\n  sub <- paste(substr(df$password[i], df$min[i], df$min[i]), \n               substr(df$password[i], df$max[i], df$max[i]))\n  if(str_count(sub, as.character(df$letter[i])) == 1)\n    count <- count + 1\n}\n\ncount\n\n[1] 502"
  },
  {
    "objectID": "2020/03/2020-03.html",
    "href": "2020/03/2020-03.html",
    "title": "2020-03: Toboggan Trajectory",
    "section": "",
    "text": "library(stringr)\ndf <- read.csv(\"input2.csv\")"
  },
  {
    "objectID": "2020/03/2020-03.html#part-1",
    "href": "2020/03/2020-03.html#part-1",
    "title": "2020-03: Toboggan Trajectory",
    "section": "Part 1",
    "text": "Part 1\n\nx <- 1\npounds <- \"\"\nxVals <- c()\n\nfor(y in 1:323) {\n  pounds <- paste(pounds, as.character(df[y, x]), sep = \"\")\n  if(x + 3 > 31)\n    x <- x + 3 - 31\n  else\n    x <- x + 3\n  xVals <- append(xVals, as.character(x))\n}\n\nstr_count(pounds, \"#\")\n\n[1] 228"
  },
  {
    "objectID": "2020/03/2020-03.html#part-2",
    "href": "2020/03/2020-03.html#part-2",
    "title": "2020-03: Toboggan Trajectory",
    "section": "Part 2",
    "text": "Part 2\n\nover <- c(1, 3, 5, 7, 1)\ndown <- c(1, 1, 1, 1, 2)\nrunning_total <- 1\n\nfor(z in 1:5) {\n  x <- 1\n  pounds <- \"\"\n\n  for(y in seq(1, 323, by = down[z])) {\n    pounds <- paste(pounds, as.character(df[y, x]), sep = \"\")\n    if(x + over[z] > 31)\n      x <- x + over[z] - 31\n    else\n      x <- x + over[z]\n  }\n  running_total <- running_total * str_count(pounds, \"#\")\n}\nrunning_total\n\n[1] 6818112000"
  },
  {
    "objectID": "2020/04/2020-04.html",
    "href": "2020/04/2020-04.html",
    "title": "2020-04: Passport Processing",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(readxl)\n\ndf <- read_excel(\"input.xls\")\ndf\n\n# A tibble: 1,169 × 8\n   X1         X2          X3            X4         X5    X6    X7    X8   \n   <chr>      <chr>       <chr>         <chr>      <chr> <chr> <chr> <chr>\n 1 byr:2024   iyr:2016    <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n 2 eyr:2034   ecl:zzz     pid:985592671 hcl:033b48 <NA>  <NA>  <NA>  <NA> \n 3 hgt:181    cid:166     <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n 4 <NA>       <NA>        <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n 5 hgt:66cm   <NA>        <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n 6 pid:152cm  <NA>        <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n 7 hcl:cfb18a eyr:1947    <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n 8 byr:2020   ecl:zzz     iyr:2029      <NA>       <NA>  <NA>  <NA>  <NA> \n 9 <NA>       <NA>        <NA>          <NA>       <NA>  <NA>  <NA>  <NA> \n10 ecl:gry    hcl:#888785 eyr:2023      cid:63     <NA>  <NA>  <NA>  <NA> \n# … with 1,159 more rows"
  },
  {
    "objectID": "2020/04/2020-04.html#part-1",
    "href": "2020/04/2020-04.html#part-1",
    "title": "2020-04: Passport Processing",
    "section": "Part 1",
    "text": "Part 1\n\ncount <- 0\n\ntestDF <- df[1,]\n\nrow <- 1\ncolumn <- 1\nfor(r in 1:1169) {\n  for(c in 1:8) {\n    if(c == 1 & is.na(df[r,c])) {\n      column <- 1\n      row <- row + 1\n    }\n    if(!is.na(df[r,c])) {\n      testDF[row,column] <- df[r,c]\n      column <- column + 1\n    }\n  }\n}\n\npassports <- testDF\n\n\ncount <- 0\n\nfor(r in 1:299) {\n  if(rowSums(is.na(passports[r,])) == 0)\n      count <- count + 1\n  else if(!(apply(passports[r,], 1, function(x) {\n      any(substr(x, 1, 3) %in% \"cid\")\n    })) & rowSums(is.na(passports[r,])) == 1)\n      count <- count + 1\n}\ncount\n\n[1] 247"
  },
  {
    "objectID": "2020/04/2020-04.html#part-2",
    "href": "2020/04/2020-04.html#part-2",
    "title": "2020-04: Passport Processing",
    "section": "Part 2",
    "text": "Part 2\n\ncount <- 0\ndone <- FALSE\nfields <- c(\"byr\", \"iyr\", \"eyr\", \"hgt\", \"hcl\", \"ecl\", \"pid\", \"cid\")\nneeded <- c(\"byr\", \"iyr\", \"eyr\", \"hgt\", \"hcl\", \"ecl\", \"pid\")\npassport <- c()\n\ntestDF <- df[1,]\n\nrow <- 1\ncolumn <- 1\nfor(r in 1:1169) {\n  for(c in 1:8) {\n    if(c == 1 & is.na(df[r,c])) {\n      column <- 1\n      row <- row + 1\n    }\n    if(!is.na(df[r,c])) {\n      testDF[row,column] <- df[r,c]\n      column <- column + 1\n    }\n  }\n}\n\npassports <- testDF\npassports\n\n# A tibble: 299 × 8\n   X1          X2            X3            X4            X5    X6    X7    X8   \n   <chr>       <chr>         <chr>         <chr>         <chr> <chr> <chr> <chr>\n 1 byr:2024    iyr:2016      eyr:2034      ecl:zzz       pid:… hcl:… hgt:… cid:…\n 2 hgt:66cm    pid:152cm     hcl:cfb18a    eyr:1947      byr:… ecl:… iyr:… <NA> \n 3 ecl:gry     hcl:#888785   eyr:2023      cid:63        iyr:… hgt:… pid:… <NA> \n 4 pid:#5e832a ecl:dne       hcl:#7d3b0c   byr:2018      eyr:… hgt:… iyr:… cid:…\n 5 hcl:#888785 ecl:oth       eyr:2025      pid:597580472 iyr:… hgt:… byr:… cid:…\n 6 eyr:2029    cid:145       iyr:2026      pid:178cm     hgt:… ecl:… hcl:… byr:…\n 7 eyr:2024    ecl:amb       pid:349191561 iyr:2018      hgt:… byr:… hcl:… <NA> \n 8 byr:1998    pid:408617933 hcl:#fffffd   hgt:193cm     eyr:… ecl:… iyr:… <NA> \n 9 eyr:1964    byr:2026      hcl:#cfa07d   hgt:154cm     pid:… cid:… iyr:… ecl:…\n10 hgt:161cm   pid:021086946 iyr:2020      ecl:blu       eyr:… byr:… <NA>  <NA> \n# … with 289 more rows\n\n\n\nmatt <- passports[1,]\nmatt$valid <- NA\n\nfor(r in 1:299) {\n  temp <- passports[r,]\n  if(rowSums(is.na(passports[r,])) == 0 | \n     !(apply(passports[r,], 1, function(x) any(substr(x, 1, 3) %in% \"cid\"))) & \n     rowSums(is.na(passports[r,])) == 1)\n    temp$valid <- TRUE\n  else\n    temp$valid <- FALSE\n  matt <- rbind(matt, temp)\n}\nmatt <- matt[-1,]\n\nnewmatt <- matt[1,]\n\nfor(r in 1:299) {\n  for(c in 1:8) {\n    if(!is.na(matt[r,c])) {\n      if(substr(matt[r,c], 1, 3) == \"byr\")\n        newmatt[r,1] <- matt[r,c]\n      \n      else if(substr(matt[r,c], 1, 3) == \"iyr\") \n        newmatt[r,2] <- matt[r,c]\n      \n      else if(substr(matt[r,c], 1, 3) == \"eyr\")\n        newmatt[r,3] <- matt[r,c]\n      \n      else if(substr(matt[r,c], 1, 3) == \"hgt\") \n        newmatt[r,4] <- matt[r,c]\n    \n      else if(substr(matt[r,c], 1, 5) == \"hcl:#\") \n        newmatt[r,5] <- matt[r,c]\n      \n      else if(substr(matt[r,c], 1, 3) == \"ecl\") \n        newmatt[r,6] <- matt[r,c]\n      \n      else if(substr(matt[r,c], 1, 3) == \"pid\") \n        newmatt[r,7] <- matt[r,c]\n      \n      else if(substr(matt[r,c], 1, 3) == \"cid\")\n        newmatt[r,8] <- matt[r,c]\n      \n    }\n    else\n      newmatt[r,c] <- NA\n  }\n  newmatt[r,9] <- matt[r,9]\n}\n\n#sorted <- sorted[-1,]\n\nnewmatt$X1 <- str_replace_all(newmatt$X1, \"[a-z:]\", \"\")\nnewmatt$X2 <- str_replace_all(newmatt$X2, \"[a-z:]\", \"\")\nnewmatt$X3 <- str_replace_all(newmatt$X3, \"[a-z:]\", \"\")\nnewmatt$X4 <- substr(newmatt$X4, 5, nchar(newmatt$X4))\nnewmatt$X5 <- substr(newmatt$X5, 5, nchar(newmatt$X5))\nnewmatt$X6 <- substr(newmatt$X6, 5, nchar(newmatt$X6))\nnewmatt$X7 <- substr(newmatt$X7, 5, nchar(newmatt$X7))\nnewmatt$X8[!is.na(newmatt$X8)] <- TRUE\n\nnewmatt$X1 <- as.numeric(newmatt$X1)\nnewmatt$X2 <- as.numeric(newmatt$X2)\nnewmatt$X3 <- as.numeric(newmatt$X3)\n#newmatt$X7 <- as.numeric(newmatt$X7)\n\nnewmatt <- newmatt %>% filter(valid == TRUE)\nnewmatt$valid <- TRUE\n\n#the ants go marching one by one...\nnewmatt$flag <- 0\n\nnewmatt$valid <- ifelse(newmatt$X1 >= 1920 & newmatt$X1 <= 2002 & \n                          newmatt$valid == TRUE, TRUE, FALSE) #197\nnewmatt$valid <- ifelse(newmatt$X2 >= 2010 & newmatt$X2 <= 2020 & \n                          newmatt$valid == TRUE, TRUE, FALSE) #174\nnewmatt$valid <- ifelse(newmatt$X3 >= 2020 & newmatt$X3 <= 2030 & \n                          newmatt$valid == TRUE, TRUE, FALSE) #160\nnewmatt$flag <- \n  ifelse(newmatt$valid == TRUE & grepl(\"cm\", newmatt$X4) & \n           as.numeric(str_replace_all(newmatt$X4, \"[a-z]\", \"\")) >= 150 & \n           as.numeric(str_replace_all(newmatt$X4, \"[a-z]\", \"\")) <= 193, \n         newmatt$flag + 1, newmatt$flag)\nnewmatt$flag <- \n  ifelse(newmatt$valid == TRUE & grepl(\"in\", newmatt$X4) & \n           as.numeric(str_replace_all(newmatt$X4, \"[a-z]\", \"\")) >= 59 & \n           as.numeric(str_replace_all(newmatt$X4, \"[a-z]\", \"\")) <= 76, \n         newmatt$flag + 1, newmatt$flag)\nnewmatt$valid <- ifelse(newmatt$flag == 1, TRUE, FALSE)\nnewmatt$valid <- \n  ifelse(substr(newmatt$X5, 1, 1) == \"#\" & \n           grepl(\"[0-9a-f#]\", substr(newmatt$X5, 2, nchar(newmatt$X5) - 1)) & \n           nchar(newmatt$X5) == 7 & newmatt$valid == TRUE, TRUE, FALSE)\nnewmatt$valid <- \n  ifelse(grepl(\"(amb|blu|brn|gry|grn|hzl|oth)\", newmatt$X6) & \n           newmatt$valid == TRUE, TRUE, FALSE)\nnewmatt$valid <- \n  ifelse(nchar(newmatt$X7) == 9 & grepl(\"[0-9]\", newmatt$X7) & \n           newmatt$valid == TRUE, TRUE, FALSE)\n\nnewmatt %>%\n  filter(valid == TRUE) %>%\n  nrow()\n\n[1] 145"
  },
  {
    "objectID": "2020/05/2020-05.html",
    "href": "2020/05/2020-05.html",
    "title": "2020-05: Binary Boarding",
    "section": "",
    "text": "library(stringr)\nlibrary(DescTools)\n\ndf <- read.csv(\"input.csv\")"
  },
  {
    "objectID": "2020/05/2020-05.html#part-1",
    "href": "2020/05/2020-05.html#part-1",
    "title": "2020-05: Binary Boarding",
    "section": "Part 1",
    "text": "Part 1\n\ndf$rowbin <- df$X1\ndf$rowbin <- str_replace_all(df$rowbin, \"F\", \"0\")\ndf$rowbin <- str_replace_all(df$rowbin, \"B\", \"1\")\ndf$rownum <- BinToDec(df$rowbin)\n\ndf$colbin <- df$X2\ndf$colbin <- str_replace_all(df$colbin, \"L\", \"0\")\ndf$colbin <- str_replace_all(df$colbin, \"R\", \"1\")\ndf$colnum <- BinToDec(df$colbin)\n\n\ndf$seatid <- (df$rownum * 8) + df$colnum\nmax(df$seatid)\n\n[1] 828\n\nwrite.csv(df, \"input2.csv\")"
  },
  {
    "objectID": "2020/05/2020-05.html#part-2",
    "href": "2020/05/2020-05.html#part-2",
    "title": "2020-05: Binary Boarding",
    "section": "Part 2",
    "text": "Part 2\n\ndf <- df[order(df$seatid),]\n\n\nfor(i in 804:1) {\n  if(df$seatid[i + 1] - df$seatid[i] != 1) {\n    myseat <- df$seatid[i + 1] - 1\n    break\n  }\n}\n\nmyseat\n\n[1] 565"
  },
  {
    "objectID": "2020/06/2020-06.html",
    "href": "2020/06/2020-06.html",
    "title": "2020-06: Custom Customs",
    "section": "",
    "text": "library(readxl)\nlibrary(sets)\ndt <- read_xls(\"input.xls\")"
  },
  {
    "objectID": "2020/06/2020-06.html#part-1",
    "href": "2020/06/2020-06.html#part-1",
    "title": "2020-06: Custom Customs",
    "section": "Part 1",
    "text": "Part 1\nRecycling this from D4P2\n\ndf <- dt\ntestDF <- df[1,]\ndfRow <- 1\ndfColumn <- 1\nfor(r in 1:2001) {\n  if(!is.na(df[r,1])) {\n    testDF[dfRow, dfColumn] <- df[r,1]\n    dfColumn <- dfColumn + 1\n  }\n  else {\n    dfRow <- dfRow + 1\n    dfColumn <- 1\n  }\n}\ndf <- testDF\ndf\n\n# A tibble: 456 × 5\n   X1                X1                 X1                 X1              X1   \n   <chr>             <chr>              <chr>              <chr>           <chr>\n 1 tr                rt                 tr                 rt              tr   \n 2 fdrhu             gwuksvro           <NA>               <NA>            <NA> \n 3 tesnouwyrdf       twofuspcmvenh      <NA>               <NA>            <NA> \n 4 cnxpsmuqiaw       cxovminqpawus      qwaxjmupnsic       <NA>            <NA> \n 5 anpskchzojyeguwr  soqauprxzgmycvef   sorplgezycau       ngrecposyizwau  ayep…\n 6 mvwcl             vlcwxm             uwcflhpkjor        blnvwtic        wcmzl\n 7 hyvowmqzixc       lacsrjdyxiz        fyczpbxlti         <NA>            <NA> \n 8 qxjhrgefbkm       eqrgbfhjxkcm       <NA>               <NA>            <NA> \n 9 catsrkyjulmfzvixe teyxvimulfkczqrjsa xrtlyaqemsucjzkifv drjlmncsiftxae… <NA> \n10 ocgrnldhja        jicwgntvuhk        cxgajhln           <NA>            <NA> \n# … with 446 more rows\n\n\n\ndf[is.na(df)] <- \"\"\ndf$all <- \"\"\nfor(r in 1:456) {\n  df$all[r] <- paste(df[r,1], df[r,2], df[r,3], df[r,4], df[r,5], sep = \"\")\n  df$count[r] <- length(unique(unlist(strsplit(df$all[r], \"\"))))\n}\n\nWarning: Unknown or uninitialised column: `count`.\n\ndf\n\n# A tibble: 456 × 7\n   X1                X1                 X1               X1    X1    all   count\n   <chr>             <chr>              <chr>            <chr> <chr> <chr> <int>\n 1 tr                rt                 \"tr\"             \"rt\"  \"tr\"  trrt…     2\n 2 fdrhu             gwuksvro           \"\"               \"\"    \"\"    fdrh…    11\n 3 tesnouwyrdf       twofuspcmvenh      \"\"               \"\"    \"\"    tesn…    16\n 4 cnxpsmuqiaw       cxovminqpawus      \"qwaxjmupnsic\"   \"\"    \"\"    cnxp…    14\n 5 anpskchzojyeguwr  soqauprxzgmycvef   \"sorplgezycau\"   \"ngr… \"aye… anps…    24\n 6 mvwcl             vlcwxm             \"uwcflhpkjor\"    \"bln… \"wcm… mvwc…    19\n 7 hyvowmqzixc       lacsrjdyxiz        \"fyczpbxlti\"     \"\"    \"\"    hyvo…    21\n 8 qxjhrgefbkm       eqrgbfhjxkcm       \"\"               \"\"    \"\"    qxjh…    12\n 9 catsrkyjulmfzvixe teyxvimulfkczqrjsa \"xrtlyaqemsucjz… \"drj… \"\"    cats…    21\n10 ocgrnldhja        jicwgntvuhk        \"cxgajhln\"       \"\"    \"\"    ocgr…    17\n# … with 446 more rows\n\n\n\nsum(df$count)\n\n[1] 6310"
  },
  {
    "objectID": "2020/06/2020-06.html#part-2",
    "href": "2020/06/2020-06.html#part-2",
    "title": "2020-06: Custom Customs",
    "section": "Part 2",
    "text": "Part 2\n\ndf <- dt\ntestDF <- df[1,]\ndfRow <- 1\ndfColumn <- 1\nfor(r in 1:2001) {\n  if(!is.na(df[r,1])) {\n    testDF[dfRow, dfColumn] <- df[r,1]\n    dfColumn <- dfColumn + 1\n  }\n  else {\n    dfRow <- dfRow + 1\n    dfColumn <- 1\n  }\n}\ndf <- testDF\ndf\n\n# A tibble: 456 × 5\n   X1                X1                 X1                 X1              X1   \n   <chr>             <chr>              <chr>              <chr>           <chr>\n 1 tr                rt                 tr                 rt              tr   \n 2 fdrhu             gwuksvro           <NA>               <NA>            <NA> \n 3 tesnouwyrdf       twofuspcmvenh      <NA>               <NA>            <NA> \n 4 cnxpsmuqiaw       cxovminqpawus      qwaxjmupnsic       <NA>            <NA> \n 5 anpskchzojyeguwr  soqauprxzgmycvef   sorplgezycau       ngrecposyizwau  ayep…\n 6 mvwcl             vlcwxm             uwcflhpkjor        blnvwtic        wcmzl\n 7 hyvowmqzixc       lacsrjdyxiz        fyczpbxlti         <NA>            <NA> \n 8 qxjhrgefbkm       eqrgbfhjxkcm       <NA>               <NA>            <NA> \n 9 catsrkyjulmfzvixe teyxvimulfkczqrjsa xrtlyaqemsucjzkifv drjlmncsiftxae… <NA> \n10 ocgrnldhja        jicwgntvuhk        cxgajhln           <NA>            <NA> \n# … with 446 more rows\n\n\nCredit to Matthew McMillan for the idea of using sets\n\nfor(r in 1:456)\n  for(c in 2:5)\n    if(is.na(df[r,c]))\n      df[r,c] <- df[r,1]\ndf$matthew <- NA_integer_\nfor(r in 1:456) {\n  df$matthew[r] <-\n    length(unique(\n      set_intersection(\n        unique(unlist(strsplit(\n          as.character(df[r, 1]), \"\"\n        ))),\n        unique(unlist(strsplit(\n          as.character(df[r, 2]), \"\"\n        ))),\n        unique(unlist(strsplit(\n          as.character(df[r, 3]), \"\"\n        ))),\n        unique(unlist(strsplit(\n          as.character(df[r, 4]), \"\"\n        ))),\n        unique(unlist(strsplit(\n          as.character(df[r, 5]), \"\"\n        )))\n      )\n    ))\n}\n\ndf\n\n# A tibble: 456 × 6\n   X1                X1                 X1                 X1      X1    matthew\n   <chr>             <chr>              <chr>              <chr>   <chr>   <int>\n 1 tr                rt                 tr                 rt      tr          2\n 2 fdrhu             gwuksvro           fdrhu              fdrhu   fdrhu       2\n 3 tesnouwyrdf       twofuspcmvenh      tesnouwyrdf        tesnou… tesn…       8\n 4 cnxpsmuqiaw       cxovminqpawus      qwaxjmupnsic       cnxpsm… cnxp…      11\n 5 anpskchzojyeguwr  soqauprxzgmycvef   sorplgezycau       ngrecp… ayep…      11\n 6 mvwcl             vlcwxm             uwcflhpkjor        blnvwt… wcmzl       3\n 7 hyvowmqzixc       lacsrjdyxiz        fyczpbxlti         hyvowm… hyvo…       5\n 8 qxjhrgefbkm       eqrgbfhjxkcm       qxjhrgefbkm        qxjhrg… qxjh…      11\n 9 catsrkyjulmfzvixe teyxvimulfkczqrjsa xrtlyaqemsucjzkifv drjlmn… cats…      17\n10 ocgrnldhja        jicwgntvuhk        cxgajhln           ocgrnl… ocgr…       5\n# … with 446 more rows\n\n\n\nsum(df$matthew)\n\n[1] 3193"
  },
  {
    "objectID": "2020/07/2020-07.html",
    "href": "2020/07/2020-07.html",
    "title": "2020-07: Handy Haversacks",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ndf <- read.csv(\"input.csv\")\n\ndf$child2C[as.character(df$child2C) == \" \"] <- NA\ndf$child3C[as.character(df$child3C) == \" \"] <- NA\ndf$child4C[as.character(df$child4C) == \" \"] <- NA"
  },
  {
    "objectID": "2020/07/2020-07.html#part-1",
    "href": "2020/07/2020-07.html#part-1",
    "title": "2020-07: Handy Haversacks",
    "section": "Part 1",
    "text": "Part 1\n\nlongerDF <- data.frame(parent = \"\", nChild = 0, cChild = \"\")\n\nfor(col in seq(3, 9, by = 2)) {\n  for(r in 1:nrow(df)) {\n    if(!is.na(df[r,col-1]))\n      for(i in 1:df[r,col-1]) {\n        longerDF <- rbind(longerDF, data.frame(parent = df[r,1], \n                                               nChild = df[r,col-1], \n                                               cChild = df[r,col]))\n    }\n  }\n}\nlongerDF <- longerDF[-1,]\n\n\nshinygoldDF <- \n  longerDF[longerDF$cChild == \"shiny gold\" | longerDF$parent == \"shiny gold\",]\n\n\nlevel <- c(\"shiny gold\")\noldRows <- 0\n\nwhile(oldRows != nrow(shinygoldDF)) {\n  oldRows <- nrow(shinygoldDF)\n  level <- unlist(shinygoldDF$parent)\n  shinygoldDF <-\n    df[as.character(df$parent) %in% level |\n         as.character(df$child1C) %in% level |\n         as.character(df$child2C) %in% level |\n         as.character(df$child3C) %in% level |\n         as.character(df$child4C) %in% level, ]\n}\nnrow(shinygoldDF) - 1\n\n[1] 164"
  },
  {
    "objectID": "2020/07/2020-07.html#part-2",
    "href": "2020/07/2020-07.html#part-2",
    "title": "2020-07: Handy Haversacks",
    "section": "Part 2",
    "text": "Part 2\n\n\n\n\n\n\nDanger\n\n\n\nThis solution is still under construction.\n\n\n\nlibrary(tidyverse)\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(stringr)\nlibrary(foreach)\n\n\nAttaching package: 'foreach'\n\n\nThe following objects are masked from 'package:purrr':\n\n    accumulate, when\n\n\n\ndf <- readLines(\"test.txt\")\ndt <- data.table(\"parent\" = \"\", \"child\" = \"\")\n# str_split(df, \" bags contain | bags, | bags\\\\.\")\nbags <- \n  str_extract_all(df, \"(no other|\\\\d) (\\\\w* \\\\w*)|(\\\\w* \\\\w*) bags\") |>\n  lapply(\\(x) {\n    l <- sapply(x[-1], \\(y) {\n        if (y == \"no other bags\") { return(y) }\n        count <- as.numeric(str_extract_all(y, \"\\\\d \")[[1]])\n        y <- rep(gsub(\"\\\\d \", \"\", y), count)\n        return(y)\n      })\n    \n      if (is.matrix(l)) { l <- as.vector(l) }\n    \n      l <-\n        l |>\n        unname() |>\n        unlist() |>\n        list() |>\n        `names<-`(gsub(\" bags\", \"\", x[1]))\n      \n      return(l)\n  }) |>\n  unlist(recursive = FALSE) |>\n  lapply(\\(x) {\n    if (any(grepl(\"shiny gold\", x))) { return(NULL) }\n    x\n  })\n\nbags <- bags[!sapply(bags, is.null)]\n\n# bags |>\n#   unlist() |>\n#   data.frame() |>\n#   rownames_to_column() |>\n#   filter(rowname == \"shiny gold\" | unlist.bags. == \"shiny gold\")\n\n# get_contents <- function(bag, pBag = \"shiny gold\") {\n#   if (is.null(bag) | length(bag) == 0 | any(grepl(\"no other bags\", bag))) { return(pBag) }\n#   else { lapply(bag, \\(n) get_contents(bags[[n]], pBag = n)) |> unlist() }\n# \n# }\n\nget_contents <- function(.x, .y) {\n  bag <- .x\n  pBag <- .y\n  if (pBag %in% names(which(bags == \"no other bags\"))) { return(get_contents(.y, \"no other bags\")) }\n  furrr:::future_map2(bags[[bag]], pBag, \\(.x, .y) { get_contents(.x, .y) })\n}\n\nn <- names(bags)\nn <- c(\"shiny gold\", n[n != \"shiny gold\"])\n\nl <-\n  lapply(n, \\(x) {\n    bags[[x]] |>\n      list() |>\n      `names<-`(x)\n  }) |>\n  # unlist(recursive = FALSE) |>\n  lapply(\\(x) {\n    y <- unlist(x)\n    names(y) <- c(rep(names(x), length(y)))\n    \n    y\n  }) |>\n  unlist() |> \n  as.list()\nfuture::plan(\n  list(future::tweak(future::multicore, workers = 12)),\n  list(future::tweak(future::sequential))\n)\n\nprogressr::with_progress({\n  p <- progressr::progressor(steps = length(l))\n  l <-\n    furrr::future_map2(l, names(l), \\(.x, .y) {\n      p()\n      bag <- get_contents(.x, .y)\n      if (is.null(bag)) { bag <- .x }\n      else { bag <- .y }\n      return(bag)\n      })\n})\n\nl |> unlist(recursive = FALSE)\n\n# tb <-\n#   table(bags[[\"shiny gold\"]]) |>\n#   data.frame() |>\n#   `colnames<-`(c(\"parent\", \"n\"))\n# \n# # l\n# data.frame(\"parent\" = names(l), \"child\" = l) |>\n#   mutate(parent = str_remove_all(parent, \"\\\\d\")) |>\n#   filter(parent == \"shiny gold\") |>\n#   nrow()\n# \n# bags[[\"dark red\"]]\n\n\ndf <- readLines(\"input.txt\")\ndt <- data.table(\"parent\" = \"\", \"child\" = \"\")\n# str_split(df, \" bags contain | bags, | bags\\\\.\")\nbags <- \n  str_extract_all(df, \"(no other|\\\\d) (\\\\w* \\\\w*)|(\\\\w* \\\\w*) bags\") |>\n  lapply(\\(x) {\n    l <- sapply(x[-1], \\(y) {\n        if (y == \"no other bags\") { return(y) }\n        count <- as.numeric(str_extract_all(y, \"\\\\d \")[[1]])\n        y <- rep(gsub(\"\\\\d \", \"\", y), count)\n        return(y)\n      })\n    \n      if (is.matrix(l)) { l <- as.vector(l) }\n    \n      l <-\n        l |>\n        unname() |>\n        unlist() |>\n        list() |>\n        `names<-`(gsub(\" bags\", \"\", x[1]))\n      \n      return(l)\n  }) |>\n  unlist(recursive = FALSE) |>\n  lapply(\\(x) {\n    if (any(grepl(\"shiny gold\", x))) { return(NULL) }\n    x\n  })\n\nbags <- bags[!sapply(bags, is.null)]\n\nno_others <- names(which(bags == \"no other bags\"))\n\nget_contents <- function(bag, pBag = \"shiny gold\") {\n  print(paste(bag, pBag))\n  if (length(pBag) == 0 | pBag %in% no_others) { return(c(\"no other bags\" = pBag)) }\n  # bag <- bag[!(bag %in% names(which(bags == \"no other bags\")))]\n  # lapply(bag, \\(n) list(n, get_contents(bags[[n]], pBag = n)))\n  # print(unique_bag)\n  get_contents(bag, pBag = names(bag))\n}\n\nn <- names(bags)\nn <- c(\"shiny gold\", n[n != \"shiny gold\"])\n\nl <-\n  lapply(n, \\(x) {\n    bags[[x]] |>\n      list() |>\n      `names<-`(x)\n  }) |>\n  # unlist(recursive = FALSE) |>\n  lapply(\\(x) {\n    y <- unlist(x)\n    names(y) <- c(rep(names(x), length(y)))\n    \n    y\n  }) |>\n  unlist() |> \n  as.list()\n\nlapply(l, \\(l) { get_contents(l, \"shiny gold\") })\n\nlapply(l, \\(l) {  })\n\ncl <- parallel::makeCluster(6)\nparallel::clusterExport(cl, c(\"bags\", \"l\", \"get_contents\"))\nl <- \n  pbapply::pblapply(l, get_contents, cl = cl) |>\n  unlist()\nparallel::stopCluster(cl)\n\ntb <-\n  table(bags[[\"shiny gold\"]]) |>\n  data.frame() |>\n  `colnames<-`(c(\"parent\", \"n\"))\n\n# l\ndata.frame(\"parent\" = names(l), \"child\" = l) |>\n  mutate(parent = str_remove_all(parent, \"\\\\d\")) |>\n  filter(parent == \"shiny gold\") |>\n  nrow()\n\n\ndf <- readLines(\"input.txt\")\ndt <- data.table(\"parent\" = \"\", \"child\" = \"\")\n# str_split(df, \" bags contain | bags, | bags\\\\.\")\nbags <- \n  str_extract_all(df, \"(no other|\\\\d) (\\\\w* \\\\w*)|(\\\\w* \\\\w*) bags\") |>\n  lapply(\\(x) {\n    l <- sapply(x[-1], \\(y) {\n        if (y == \"no other bags\") { return(y) }\n        count <- as.numeric(str_extract_all(y, \"\\\\d \")[[1]])\n        y <- rep(gsub(\"\\\\d \", \"\", y), count)\n        return(y)\n      })\n    \n      if (is.matrix(l)) { l <- as.vector(l) }\n    \n      l <-\n        l |>\n        unname() |>\n        unlist() |>\n        list() |>\n        `names<-`(gsub(\" bags\", \"\", x[1]))\n      \n      return(l)\n  }) |>\n  unlist(recursive = FALSE) |>\n  lapply(\\(x) {\n    if (any(grepl(\"shiny gold|no other bags\", x))) { return(NULL) }\n    x\n  })\n\nbags <- bags[!sapply(bags, is.null)]\n\n# bags |>\n#   unlist() |>\n#   data.frame() |>\n#   rownames_to_column() |>\n#   filter(rowname == \"shiny gold\" | unlist.bags. == \"shiny gold\")\n\n# get_contents <- function(bag, pBag = \"shiny gold\") {\n#   if (is.null(bag) | length(bag) == 0 | any(grepl(\"no other bags\", bag))) { return(pBag) }\n#   else { lapply(bag, \\(n) get_contents(bags[[n]], pBag = n)) |> unlist() }\n# \n# }\n\nget_contents <- function(bag, pBag = \"shiny gold\") {\n  if (pBag %in% names(which(bags == \"no other bags\"))) { return(c(\"no other bags\" = pBag)) }\n  bag <- bag[!(bag %in% names(which(bags == \"no other bags\")))]\n  # lapply(bag, \\(n) list(n, get_contents(bags[[n]], pBag = n)))\n  length_bag <- length(bag)\n  unique_bag <- unique(bag)\n  # print(unique_bag)\n  unique_bag <- lapply(unique_bag, \\(n) list(n, get_contents(bags[[n]], pBag = n)))\n  rep(unique_bag, length_bag)\n}\n\n# get_contents <- function(bag, pBag = \"shiny gold\") {\n#   if (pBag %in% names(which(bags == \"no other bags\"))) { return(c(\"no other bags\" = pBag)) }\n#   bag <- bag[!(bag %in% names(which(bags == \"no other bags\")))]\n#   lapply(bag, \\(n) list(n, get_contents(bags[[n]], pBag = n)))\n# }\n\nn <- names(bags)\nn <- c(\"shiny gold\", n[n != \"shiny gold\"])\n\nl <-\n  lapply(n, \\(x) {\n    bags[[x]] |>\n      list() |>\n      `names<-`(x)\n  }) |>\n  unlist(recursive = FALSE)\n\ncl <- parallel::makeCluster(6)\nparallel::clusterExport(cl, c(\"bags\", \"l\", \"get_contents\"))\nl <- \n  pbapply::pblapply(l, get_contents, cl = cl) |>\n  unlist()\nparallel::stopCluster(cl)\n\ntb <-\n  table(bags[[\"shiny gold\"]]) |>\n  data.frame() |>\n  `colnames<-`(c(\"parent\", \"n\"))\n\n# l\ndata.frame(\"parent\" = names(l), \"child\" = l) |>\n  mutate(parent = str_remove_all(parent, \"\\\\d\")) |>\n  filter(parent == \"shiny gold\") |>\n  nrow()\n\n6268 6286"
  },
  {
    "objectID": "2020/08/2020-08.html",
    "href": "2020/08/2020-08.html",
    "title": "2020-08: Handheld Halting",
    "section": "",
    "text": "masterDF <- read.csv(\"input.csv\")"
  },
  {
    "objectID": "2020/08/2020-08.html#part-1",
    "href": "2020/08/2020-08.html#part-1",
    "title": "2020-08: Handheld Halting",
    "section": "Part 1",
    "text": "Part 1\n\ndf <- masterDF\ndf$ipa <- NA\ndf$ipa[1] <- 0\nacc <- 0\nr <- 1\nflag <- TRUE\n\nwhile(flag == TRUE) {\n  if(as.character(df$ope[r]) == \"acc\" & r <= 626 & r >= 1) {\n    acc <- acc + df$arg[r]\n    flag <- is.na(df$ipa[r + 1])\n    df$ipa[r + 1] <- r\n    r <- r + 1\n    }\n  else if(as.character(df$ope[r]) == \"jmp\" & r + df$arg[r] <= 626 & r + df$arg[r] >= 1) {\n    flag <- is.na(df$ipa[r + df$arg[r]])\n    df$ipa[r + df$arg[r]] <- r\n    r <- r + df$arg[r]\n    }\n  else if(as.character(df$ope[r]) == \"nop\" & r <= 626 & r >= 1) {\n    flag <- is.na(df$ipa[r + 1])\n    df$ipa[r + 1] <- r\n    r <- r + 1\n    }\n}\n\nacc\n\n[1] 1317"
  },
  {
    "objectID": "2020/08/2020-08.html#part-2",
    "href": "2020/08/2020-08.html#part-2",
    "title": "2020-08: Handheld Halting",
    "section": "Part 2",
    "text": "Part 2\n\nfor(i in 1:626) {\n  df <- masterDF\n  \n  df$ipa <- NA\n  df$ipa[1] <- 0\n  \n  acc <- 0\n  r <- 1\n  \n  flag <- TRUE\n  breakFlag <- FALSE\n  \n  if(as.character(df$ope[i]) == \"nop\")\n    df$ope[i] <- \"jmp\"\n  else if(as.character(df$ope[i]) == \"jmp\")\n    df$ope[i] <- \"nop\"\n  \n  if(as.character(df$ope[i]) != \"acc\") {\n    while(flag) {\n      if(as.character(df$ope[r]) == \"acc\" & r <= 626 & r >= 1) {\n        acc <- acc + df$arg[r]\n        flag <- is.na(df$ipa[r + 1])\n        df$ipa[r + 1] <- r\n        r <- r + 1\n        }\n      else if(as.character(df$ope[r]) == \"jmp\" & r + df$arg[r] <= 626 & r + df$arg[r] >= 1) {\n        flag <- is.na(df$ipa[r + df$arg[r]])\n        df$ipa[r + df$arg[r]] <- r\n        r <- r + df$arg[r]\n        }\n      else if(as.character(df$ope[r]) == \"nop\" & r <= 626 & r >= 1) {\n        flag <- is.na(df$ipa[r + 1])\n        df$ipa[r + 1] <- r\n        r <- r + 1\n      }\n    \n      if(r == 626) {\n        breakFlag <- TRUE\n        break\n        }\n    }\n  }\n  if(breakFlag)\n    break\n}\n\nacc\n\n[1] 1033"
  },
  {
    "objectID": "2020/09/2020-09.html",
    "href": "2020/09/2020-09.html",
    "title": "2020-09: Encoding Error",
    "section": "",
    "text": "df <- read.csv(\"input.csv\")"
  },
  {
    "objectID": "2020/09/2020-09.html#part-1",
    "href": "2020/09/2020-09.html#part-1",
    "title": "2020-09: Encoding Error",
    "section": "Part 1",
    "text": "Part 1\n\ngoodNum <- FALSE\nfor(i in 26:1000) {\n  for(r1 in (i-25):(i-1)) {\n    if(df[r1,1] < df[i,1])\n      for(r2 in (i-25):(i-1))\n        if(df[i,1] - df[r1,1] == df[r2,1]) {\n          goodNum <- TRUE\n          break\n        }\n    if(goodNum)\n      break\n  }\n  if(!goodNum) {\n    print(df[i,1])\n    break\n  }\n  goodNum <- FALSE\n}\n\n[1] 69316178"
  },
  {
    "objectID": "2020/09/2020-09.html#part-2",
    "href": "2020/09/2020-09.html#part-2",
    "title": "2020-09: Encoding Error",
    "section": "Part 2",
    "text": "Part 2\n\ngoalNum <- 0\ngoodNum <- FALSE\nfor(i in 26:1000) {\n  for(r1 in (i-25):(i-1)) {\n    if(df[r1,1] < df[i,1])\n      for(r2 in (i-25):(i-1))\n        if(df[i,1] - df[r1,1] == df[r2,1]) {\n          goodNum <- TRUE\n          break\n        }\n    if(goodNum)\n      break\n  }\n  if(!goodNum) {\n    goalNum <- df[i,1]\n    break\n  }\n  goodNum <- FALSE\n}\n\n\nbreakFlag <- FALSE\nfor(start in 1:1000) {\n  for(end in start:1000) {\n    if(sum(df$num[start:end]) == goalNum) {\n      breakFlag <- TRUE\n      break\n    }\n  }\n  if(breakFlag)\n    break\n}\n\n\nsmallest <- max(df$num)\nlargest <- min(df$num)\n\nfor(r in start:end) {\n  if(df$num[r] < smallest)\n    smallest <- df$num[r]\n  if(df$num[r] > largest)\n    largest <- df$num[r]\n}\n\nsmallest + largest\n\n[1] 9351526"
  },
  {
    "objectID": "2020/10/2020-10.html",
    "href": "2020/10/2020-10.html",
    "title": "2020-10: Adapter Array",
    "section": "",
    "text": "df <- read.csv(\"input.csv\")"
  },
  {
    "objectID": "2020/10/2020-10.html#part-1",
    "href": "2020/10/2020-10.html#part-1",
    "title": "2020-10: Adapter Array",
    "section": "Part 1",
    "text": "Part 1\n\ndf <- df[order(df$jolts),]\ncount1 <- 0\ncount3 <- 0\nfor(r in 1:(nrow(df) - 1)) {\n  if(df[r+1,1] - df[r,1] == 1)\n    count1 <- count1 + 1\n  else if(df[r+1,1] - df[r,1] == 3)\n    count3 <- count3 + 1\n}\ncount1 * count3\n\n[1] 2414"
  },
  {
    "objectID": "2020/10/2020-10.html#part-2",
    "href": "2020/10/2020-10.html#part-2",
    "title": "2020-10: Adapter Array",
    "section": "Part 2",
    "text": "Part 2\n\ndf$paths <- 0\ndf$paths[1] <- 1\nfor(i in 2:nrow(df))\n  for(x in 1:3)\n    if((df$jolts[i] - x) %in% df$jolts)\n      df$paths[i] <- df$paths[i] + df$paths[match(df$jolts[i] - x, df$jolts)]\nformat(df$paths[nrow(df) - 1], scientific=FALSE)\n\n[1] \"21156911906816\""
  },
  {
    "objectID": "2021/01/2021-01.html",
    "href": "2021/01/2021-01.html",
    "title": "2021-01: Sonar Sweep",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose"
  },
  {
    "objectID": "2021/01/2021-01.html#part-1",
    "href": "2021/01/2021-01.html#part-1",
    "title": "2021-01: Sonar Sweep",
    "section": "Part 1",
    "text": "Part 1\n\ndt$diff <- c(0, diff(dt$V1))\ndt %>%\n  filter(diff > 0) %>%\n  nrow()\n\n[1] 1374"
  },
  {
    "objectID": "2021/01/2021-01.html#part-2",
    "href": "2021/01/2021-01.html#part-2",
    "title": "2021-01: Sonar Sweep",
    "section": "Part 2",
    "text": "Part 2\n\ndt$diff <- c(0, 0, 0, diff(dt$V1, lag = 3))\ndt %>%\n  filter(diff > 0) %>%\n  nrow()\n\n[1] 1418"
  },
  {
    "objectID": "2021/01/2021-01.html#speed-edition",
    "href": "2021/01/2021-01.html#speed-edition",
    "title": "2021-01: Sonar Sweep",
    "section": "Speed Edition",
    "text": "Speed Edition\n\nFastest Solution\n\n# fastest solution\n# data.table was faster until I turned on warn=FALSE in readLines for Base R\ndt <- as.numeric(readLines(\"input.txt\", warn = FALSE))\n# part 1\nsum(diff(dt, lag = 1) > 0)\n\n[1] 1374\n\n# part 2\nsum(diff(dt, lag = 3) > 0)\n\n[1] 1418\n\n\n\n\nBenchmarks\n\nrbenchmark::benchmark(\n  \"First try\" = {\n    library(tidyverse)\n    library(data.table)\n    dt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\n    # part 1\n    dt$diff <- c(0, diff(dt$V1))\n    dt %>% filter(diff > 0) %>% nrow()\n    # part 2\n    dt$diff <- c(0, 0, 0, diff(dt$V1, lag = 3))\n    dt %>% filter(diff > 0) %>% nrow()\n    },\n  \"Base R\" = {\n    dt <- as.numeric(readLines(\"input.txt\", warn = FALSE))\n    # part 1\n    sum(diff(dt, lag = 1) > 0)\n    # part 2\n    sum(diff(dt, lag = 3) > 0)\n    },\n  \"data.table\" = {\n    # part 1 and 2\n    data.table::fread(\"input.txt\", \n                      sep = \"\\n\")[, .(diff1 = sum(diff(V1, lag = 1) > 0),\n                                      diff3 = sum(diff(V1, lag = 3) > 0))]\n  },\n  replications = 100, columns = c(1:5), order = \"user.self\")\n\n        test replications user.self sys.self elapsed\n2     Base R          100     0.023    0.004   0.027\n3 data.table          100     0.048    0.005   0.055\n1  First try          100     0.426    0.017   0.444"
  },
  {
    "objectID": "2021/02/2021-02.html",
    "href": "2021/02/2021-02.html",
    "title": "2021-02: Dive!",
    "section": "",
    "text": "library(data.table)\nlibrary(tidyr)"
  },
  {
    "objectID": "2021/02/2021-02.html#part-1",
    "href": "2021/02/2021-02.html#part-1",
    "title": "2021-02: Dive!",
    "section": "Part 1",
    "text": "Part 1\n\ndt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\ndt <- separate(dt, \"V1\", c(\"d\", \"n\"), sep = \" \", convert = TRUE)\ndt$n <- ifelse(dt$d == \"down\", dt$n * -1, dt$n)\n\nabs(dt[d == \"forward\", .(sum = sum(n))] * \n  as.numeric(dt[d != \"forward\", .(sum = sum(n))]))\n\n       sum\n1: 1635930"
  },
  {
    "objectID": "2021/02/2021-02.html#part-2",
    "href": "2021/02/2021-02.html#part-2",
    "title": "2021-02: Dive!",
    "section": "Part 2",
    "text": "Part 2\n\ndt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\ndt <- separate(dt, \"V1\", c(\"d\", \"n\"), sep = \" \", convert = TRUE)\n\ndt$aim <- ifelse(dt$d == \"up\" & dt$d != \"forward\", dt$n * -1, dt$n)\ndt$aim <- ifelse(dt$d == \"forward\", 0, dt$aim)\ndt$aim <- cumsum(dt$aim)\n\ndt$h <- ifelse(dt$d == \"forward\", dt$n, 0)\ndt$depth <- ifelse(dt$d == \"forward\", dt$aim * dt$n, 0)\n\nsum(dt$h, na.rm = TRUE) * sum(dt$depth, na.rm = TRUE)\n\n[1] 1781819478"
  },
  {
    "objectID": "2021/02/2021-02.html#speed-edition",
    "href": "2021/02/2021-02.html#speed-edition",
    "title": "2021-02: Dive!",
    "section": "Speed Edition",
    "text": "Speed Edition\nBase R once again beats out data.table by just a little bit. The big difference here was moving from colSums to sum, although readLines instead of fread does play a part.\n\nFastest solution\n\ndtM <- data.frame(\"V1\" = readLines(\"input.txt\"))\ndtM <- tidyr::separate(dtM, \"V1\", c(\"d\", \"n\"), sep = \" \", convert = TRUE)\n\n# part 1\ndt <- dtM\ndt$n <- ifelse(dt$d == \"down\", dt$n * -1, dt$n)\nabs(sum(dt$n[dt$d == \"forward\"]) * sum(dt$n[dt$d != \"forward\"]))\n\n[1] 1635930\n\n# part 2\ndt <- dtM\ndt$aim <- cumsum(ifelse(dt$d == \"up\", dt$n * -1, \n                        ifelse(dt$d == \"forward\", 0, dt$n)))\nsum(ifelse(dt$d == \"forward\", dt$n, 0), na.rm = TRUE) *\n  sum(ifelse(dt$d == \"forward\", dt$aim * dt$n, 0), na.rm = TRUE)\n\n[1] 1781819478\n\n\n\n\nBenchmarks\n\nrbenchmark::benchmark(\n  \"First try\" = {\n    library(data.table)\n    # part 1\n    dt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\n    dt <- tidyr::separate(dt, \"V1\", c(\"d\", \"n\"), sep = \" \", convert = TRUE)\n    dt$n <- ifelse(dt$d == \"down\", dt$n * -1, dt$n)\n\n    abs(dt[d == \"forward\", .(sum = sum(n))] * \n          as.numeric(dt[d != \"forward\", .(sum = sum(n))]))\n    \n    # part 2\n    dt <- data.table(read.table(\"input.txt\", sep = \"\\n\"))\n    dt <- tidyr::separate(dt, \"V1\", c(\"d\", \"n\"), sep = \" \", convert = TRUE)\n\n    dt$aim <- ifelse(dt$d == \"up\" & dt$d != \"forward\", dt$n * -1, dt$n)\n    dt$aim <- ifelse(dt$d == \"forward\", 0, dt$aim)\n    dt$aim <- cumsum(dt$aim)\n\n    dt$h <- ifelse(dt$d == \"forward\", dt$n, 0)\n    dt$depth <- ifelse(dt$d == \"forward\", dt$aim * dt$n, 0)\n    \n    sum(dt$h, na.rm = TRUE) * sum(dt$depth, na.rm = TRUE)\n    },\n  \"Base R\" = {\n    dtM <- data.frame(\"V1\" = readLines(\"input.txt\"))\n    dtM$n <- na.omit(as.numeric(unlist(strsplit(dtM$V1, \" \"))))\n    dtM$d <- as.character(unlist(strsplit(dtM$V1, \" \")))[\n      is.na(as.numeric(unlist(strsplit(dtM$V1, \" \"))))]\n    \n    # part 1\n    dt <- dtM\n    dt$n <- ifelse(dt$d == \"down\", dt$n * -1, dt$n)\n    abs(sum(dt$n[dt$d == \"forward\"]) * sum(dt$n[dt$d != \"forward\"]))\n    \n    # part 2\n    dt <- dtM\n    dt$aim <- cumsum(ifelse(dt$d == \"up\", dt$n * -1, \n                            ifelse(dt$d == \"forward\", 0, dt$n)))\n    sum(ifelse(dt$d == \"forward\", dt$n, 0), na.rm = TRUE) * \n      sum(ifelse(dt$d == \"forward\", dt$aim * dt$n, 0), na.rm = TRUE)\n    },\n  \"data.table\" = {\n    library(data.table)\n    dtM <- fread(\"input.txt\", sep = \"\\n\", header = FALSE)\n    dtM <- tidyr::separate(dtM, \"V1\", c(\"d\", \"n\"), sep = \" \", convert = TRUE)\n\n    # part 1\n    dt <- dtM\n    dt$n <- ifelse(dt$d == \"down\", dt$n * -1, dt$n)\n    abs(colSums(dt[d == \"forward\", .(n)]) * colSums(dt[d != \"forward\", .(n)]))\n    \n    # part 2\n    dt <- dtM\n    dt$aim <- cumsum(ifelse(dt$d == \"up\", dt$n * -1, \n                            ifelse(dt$d == \"forward\", 0, dt$n)))\n    sum(ifelse(dt$d == \"forward\", dt$n, 0), na.rm = TRUE) * \n      sum(ifelse(dt$d == \"forward\", dt$aim * dt$n, 0), na.rm = TRUE)\n    },\n  replications = 100, columns = c(1:5), order = \"user.self\")\n\n        test replications user.self sys.self elapsed\n2     Base R          100     0.228    0.007   0.234\n3 data.table          100     0.829    0.056   0.885\n1  First try          100     1.588    0.117   1.706"
  },
  {
    "objectID": "2021/03/2021-03.html",
    "href": "2021/03/2021-03.html",
    "title": "2021-03: Binary Diagnostic",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(compositions)\n\nWelcome to compositions, a package for compositional data analysis.\nFind an intro with \"? compositions\"\n\n\nAttaching package: 'compositions'\n\nThe following objects are masked from 'package:stats':\n\n    anova, cor, cov, dist, var\n\nThe following objects are masked from 'package:base':\n\n    %*%, norm, scale, scale.default"
  },
  {
    "objectID": "2021/03/2021-03.html#part-1",
    "href": "2021/03/2021-03.html#part-1",
    "title": "2021-03: Binary Diagnostic",
    "section": "Part 1",
    "text": "Part 1\n\n# part 1\ndt <- data.frame(fread(\"input.txt\", sep = \"\\n\", colClasses = c(\"character\")))\ndt <- tidyr::separate(dt, \"V1\", paste0(\"V\", 1:13), sep = \"\", convert = TRUE)\n\nget_mode <- function(x)\n  return(names(sort(table(x), decreasing = T, na.last = T)[1]))\no <- c()\nfor(i in 2:13)\n  o <- append(o, get_mode(dt[,i]))\n\no <- unbinary(paste(o, collapse = \"\"))\n\nget_mode <- function(x)\n  return(names(sort(table(x), na.last = T)[1]))\nc <- c()\nfor(i in 2:13)\n  c <- append(c, get_mode(dt[,i]))\nc <- unbinary(paste(c, collapse = \"\"))\n\no * c\n\n[1] 4174964"
  },
  {
    "objectID": "2021/03/2021-03.html#part-2",
    "href": "2021/03/2021-03.html#part-2",
    "title": "2021-03: Binary Diagnostic",
    "section": "Part 2",
    "text": "Part 2\n\n# part 2\ndtM <- data.frame(fread(\"input.txt\", sep = \"\\n\", colClasses = c(\"character\")))\ndtM <- tidyr::separate(dtM, \"V1\", paste0(\"V\", 1:13), sep = \"\", convert = TRUE)\ndtM <- dtM %>% select(-\"V1\")\ndt <- dtM\n\nget_modeMax <- function(x){\n  temp <- sort(table(x), decreasing = T, na.last = T)\n  ifelse(temp[1] == temp[2], return(1), names(temp[1]))\n}\no <- c()\n\nfor(i in 1:12) {\n  dt <- dt %>%\n    filter_at(i, all_vars(.==get_modeMax(dt[,i])))\n  if(nrow(dt) == 1) {\n    oxygen <- paste(as.character(dt[1,]), collapse = \"\")\n    break\n  }\n}\n\ndt <- dtM\nget_modeMin <- function(x){\n  temp <- sort(table(x), na.last = T)\n  ifelse(temp[1] == temp[2], return(0), names(temp[1]))\n}\nc <- c()\n\nfor(i in 1:12) {\n  dt <- dt %>%\n    filter_at(i, all_vars(.==get_modeMin(dt[,i])))\n  if(nrow(dt) == 1) {\n    co2 <- paste(as.character(dt[1,]), collapse = \"\")\n    break\n  }\n}\n\nunbinary(oxygen) * unbinary(co2)\n\n[1] 4474944"
  },
  {
    "objectID": "2021/03/2021-03.html#speed-edition",
    "href": "2021/03/2021-03.html#speed-edition",
    "title": "2021-03: Binary Diagnostic",
    "section": "Speed Edition",
    "text": "Speed Edition\nToday was bad. I misread the instructions, forgot a bunch of basic functions, and so much more. I couldn’t get any of the base reading functions to read my input properly so I ended up with fread from data.table. I also haven’t been able to make any significant speed improvements from my initial solution.\nI’m not sure why readLines wasn’t working last night but I also switched to str_split_fixed from stringr and it’s so much faster now.\n\nFastest solution\n\nlibrary(dplyr)\n# part 1\ndt <- stringr::str_split_fixed(readLines(\"input.txt\"), pattern = \"\", n = 12)\ndt <- data.frame(apply(dt, 2, as.integer))\n\ngetModeMin <- function(x)\n  return(ifelse(mean(x) > .5, 0, 1))\ngetModeMax <- function(x)\n  return(ifelse(mean(x) > .5, 1, 0))\n\nstrtoi(paste(apply(dt, 2, getModeMax), collapse = \"\"), base = 2) *\n  strtoi(paste(apply(dt, 2, getModeMin), collapse = \"\"), base = 2)\n\n[1] 4174964\n\n# part 2\ndto <- dt\ndtc <- dt\n\nfor (i in 1:12) {\n  if (nrow(dto) > 1)\n    dto <- dto |>\n      filter_at(i, all_vars(. == ifelse(mean(dto[, i]) >= .5, 1, 0)))\n  if (nrow(dtc) > 1)\n    dtc <- dtc |>\n      filter_at(i, all_vars(. == ifelse(mean(dtc[, i]) < .5, 1, 0)))\n}\n\nstrtoi(paste(as.character(dto[1,]), collapse = \"\"), base = 2) *\n  strtoi(paste(as.character(dtc[1,]), collapse = \"\"), base = 2)\n\n[1] 4474944\n\n\n\n\nBenchmarks\n\nrbenchmark::benchmark(\n  \"First try\" = {\n    library(tidyverse)\n    library(data.table)\n    library(compositions)\n    \n    # part 1\n    dt <- data.frame(fread(\"input.txt\", sep = \"\\n\", \n                           colClasses = c(\"character\")))\n    dt <- tidyr::separate(dt, \"V1\", paste0(\"V\", 1:13), \n                          sep = \"\", convert = TRUE)\n    \n    get_mode <- function(x)\n      return(names(sort(table(x), decreasing = T, na.last = T)[1]))\n    o <- c()\n    for (i in 2:13)\n      o <- append(o, get_mode(dt[, i]))\n    o <- unbinary(paste(o, collapse = \"\"))\n    \n    get_mode <- function(x)\n      return(names(sort(table(x), na.last = T)[1]))\n    c <- c()\n    for (i in 2:13)\n      c <- append(c, get_mode(dt[, i]))\n    c <- unbinary(paste(c, collapse = \"\"))\n    \n    o * c\n    \n    # part 2\n    dtM <- data.frame(fread(\"input.txt\", sep = \"\\n\",\n                            colClasses = c(\"character\")))\n    dtM <- tidyr::separate(dtM, \"V1\", paste0(\"V\", 1:13),\n                           sep = \"\", convert = TRUE)\n    dtM <- dtM %>% select(-\"V1\")\n    dt <- dtM\n\n    get_modeMax <- function(x) {\n      temp <- sort(table(x), decreasing = T, na.last = T)\n      ifelse(temp[1] == temp[2], return(1), names(temp[1]))\n    }\n    o <- c()\n    for (i in 1:12) {\n      dt <- dt %>% filter_at(i, all_vars(. == get_modeMax(dt[, i])))\n      if (nrow(dt) == 1) {\n        oxygen <- paste(as.character(dt[1, ]), collapse = \"\")\n        break\n      }\n    }\n\n    dt <- dtM\n    get_modeMin <- function(x) {\n      temp <- sort(table(x), na.last = T)\n      ifelse(temp[1] == temp[2], return(0), names(temp[1]))\n    }\n    c <- c()\n    for (i in 1:12) {\n      dt <- dt %>% filter_at(i, all_vars(. == get_modeMin(dt[, i])))\n      if (nrow(dt) == 1) {\n        co2 <- paste(as.character(dt[1, ]), collapse = \"\")\n        break\n      }\n    }\n\n    unbinary(oxygen) * unbinary(co2)\n    },\n    \"Second try\" = {\n      library(tidyverse)\n      library(data.table)\n      library(compositions)\n      \n      # part 1\n      dt <- fread(\"input.txt\", sep = \"\\n\", colClasses = c(\"character\")) %>%\n        as.data.frame() %>%\n        tidyr::separate(\"V1\", paste0(\"V\", 1:13), sep = \"\", convert = TRUE) %>%\n        select(-\"V1\")\n      \n      getModeMin <- function(x)\n        return(names(sort(table(x), na.last = T)[1]))\n      getModeMax <- function(x)\n        return(names(sort(\n          table(x), decreasing = T, na.last = T\n        )[1]))\n      \n      o <- unbinary(paste(apply(dt, 2, getModeMax), collapse = \"\"))\n      \n      c <- unbinary(paste(apply(dt, 2, getModeMin), collapse = \"\"))\n      \n      o * c\n      \n      # part 2\n      dtM <-\n        fread(\"input.txt\", sep = \"\\n\", colClasses = c(\"character\")) %>%\n        as.data.frame() %>%\n        tidyr::separate(\"V1\", paste0(\"V\", 1:13), sep = \"\", convert = TRUE) %>%\n        select(-\"V1\")\n      dto <- dtM\n      dtc <- dtM\n      \n      getModeMin <- function(x) {\n        temp <- sort(table(x), na.last = T)\n        ifelse(temp[1] == temp[2], return(0), names(temp[1]))\n      }\n      getModeMax <- function(x) {\n        temp <- sort(table(x), decreasing = T, na.last = T)\n        ifelse(temp[1] == temp[2], return(1), names(temp[1]))\n      }\n      \n      for (i in 1:12) {\n        if (nrow(dto) > 1)\n          dto <-\n            dto %>% filter_at(i, all_vars(. == getModeMax(dto[, i])))\n        if (nrow(dtc) > 1)\n          dtc <-\n            dtc %>% filter_at(i, all_vars(. == getModeMin(dtc[, i])))\n        if (nrow(dto) == 1 & nrow(dtc) == 1) {\n          oxygen <- paste(as.character(dto[1,]), collapse = \"\")\n          co2 <- paste(as.character(dtc[1,]), collapse = \"\")\n          break\n        }\n      }\n      \n      unbinary(oxygen) * unbinary(co2)\n    }, \n  \"Third try\" = {\n    library(dplyr)\n    # part 1\n    dt <- \n      stringr::str_split_fixed(readLines(\"input.txt\"), pattern = \"\", n = 12)\n    dt <- data.frame(apply(dt, 2, as.integer))\n    \n    getModeMin <- function(x)\n      return(ifelse(mean(x) > .5, 0, 1))\n    getModeMax <- function(x)\n      return(ifelse(mean(x) > .5, 1, 0))\n    \n    strtoi(paste(apply(dt, 2, getModeMax), collapse = \"\"), base = 2) *\n      strtoi(paste(apply(dt, 2, getModeMin), collapse = \"\"), base = 2)\n    \n    # part 2\n    dto <- dt\n    dtc <- dt\n    \n    for (i in 1:12) {\n      if (nrow(dto) > 1)\n        dto <- dto |>\n          filter_at(i, all_vars(. == ifelse(mean(dto[, i]) >= .5, 1, 0)))\n      if (nrow(dtc) > 1)\n        dtc <- dtc |>\n          filter_at(i, all_vars(. == ifelse(mean(dtc[, i]) < .5, 1, 0)))\n    }\n    \n    strtoi(paste(as.character(dto[1, ]), collapse = \"\"), base = 2) *\n      strtoi(paste(as.character(dtc[1, ]), collapse = \"\"), base = 2)\n  }, \n  replications = 100, columns = c(1:5), order = \"user.self\")\n\n        test replications user.self sys.self elapsed\n2 Second try          100    16.956    0.346  17.304\n1  First try          100    17.130    0.360  17.492\n3  Third try          100    20.403    0.318  20.740"
  },
  {
    "objectID": "2021/04/2021-04.html",
    "href": "2021/04/2021-04.html",
    "title": "2021-04: Giant Squid",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(stringr)"
  },
  {
    "objectID": "2021/04/2021-04.html#part-1",
    "href": "2021/04/2021-04.html#part-1",
    "title": "2021-04: Giant Squid",
    "section": "Part 1",
    "text": "Part 1\n\n# part 1\ndt <- data.frame(fread(\"input2.txt\"))\ncall <- c(84,28,29,75,58,71,26,6,73,74,41,39,87,37,16,79,55,60,62,80,64,95,46,15,5,47,2,35,32,78,89,90,96,33,4,69,42,30,54,85,65,83,44,63,20,17,66,81,67,77,36,68,82,93,10,25,9,34,24,72,91,88,11,38,3,45,14,56,22,61,97,27,12,48,18,1,31,98,86,19,99,92,8,43,52,23,21,0,7,50,57,70,49,13,51,40,76,94,53,59)\nbingo <- FALSE\n\nfor(i in 1:length(call)) {\n  dt$V1[dt$V1 == call[i]] <- NA\n  dt$V2[dt$V2 == call[i]] <- NA\n  dt$V3[dt$V3 == call[i]] <- NA\n  dt$V4[dt$V4 == call[i]] <- NA\n  dt$V5[dt$V5 == call[i]] <- NA\n  \n  for(R in seq(1, nrow(dt), 5)) {\n    for(r in R:(R+4)) {\n      if(sum(is.na(dt[r,])) == 5) {\n        bingo <- TRUE\n        break\n      }\n    }\n    for(c in 1:5) {\n      if(sum(is.na(dt[R:(R+4),c])) == 5) {\n        bingo <- TRUE\n        break\n      }\n    }\n    if(bingo)\n      break\n  }\n  if(bingo)\n    break\n}\nsum(dt[R:(R+4),], na.rm = TRUE) * call[i]\n\n[1] 29440"
  },
  {
    "objectID": "2021/04/2021-04.html#part-2",
    "href": "2021/04/2021-04.html#part-2",
    "title": "2021-04: Giant Squid",
    "section": "Part 2",
    "text": "Part 2\n\n# part 2\ndt <- data.frame(fread(\"input2.txt\"))\ncall <- c(84,28,29,75,58,71,26,6,73,74,41,39,87,37,16,79,55,60,62,80,64,95,46,15,5,47,2,35,32,78,89,90,96,33,4,69,42,30,54,85,65,83,44,63,20,17,66,81,67,77,36,68,82,93,10,25,9,34,24,72,91,88,11,38,3,45,14,56,22,61,97,27,12,48,18,1,31,98,86,19,99,92,8,43,52,23,21,0,7,50,57,70,49,13,51,40,76,94,53,59)\nbingo <- 0\nbingoTF <- FALSE\nboards <- nrow(dt) / 5\n\nfor(i in 1:length(call)) {\n  dt$V1[dt$V1 == call[i]] <- NA\n  dt$V2[dt$V2 == call[i]] <- NA\n  dt$V3[dt$V3 == call[i]] <- NA\n  dt$V4[dt$V4 == call[i]] <- NA\n  dt$V5[dt$V5 == call[i]] <- NA\n  \n  for (R in seq(1, nrow(dt), 5)) {\n    if (sum(is.na(dt[R:(R + 4), 1:5])) != 25) {\n      for (r in R:(R + 4)) {\n        if (sum(is.na(dt[r, ])) == 5) {\n          dt[r, ] <- NA\n          bingo <- append(bingo, i)\n          bingoTF <- TRUE\n          break\n        }\n      }\n      for (c in 1:5) {\n        if (sum(is.na(dt[R:(R + 4), c])) == 5) {\n          dt[R:(R + 4), c] <- NA\n          bingo <- append(bingo, i)\n          bingoTF <- TRUE\n          break\n        }\n      }\n      \n      if (bingoTF) {\n        dt[R:(R + 4),] <- NA\n        bingo <- append(bingo, i)\n        bingoTF <- FALSE\n      }\n    }\n  }\n}\n\ndt <- data.frame(fread(\"input2.txt\"))\nbingoTF <- FALSE\n\nfor(i in 1:(bingo[length(bingo)]-1)) {\n  dt$V1[dt$V1 == call[i]] <- NA\n  dt$V2[dt$V2 == call[i]] <- NA\n  dt$V3[dt$V3 == call[i]] <- NA\n  dt$V4[dt$V4 == call[i]] <- NA\n  dt$V5[dt$V5 == call[i]] <- NA\n  \n  for (R in seq(1, nrow(dt), 5)) {\n    if (sum(is.na(dt[R:(R + 4), 1:5])) != 25) {\n      for (r in R:(R + 4)) {\n        if (sum(is.na(dt[r, ])) == 5) {\n          dt[r, ] <- NA\n          bingoTF <- TRUE\n          break\n        }\n      }\n      for (c in 1:5) {\n        if (sum(is.na(dt[R:(R + 4), c])) == 5) {\n          dt[R:(R + 4), c] <- NA\n          bingoTF <- TRUE\n          break\n        }\n      }\n      \n      if (bingoTF) {\n        dt[R:(R + 4),] <- NA\n        bingoTF <- FALSE\n      }\n    }\n  }\n}\n\ndt <- tail(dt[rowSums(dt, na.rm = TRUE) != 0,], 5)\ni <- i + 1\ndt$V1[dt$V1 == call[i]] <- NA\ndt$V2[dt$V2 == call[i]] <- NA\ndt$V3[dt$V3 == call[i]] <- NA\ndt$V4[dt$V4 == call[i]] <- NA\ndt$V5[dt$V5 == call[i]] <- NA\nsum(dt, na.rm = TRUE) * call[i]\n\n[1] 13884"
  },
  {
    "objectID": "2021/05/2021-05.html",
    "href": "2021/05/2021-05.html",
    "title": "2021-05: Hydrothermal Venture",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(stringr)"
  },
  {
    "objectID": "2021/05/2021-05.html#part-1",
    "href": "2021/05/2021-05.html#part-1",
    "title": "2021-05: Hydrothermal Venture",
    "section": "Part 1",
    "text": "Part 1\n\n# part 1\ndt <- data.frame(fread(\"input.txt\"))\ndt <- data.table(\"x1\" = dt[, \"V1\"] + 1,\n                 \"y1\" = as.numeric(str_split(dt$V2, \" -> \", \n                                             simplify = TRUE)[,1]) + 1,\n                 \"x2\" = as.numeric(str_split(dt$V2, \" -> \", \n                                             simplify = TRUE)[,2]) + 1,\n                 \"y2\" = dt[, \"V3\"] + 1)[x1 == x2 | y1 == y2,]\nmx <- data.frame(matrix(data = 0, nrow = max(dt), ncol = max(dt)))\n\nfor(r in 1:nrow(dt)) {\n  mx[dt$x1[r]:dt$x2[r], dt$y1[r]:dt$y2[r]] <- \n    mx[dt$x1[r]:dt$x2[r], dt$y1[r]:dt$y2[r]] + 1\n}\n\nlength(mx[mx > 1])\n\n[1] 4728"
  },
  {
    "objectID": "2021/05/2021-05.html#part-2",
    "href": "2021/05/2021-05.html#part-2",
    "title": "2021-05: Hydrothermal Venture",
    "section": "Part 2",
    "text": "Part 2\n\n# part 2\ndt <- data.frame(fread(\"input.txt\"))\ndt <- data.table(\"x1\" = dt[, \"V1\"] + 1,\n                 \"y1\" = as.numeric(str_split(dt$V2, \" -> \", \n                                             simplify = TRUE)[,1]) + 1,\n                 \"x2\" = as.numeric(str_split(dt$V2, \" -> \", \n                                             simplify = TRUE)[,2]) + 1,\n                 \"y2\" = dt[, \"V3\"] + 1) %>%\n  .[, at :=  (x1 == y2 & x2 == y1) |\n             (x1 == y1 & x2 == y2) | \n             (abs(x2 - x1) == abs(y2 - y1))] \nmx <- matrix(data = 0, nrow = max(dt), ncol = max(dt))\n\nfor(r in 1:nrow(dt)) {\n  ifelse(dt$at[r],\n    diag(mx[dt$x1[r]:dt$x2[r], dt$y1[r]:dt$y2[r]]) <- \n      diag(mx[dt$x1[r]:dt$x2[r], dt$y1[r]:dt$y2[r]]) + 1,\n    mx[dt$x1[r]:dt$x2[r], dt$y1[r]:dt$y2[r]] <- \n      mx[dt$x1[r]:dt$x2[r], dt$y1[r]:dt$y2[r]] + 1)\n}\n\nlength(mx[mx > 1])\n\n[1] 17717"
  },
  {
    "objectID": "2021/06/2021-06.html",
    "href": "2021/06/2021-06.html",
    "title": "2021-06: Lanternfish",
    "section": "",
    "text": "dt2 <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n\nt <- table(dt2)\nv <- c(0, 0, t, rep(0, 8 - length(t)))\n\nfor(i in 1:80)\n  v <- c(v[2:7], v[8] + v[1], v[9:10], v[2])\nsum(v)\n\n[1] 363101"
  },
  {
    "objectID": "2021/06/2021-06.html#part-2",
    "href": "2021/06/2021-06.html#part-2",
    "title": "2021-06: Lanternfish",
    "section": "Part 2",
    "text": "Part 2\n\ndt2 <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n\nt <- table(dt2)\nv <- c(0, 0, t, rep(0, 8 - length(t)))\n\nfor(i in 1:256)\n  v <- c(v[2:7], v[8] + v[1], v[9:10], v[2])\noptions(scipen=999)\nsum(v)\n\n[1] 1644286074024"
  },
  {
    "objectID": "2021/06/2021-06.html#speed-edition",
    "href": "2021/06/2021-06.html#speed-edition",
    "title": "2021-06: Lanternfish",
    "section": "Speed Edition",
    "text": "Speed Edition\n\nThis was a classic Advent Of Code misdirection. Once I figured it out, my solution was quick to write and execute.\n\n\nFastest solution\n\n# part 1 and 2\ndt2 <- c(1,3,3,4,5,1,1,1,1,1,1,2,1,4,1,1,1,5,2,2,4,3,1,1,2,5,4,2,2,3,1,2,3,2,1,\n         1,4,4,2,4,4,1,2,4,3,3,3,1,1,3,4,5,2,5,1,2,5,1,1,1,3,2,3,3,1,4,1,1,4,1,\n         4,1,1,1,1,5,4,2,1,2,2,5,5,1,1,1,1,2,1,1,1,1,3,2,3,1,4,3,1,1,3,1,1,1,1,\n         3,3,4,5,1,1,5,4,4,4,4,2,5,1,1,2,5,1,3,4,4,1,4,1,5,5,2,4,5,1,1,3,1,3,1,\n         4,1,3,1,2,2,1,5,1,5,1,3,1,3,1,4,1,4,5,1,4,5,1,1,5,2,2,4,5,1,3,2,4,2,1,\n         1,1,2,1,2,1,3,4,4,2,2,4,2,1,4,1,3,1,3,5,3,1,1,2,2,1,5,2,1,1,1,1,1,5,4,\n         3,5,3,3,1,5,5,4,4,2,1,1,1,2,5,3,3,2,1,1,1,5,5,3,1,4,4,2,4,2,1,1,1,5,1,\n         2,4,1,3,4,4,2,1,4,2,1,3,4,3,3,2,3,1,5,3,1,1,5,1,2,2,4,4,1,2,3,1,2,1,1,\n         2,1,1,1,2,3,5,5,1,2,3,1,3,5,4,2,1,3,3,4)\n\nfishTable <- c(0, 0, table(dt2), rep(0, 8 - max(dt2)))\n\nfish <- function(v, d) {\n  if (d == 0) {\n    return(sum(v, digits = 999))\n  } else if (d == 176) {\n    print(sum(v))\n  }\n  fish(c(v[2:7], v[8] + v[1], v[9:10], v[2]), d - 1)\n}\nfish(fishTable, 256)\n\n[1] 363101\n\n\n[1] 1644286075023\n\n\n\n\nBenchmark\n\nbench <- rbenchmark::benchmark(\n  \"First try\" = {\n    # part 1\n    dt <- as.numeric(unlist(stringr::str_split(readLines(\"input.txt\"), \",\")))\n    dt2 <- dt\n    for(d in 1:80) {\n      dt2 <- dt2 - 1\n      if(sum(dt2 == -1) > 0) {\n        dt2 <- append(dt2, rep(8, sum(dt2 == -1)))\n        dt2[dt2 == -1] <- 6\n        }\n      }\n    s <- length(dt2)\n\n    # part 2\n    dt <- as.numeric(unlist(stringr::str_split(readLines(\"input2.txt\"), \",\")))\n    dt2 <- dt\n\n    dt <- data.frame(\"m\" = 0, \"zero\" = 0, \"one\" = 0, \"two\" = 0,\n                     \"three\" = 0, \"four\" = 0, \"five\" = 0, \"six\" = 0,\n                     \"seven\" = 0, \"eight\" = 0)\n\n    for(i in 1:length(dt2)) {\n      if(dt2[i] == 0) {dt$zero[1] <- dt$zero[1] + 1}\n      if(dt2[i] == 1) {dt$one[1] <- dt$one[1] + 1}\n      if(dt2[i] == 2) {dt$two[1] <- dt$two[1] + 1}\n      if(dt2[i] == 3) {dt$three[1] <- dt$three[1] + 1}\n      if(dt2[i] == 4) {dt$four[1] <- dt$four[1] + 1}\n      if(dt2[i] == 5) {dt$five[1] <- dt$five[1] + 1}\n      if(dt2[i] == 6) {dt$six[1] <- dt$six[1] + 1}\n      if(dt2[i] == 7) {dt$seven[1] <- dt$seven[1] + 1}\n      if(dt2[i] == 8) {dt$eight[1] <- dt$eight[1] + 1}\n    }\n\n    for (i in 1:255) {\n      dt$zero[1] <- dt$one[1]\n      dt$one[1] <- dt$two[1]\n      dt$two[1] <- dt$three[1]\n      dt$three[1] <- dt$four[1]\n      dt$four[1] <- dt$five[1]\n      dt$five[1] <- dt$six[1]\n      dt$six[1] <- dt$seven[1] + dt$m[1]\n      dt$seven[1] <- dt$eight[1]\n\n      dt$eight[1] <- dt$m[1]\n      dt$m[1] <- dt$zero[1]\n    }\n\n    options(scipen = 999)\n    s <- sum(dt[1, ])\n    },\n  \"Third try\" = {\n      # part 1 and 2\n      dt2 <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n\n      t <- table(dt2)\n      v <- c(0, 0, t, rep(0, 8 - length(t)))\n\n      for (i in 1:256) {\n        v <- c(v[2:7], v[8] + v[1], v[9:10], v[2])\n        if(i == 80)\n          s <- sum(v)\n      }\n      options(scipen = 999)\n      s <- sum(v)\n    },\n  \"With recursion!\" = {\n    # part 1 and 2\n    dt2 <- c(1,3,3,4,5,1,1,1,1,1,1,2,1,4,1,1,1,5,2,2,4,3,1,1,2,5,4,2,2,3,1,2,3,\n             2,1,1,4,4,2,4,4,1,2,4,3,3,3,1,1,3,4,5,2,5,1,2,5,1,1,1,3,2,3,3,1,4,\n             1,1,4,1,4,1,1,1,1,5,4,2,1,2,2,5,5,1,1,1,1,2,1,1,1,1,3,2,3,1,4,3,1,\n             1,3,1,1,1,1,3,3,4,5,1,1,5,4,4,4,4,2,5,1,1,2,5,1,3,4,4,1,4,1,5,5,2,\n             4,5,1,1,3,1,3,1,4,1,3,1,2,2,1,5,1,5,1,3,1,3,1,4,1,4,5,1,4,5,1,1,5,\n             2,2,4,5,1,3,2,4,2,1,1,1,2,1,2,1,3,4,4,2,2,4,2,1,4,1,3,1,3,5,3,1,1,\n             2,2,1,5,2,1,1,1,1,1,5,4,3,5,3,3,1,5,5,4,4,2,1,1,1,2,5,3,3,2,1,1,1,\n             5,5,3,1,4,4,2,4,2,1,1,1,5,1,2,4,1,3,4,4,2,1,4,2,1,3,4,3,3,2,3,1,5,\n             3,1,1,5,1,2,2,4,4,1,2,3,1,2,1,1,2,1,1,1,2,3,5,5,1,2,3,1,3,5,4,2,1,\n             3,3,4)\n\n    fishTable <- c(0, 0, table(dt2), rep(0, 8 - max(dt2)))\n    \n    fish <- function(v, d) {\n      if (d == 0) {\n        return(sum(v, digits = 999))\n      } else if (d == 176) {\n        s <- sum(v)\n      }\n      fish(c(v[2:7], v[8] + v[1], v[9:10], v[2]), d - 1)\n    }\n    s <- fish(fishTable, 256)\n  }, \n  replications = 100, columns = c(1:5), order = \"user.self\")\n\nbench$per <- bench$user.self / bench$replications\nbench\n\n             test replications user.self sys.self elapsed     per\n3 With recursion!          100     0.079    0.001   0.079 0.00079\n2       Third try          100     0.437    0.012   0.450 0.00437\n1       First try          100     7.977    1.149   9.155 0.07977"
  },
  {
    "objectID": "2021/07/2021-07.html",
    "href": "2021/07/2021-07.html",
    "title": "2021-07: The Treachery of Whales",
    "section": "",
    "text": "library(stringr)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ forcats 0.5.2 \n✔ readr   2.1.3      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\ndt <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])"
  },
  {
    "objectID": "2021/07/2021-07.html#part-1",
    "href": "2021/07/2021-07.html#part-1",
    "title": "2021-07: The Treachery of Whales",
    "section": "Part 1",
    "text": "Part 1\n\ndt2 <- data.table(\"start\" = dt)\ns <- c()\nfor(i in -max(dt):max(dt)) {\n  dt2 <- data.table(\"start\" = dt)\n  dt2[, mean := floor(mean(start))][, diff := abs(start - mean + i)]\n  s <- append(s, sum(dt2$diff))\n}\nmin(s)\n\n[1] 342730"
  },
  {
    "objectID": "2021/07/2021-07.html#part-2",
    "href": "2021/07/2021-07.html#part-2",
    "title": "2021-07: The Treachery of Whales",
    "section": "Part 2",
    "text": "Part 2\n\ndt2 <- data.table(\"start\" = dt)\ns <- c()\n\nfor(i in -max(dt):max(dt)) {\n  dt2 <- data.table(\"start\" = dt)\n  dt2[, mean := floor(mean(start))]\n  for(r in 1:nrow(dt2))\n    dt2$diff[r] <- sum(1:(abs(dt2$start[r] - dt2$mean[r] - i)))\n  s <- append(s, sum(dt2$diff))\n}\nmin(s)\n\n[1] 92335207"
  },
  {
    "objectID": "2021/07/2021-07.html#speed-edition",
    "href": "2021/07/2021-07.html#speed-edition",
    "title": "2021-07: The Treachery of Whales",
    "section": "Speed Edition",
    "text": "Speed Edition\nPlease don’t look at this. It’s embarrassing.\nI only did one rep because my first try is too slow.\n\nFastest solution\n\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(data.table)\n\n\ndt <- as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n# part 1\ns <- max(dt) ^ length(dt)\nfor (i in-ceiling(max(dt) / 2):ceiling(max(dt) / 2)) {\n  dt2 <-\n    data.table(\"start\" = dt)[, mean := floor(mean(start))][, diff := abs(start - mean - i)]\n  dtDiff <- sum(dt2$diff)\n  s <- data.table::fifelse(dtDiff < s, dtDiff, s)\n}\ns <- c(s)\n\n# part 2\ncSum <- function(y) {\n  eval(parse(text = y))\n}\ndt2 <- data.table(\"start\" = dt)\ndt2[, mean := mean(dt2$start, na.rm = TRUE)]\ndt2$abs <- abs(dt2$start - dt2$mean)\ndt2$meanC <- ceiling(dt2$mean)\ndt2$meanF <- floor(dt2$mean)\ndt2$absC <- abs(dt2$start - dt2$meanC)\ndt2$absF <- abs(dt2$start - dt2$meanF)\ndt2$diffC <- sapply(paste0(\"sum(1:\", dt2$absC, \")\"), cSum)\ndt2$diffF <- sapply(paste0(\"sum(1:\", dt2$absF, \")\"), cSum)\ns <- min(sum(dt2$diffC), sum(dt2$diffF))\n\n\n\nBenchmark\n\nbench <- rbenchmark::benchmark(\n  \"first\" = {\n    library(stringr)\n    library(tidyverse)\n    library(data.table)\n    dt <-\n      as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n    # part 1\n    dt2 <- data.table(\"start\" = dt)\n    s <- c()\n    for (i in-max(dt):max(dt)) {\n      dt2 <- data.table(\"start\" = dt)\n      dt2[, mean := floor(mean(start))][, diff := abs(start - mean + i)]\n      s <- append(s, sum(dt2$diff))\n    }\n    s <- min(s)\n    \n    # part 2\n    dt2 <- data.table(\"start\" = dt)\n    s <- c()\n    \n    for (i in-max(dt):max(dt)) {\n      dt2 <- data.table(\"start\" = dt)\n      dt2[, mean := floor(mean(start))]\n      for (r in 1:nrow(dt2))\n        dt2$diff[r] <- sum(1:(abs(dt2$start[r] - dt2$mean[r] - i)))\n      s <- append(s, sum(dt2$diff))\n    }\n    s <- min(s)\n  },\n  \"second\" = {\n    library(stringr)\n    library(tidyverse)\n    library(data.table)\n    dt <-\n      as.numeric(data.table::fread(\"input.txt\", header = FALSE)[1])\n    # part 1\n    s <- max(dt) ^ length(dt)\n    for (i in-ceiling(max(dt) / 2):ceiling(max(dt) / 2)) {\n      dt2 <-\n        data.table(\"start\" = dt)[, mean := floor(mean(start))][, diff := abs(start - mean - i)]\n      dtDiff <- sum(dt2$diff)\n      s <- data.table::fifelse(dtDiff < s, dtDiff, s)\n    }\n    s <- c(s)\n    \n    cSum <- function(y) {\n      eval(parse(text = y))\n    }\n    dt2 <- data.table(\"start\" = dt)\n    dt2[, mean := mean(dt2$start, na.rm = TRUE)]\n    dt2$abs <- abs(dt2$start - dt2$mean)\n    dt2$meanC <- ceiling(dt2$mean)\n    dt2$meanF <- floor(dt2$mean)\n    dt2$absC <- abs(dt2$start - dt2$meanC)\n    dt2$absF <- abs(dt2$start - dt2$meanF)\n    dt2$diffC <- sapply(paste0(\"sum(1:\", dt2$absC, \")\"), cSum)\n    dt2$diffF <- sapply(paste0(\"sum(1:\", dt2$absF, \")\"), cSum)\n    min(sum(dt2$diffC), sum(dt2$diffF))\n  },\n  replications = 1,\n  columns = 1:5,\n  order = \"user.self\"\n)\n\nbench$per <- bench$user.self / bench$replications\nbench\n\n    test replications user.self sys.self elapsed     per\n2 second            1     0.863    0.005   0.870   0.863\n1  first            1   125.937   11.166 138.154 125.937"
  },
  {
    "objectID": "2021/08/2021-08.html",
    "href": "2021/08/2021-08.html",
    "title": "2021-08: Seven Segment Search",
    "section": "",
    "text": "library(stringr)\nlibrary(tidyverse)\nlibrary(data.table)\n\ndt <- data.table::fread(\"input.txt\", header = FALSE)"
  },
  {
    "objectID": "2021/08/2021-08.html#part-1",
    "href": "2021/08/2021-08.html#part-1",
    "title": "2021-08: Seven Segment Search",
    "section": "Part 1",
    "text": "Part 1\n\ndt2 <- data.table(\"output\" = dt$V2)\ndt2 <- as.character(unlist(strsplit(dt2$output, \" \")))\nlength(dt2[nchar(dt2) %in% c(2, 3, 4, 7)])\n\n[1] 392\n\n\n\nThis is how I laid out my positions"
  },
  {
    "objectID": "2021/08/2021-08.html#part-2",
    "href": "2021/08/2021-08.html#part-2",
    "title": "2021-08: Seven Segment Search",
    "section": "Part 2",
    "text": "Part 2\n\ndf <- data.table::fread(\"input.txt\", header = FALSE)\ndt1 <- data.table(\"input\" = df$V1)\ndt1 <- data.table(str_split(dt1$input, \" \", simplify = TRUE))\ndt2 <- data.table(\"output\" = df$V2)\ndt2 <- data.table(str_split(dt2$output, \" \", simplify = TRUE))\ndf <- cbind(dt1, dt2)\n\nsortV <- function(x) {\n  sapply(lapply(strsplit(x, NULL), sort), paste, collapse=\"\")\n}\n\ngetNumber <- function(x1) {\n  display <- c(\"p1\" = \"\",\n               \"p2\" = \"\",\n               \"p3\" = \"\",\n               \"p4\" = \"\",\n               \"p5\" = \"\",\n               \"p6\" = \"\",\n               \"p7\" = \"\")\n  x <- as.character(x1[1:10])\n  one <- \"\"\n  four <- \"\"\n  seven <- \"\"\n  eight <- \"\"\n  \n  for (i in 1:10) {\n    if (nchar(x[i]) == 2) one <- x[i]\n    if (nchar(x[i]) == 3) seven <- x[i]\n    if (nchar(x[i]) == 4) four <- x[i]\n    if (nchar(x[i]) == 7) eight <- x[i]\n  }\n  \n  # determine p1\n  display[\"p1\"] <- str_split(seven, \"\", simplify = TRUE)[\n    !(str_split(seven, \"\", simplify = TRUE) %in% \n        str_split(one, \"\", simplify = TRUE))]\n  \n  # determine p57\n  p57 <- paste0(seven, four, collapse = \"\")\n  p57 <- str_split(p57, \"\", simplify = TRUE)\n  p27 <- as.character(unlist(str_split(x[nchar(x) == 5], \"\")))\n  p27 <- p27[!(p27 %in% p57)]\n  display[\"p5\"] <- names(sort(table(p27)))[1]\n  display[\"p7\"] <- names(sort(table(p27)))[2]\n  \n  # determine p36\n  p24 <- str_split(eight, \"\", simplify = TRUE)[\n    !(str_split(eight, \"\", simplify = TRUE) %in% \n        str_split(one, \"\", simplify = TRUE))]\n  p24 <- p24[!(p24 %in% display)]\n  p <- as.character(unlist(str_split(x[nchar(x) == 6], \"\")))\n  p <- p[!(p %in% p24)]\n  p <- sort(table(p))\n  p36 <- p[(names(p) %in% str_split(one, \"\", simplify = TRUE))]\n  display[\"p3\"] <- names(p36)[1]\n  display[\"p6\"] <- names(p36)[2]\n  \n  # determine p24\n  p24 <- unlist(str_split(x[nchar(x) == 5], \"\"))\n  p24 <- sort(table(p24[!(p24 %in% display)]))\n  display[\"p2\"] <- names(p24)[1]\n  display[\"p4\"] <- names(p24)[2]\n  display\n  \n  zero <- paste0(sort(display[c(1:3,5:7)]), collapse = \"\")\n  one <- paste0(sort(display[c(3,6)]), collapse = \"\")\n  two <- paste0(sort(display[c(1,3,4:5,7)]), collapse = \"\")\n  three <- paste0(sort(display[c(1,3:4,6:7)]), collapse = \"\")\n  four <- paste0(sort(display[c(2:4,6)]), collapse = \"\")\n  five <- paste0(sort(display[c(1:2,4,6:7)]), collapse = \"\")\n  six <- paste0(sort(display[c(1:2,4:7)]), collapse = \"\")\n  seven <- paste0(sort(display[c(1,3,6)]), collapse = \"\")\n  eight <- paste0(sort(display[c(1:7)]), collapse = \"\")\n  nine <- paste0(sort(display[c(1:4,6:7)]), collapse = \"\")\n  \n  x <- as.character(x1[11:14])\n  x <- sapply(x, sortV)\n  \n  returnNumber <- function(x) {\n    return(case_when(\n      x == zero ~ 0,\n      x == one ~ 1,\n      x == two ~ 2,\n      x == three ~ 3,\n      x == four ~ 4,\n      x == five ~ 5,\n      x == six ~ 6,\n      x == seven ~ 7,\n      x == eight ~ 8,\n      x == nine ~ 9\n    ))\n  }\n  \n  x <- paste0(sapply(x, returnNumber), collapse = \"\")\n  return(as.numeric(x))\n}\n\nsum(apply(df, 1, getNumber))\n\n[1] 1004688"
  },
  {
    "objectID": "2021/09/2021-09.html",
    "href": "2021/09/2021-09.html",
    "title": "2021-09: Smoke Basin",
    "section": "",
    "text": "library(stringr)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ forcats 0.5.2 \n✔ readr   2.1.3      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(dbscan)\n\n\nAttaching package: 'dbscan'\n\nThe following object is masked from 'package:stats':\n\n    as.dendrogram\n\nlibrary(factoextra)\n\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n\ndt <- fread(\"input.txt\", header = FALSE, colClasses = \"character\")\ndt <- data.frame(str_split(dt$V1, \"\", simplify = TRUE))\ndtPadTop <- dt[1,]\ndtPadTop[!is.na(dtPadTop)] <- 10\ndt <- rbind(rbind(dtPadTop, dt), dtPadTop)\ndtPadSides <- dt[,1]\ndtPadSides[!is.na(dtPadSides)] <- 10\ndt <- cbind(cbind(dtPadSides, dt), dtPadSides)\ndt <- data.frame(apply(dt, 2, as.numeric))"
  },
  {
    "objectID": "2021/09/2021-09.html#part-1",
    "href": "2021/09/2021-09.html#part-1",
    "title": "2021-09: Smoke Basin",
    "section": "Part 1",
    "text": "Part 1\n\ndt2 <- dt\n\ncoordX <- c()\ncoordY <- c()\nrLow <- c()\nfor(r in 2:(nrow(dt2) - 1)) {\n  for(c in 2:(ncol(dt2) - 1)) {\n    if(dt2[r,c] == min(dt[(r-1):(r+1),(c-1):(c+1)])) {\n      rLow <- append(rLow, dt2[r,c])\n      coordX <- append(coordX, c)\n      coordY <- append(coordY, r)\n    }\n  }\n}\n\ns <- 0\nfor(n in 1:length(rLow)) {\n  s <- s + (rLow[n] + 1)\n}\ns\n\n[1] 575"
  },
  {
    "objectID": "2021/09/2021-09.html#part-2",
    "href": "2021/09/2021-09.html#part-2",
    "title": "2021-09: Smoke Basin",
    "section": "Part 2",
    "text": "Part 2\n\ndt2 <- dt\ndt2[dt2 == 9 | dt2 == 10] <- NA\n\ncoordX <- c()\ncoordY <- c()\nrLow <- c()\nfor(r in 2:(nrow(dt2) - 1)) {\n  for(c in 2:(ncol(dt2) - 1)) {\n    if(!is.na(dt2[r,c])) {\n      rLow <- append(rLow, dt2[r,c])\n      coordX <- append(coordX, c)\n      coordY <- append(coordY, r)\n    }\n  }\n}\n\ndt3 <- data.frame(\"x\" = coordX, \"y\" = coordY, \"d\" = rLow)\ndt3 <- dt3[dt3$d <= 8,]\ndb <- dbscan(dt3[,1:2], eps = 1, minPts = 0)\ndt3$cluster <- db$cluster\ndt <- dt3 %>%\n  group_by(cluster) %>%\n  count() %>%\n  filter(cluster != 0) %>%\n  arrange(desc(n)) %>%\n  head(3)\nprod(dt$n)\n\n[1] 1019700\n\ndt3$cluster <- ifelse(dt3$cluster %in% dt$cluster, dt3$cluster, 0)\ndt3 %>%\n  mutate(cluster = as.factor(cluster)) %>%\n  ggplot() +\n  geom_point(aes(x = x, y = y, color = cluster))\n\n\n\nggsave(\"cluster.png\")\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "2021/10/2021-10.html",
    "href": "2021/10/2021-10.html",
    "title": "2021-10: Syntax Scoring",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ forcats 0.5.2 \n✔ readr   2.1.3      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\ndt <- data.table::fread(\"input.txt\", header = FALSE, colClasses = \"character\")"
  },
  {
    "objectID": "2021/10/2021-10.html#part-1",
    "href": "2021/10/2021-10.html#part-1",
    "title": "2021-10: Syntax Scoring",
    "section": "Part 1",
    "text": "Part 1\n\ndt2 <- dt\n\nmonkeyBall <- function(x, n) {\n  x <- str_replace_all(x, \"\\\\(\\\\)|\\\\[\\\\]|\\\\{\\\\}|\\\\<\\\\>\", \"\")\n  if(nchar(x) == n) {\n    t <- as.character(str_split(str_replace_all(x, \"[\\\\(\\\\[\\\\{\\\\<]\", \"\"),\n                   \"\",\n                   simplify = TRUE)[1,])\n    t <- t[1]\n    return(t)\n  }\n  return(monkeyBall(x, nchar(x)))\n}\n\nt <- c()\nfor(r in 1:nrow(dt2)) {\n  x <- dt2[r,1]\n  n <- nchar(x)\n  t <- append(t, monkeyBall(x, n))\n}\nt <- table(t)\nif (is.na(t[\")\"]))\n  t[\")\"] <- 0\nif (is.na(t[\"]\"]))\n  t[\"]\"] <- 0\nif (is.na(t[\"}\"]))\n  t[\"}\"] <- 0\nif (is.na(t[\">\"]))\n  t[\">\"] <- 0\n(3 * t[\")\"]) + (57 * t[\"]\"]) + (1197 * t[\"}\"]) + (25137 * t[\">\"])\n\n     ) \n311949"
  },
  {
    "objectID": "2021/10/2021-10.html#part-2",
    "href": "2021/10/2021-10.html#part-2",
    "title": "2021-10: Syntax Scoring",
    "section": "Part 2",
    "text": "Part 2\n\ndt2 <- dt\n\nmonkeyBall <- function(x, n) {\n  x <- str_replace_all(x, \"\\\\(\\\\)|\\\\[\\\\]|\\\\{\\\\}|\\\\<\\\\>\", \"\")\n  if(nchar(x) == n) {\n    if(!grepl(\"\\\\)|\\\\]|\\\\}|\\\\>\", x, perl = TRUE))\n      return(x)\n    return(\"\")\n  }\n  return(monkeyBall(x, nchar(x)))\n}\n\nt <- c()\nfor(r in 1:nrow(dt2)) {\n  x <- dt2[r,1]\n  n <- nchar(x)\n  t <- append(t, monkeyBall(x, n))\n}\nt <- t[nchar(t) > 0]\ns <- c()\nfor(i in t) {\n  miniS <- 0\n  miniT <- rev(str_split(i, \"\", simplify = TRUE)[1,])\n  for(l in miniT) {\n    miniS <- (5 * miniS) + case_when(l == \"(\" ~ 1,\n                                     l == \"[\" ~ 2,\n                                     l == \"{\" ~ 3,\n                                     l == \"<\" ~ 4)\n  }\n  s <- append(s, miniS)\n}\ns <- s[!is.na(s)]\nmedian(s)\n\n[1] 3042730309"
  },
  {
    "objectID": "2021/11/2021-11.html",
    "href": "2021/11/2021-11.html",
    "title": "2021-11: Dumbo Octopus",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose"
  },
  {
    "objectID": "2021/11/2021-11.html#part-1",
    "href": "2021/11/2021-11.html#part-1",
    "title": "2021-11: Dumbo Octopus",
    "section": "Part 1",
    "text": "Part 1\n\noctopus <- octopusM |>\n  strsplit(\"\") %>%\n  do.call(rbind, .) |>\n  as.matrix() |>\n  apply(1, as.numeric) |>\n  t()\n\noctopusCol <- ncol(octopus)\noctopusRow <- nrow(octopus)\n\nflash_counter <- 0\n\nget_adjacent <- function(xx, yy, ncol, nrow) {\n  x <- xx; y <- yy\n  x <- (x-1):(x+1); y <- (y-1):(y+1)\n  \n  x <- x[sapply(x, \\(j) between(j, 1, ncol))]\n  y <- y[sapply(y, \\(j) between(j, 1, nrow))]\n\n  expand.grid(\"col\" = x, \"row\" = y) |>\n    filter(!(col == xx & row == yy)) |>\n    as.matrix()\n}\n\nfor(i in 1:100) {\n  octopus <- octopus + 1\n  \n  while(any(octopus > 9)) {\n    flash <- which(octopus > 9, arr.ind = TRUE)\n    octopus[octopus > 9] <- 0\n    for(x in 1:nrow(flash)) {\n      adj <- \n        get_adjacent(flash[x, \"col\"], flash[x, \"row\"], octopusCol, octopusRow)\n      \n      octopus[adj[,\"row\"], adj[,\"col\"]] <- \n        apply(octopus[adj[,\"row\"], adj[,\"col\"]], c(1, 2), \n              \\(x) { ifelse(x == 0, 0, x + 1) })\n    }\n  }\n  flash_counter <<- flash_counter + length(octopus[octopus == 0])\n}\nflash_counter\n\n[1] 1603"
  },
  {
    "objectID": "2021/11/2021-11.html#part-2",
    "href": "2021/11/2021-11.html#part-2",
    "title": "2021-11: Dumbo Octopus",
    "section": "Part 2",
    "text": "Part 2\n\noctopus <- octopusM |>\n  strsplit(\"\") %>%\n  do.call(rbind, .) |>\n  as.matrix() |>\n  apply(1, as.numeric) |>\n  t()\n\ni <- 1\n\nwhile(TRUE) {\n  octopus <- octopus + 1\n  \n  while(any(octopus > 9)) {\n    flash <- which(octopus > 9, arr.ind = TRUE)\n    octopus[octopus > 9] <- 0\n    for(x in 1:nrow(flash)) {\n      adj <- \n        get_adjacent(flash[x, \"col\"], flash[x, \"row\"], octopusCol, octopusRow)\n      \n      octopus[adj[,\"row\"], adj[,\"col\"]] <- \n        apply(octopus[adj[,\"row\"], adj[,\"col\"]], c(1, 2), \n              \\(x) { ifelse(x == 0, 0, x + 1) })\n    }\n  }\n  if (length(octopus[octopus == 0]) == octopusRow * octopusCol) {\n    print(i)\n    break\n  } else { i <- i + 1 }\n}\n\n[1] 222"
  },
  {
    "objectID": "2021/12/2021-12.html",
    "href": "2021/12/2021-12.html",
    "title": "2021-12: Passage Pathing",
    "section": "",
    "text": "library(stringr)\nlibrary(unglue)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ forcats 0.5.2 \n✔ readr   2.1.3      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\ndt <- readLines(\"input2.txt\")\n\nWarning in readLines(\"input2.txt\"): incomplete final line found on 'input2.txt'"
  },
  {
    "objectID": "2021/12/2021-12.html#part-1",
    "href": "2021/12/2021-12.html#part-1",
    "title": "2021-12: Passage Pathing",
    "section": "Part 1",
    "text": "Part 1\n\npaste0(c(\"graph LR\", dt), collapse = \"\\n\") |>\n  str_replace_all(\"-\", \"-->\") |>\n  str_replace_all(\"end\", \"finish\") |>\n  DiagrammeR::mermaid()\n\n\n\n\nstr_split(dt, \"-\", simplify = TRUE) |>\n  data.frame() |>\n  `colnames<-`(c(\"start\", \"finish\")) |>\n  mutate(finish = ifelse(finish == \"end\", \"finish\", finish))\n\n  start finish\n1 start      A\n2 start      b\n3     A      c\n4     A      b\n5     b      d\n6     A finish\n7     b finish\n\ncombn(dt, m = 2) |>\n  t() |>\n  data.frame() |>\n  separate(X1, c(\"xStart\", \"xFinish\")) |>\n  separate(X2, c(\"yFinish\", \"yStart\")) |>\n  filter(xStart == yFinish | yStart == xFinish) |>\n  unique() |>\n  pivot_longer(cols = c(ends_with(\"Start\"), ends_with(\"Finish\"))) |>\n  unique()\n\n# A tibble: 13 × 2\n   name    value\n   <chr>   <chr>\n 1 xStart  start\n 2 yStart  b    \n 3 xFinish A    \n 4 yFinish start\n 5 xFinish b    \n 6 yFinish A    \n 7 xStart  A    \n 8 xFinish c    \n 9 yStart  end  \n10 xStart  b    \n11 xFinish d    \n12 yFinish b    \n13 xFinish end"
  },
  {
    "objectID": "2021/13/2021-13.html",
    "href": "2021/13/2021-13.html",
    "title": "2021-13: Transparent Origami",
    "section": "",
    "text": "library(stringr)\nlibrary(data.table)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ forcats 0.5.2 \n✔ readr   2.1.3      \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::between()   masks data.table::between()\n✖ dplyr::filter()    masks stats::filter()\n✖ dplyr::first()     masks data.table::first()\n✖ dplyr::lag()       masks stats::lag()\n✖ dplyr::last()      masks data.table::last()\n✖ purrr::transpose() masks data.table::transpose()\n\ndt <- readLines(\"input.txt\")\n\ncoords <- dt[grepl(\"[0-9]{1,4},[0-9]{1,4}\", dt)]\ncoords <- data.frame(str_split(coords, \",\", simplify = TRUE))\ncoords <- data.frame(sapply(coords, as.numeric))\ncoords <- coords + 1\n\nfolds <- str_remove_all(dt[grepl(\"fold along\", dt)], \"fold along \")\nfolds <- data.frame(str_split(folds, \"=\", simplify = TRUE))\nfolds$X2 <- as.numeric(folds$X2)\n\npaper <- matrix(data = FALSE,\n                nrow = (max(folds$X2[folds$X1 == \"y\"]) * 2) + 1,\n                ncol = (max(folds$X2[folds$X1 == \"x\"]) * 2) + 1)\nfor(r in 1:nrow(coords)) { paper[coords$X2[r], coords$X1[r]] <- TRUE }"
  },
  {
    "objectID": "2021/13/2021-13.html#part-1",
    "href": "2021/13/2021-13.html#part-1",
    "title": "2021-13: Transparent Origami",
    "section": "Part 1",
    "text": "Part 1\n\nfold <- function(dir, n, paper) {\n  if (dir == \"x\") {\n    paper1 <- paper[,1:(n)]\n    paper2 <- paper[,(n+2):ncol(paper)]\n    paper2 <- t(apply(paper2, 1, rev))\n  } else if (dir == \"y\") {\n    paper1 <- paper[1:(n),]\n    paper2 <- paper[(n+2):nrow(paper), ]\n    paper2 <- apply(paper2, 2, rev)\n  }\n\n  return(ifelse(paper1 | paper2, TRUE, FALSE))\n}\n\nfolded <- fold(folds$X1[1], folds$X2[1], paper)\nlength(which(folded))\n\n[1] 684"
  },
  {
    "objectID": "2021/13/2021-13.html#part-2",
    "href": "2021/13/2021-13.html#part-2",
    "title": "2021-13: Transparent Origami",
    "section": "Part 2",
    "text": "Part 2\n\nfold <- function(dir, n, paper) {\n  if (dir == \"x\") {\n    paper1 <- paper[,1:(n)]\n    paper2 <- paper[,(n+2):ncol(paper)]\n    paper2 <- t(apply(paper2, 1, rev))\n  } else if (dir == \"y\") {\n    paper1 <- paper[1:(n),]\n    paper2 <- paper[(n+2):nrow(paper), ]\n    paper2 <- apply(paper2, 2, rev)\n  }\n  \n  return(ifelse(paper1 | paper2, TRUE, FALSE))\n}\n\nfor(i in 1:nrow(folds)) {\n  paper <- fold(folds$X1[i], folds$X2[i], paper)\n  \n  coordX <- c()\n  coordY <- c()\n  for(r in 1:nrow(paper)) {\n    for(c in 1:ncol(paper)) {\n      if(paper[r,c]) {\n        coordX <- append(coordX, r)\n        coordY <- append(coordY, c)\n      }\n    }\n  }\n  \n  points <- data.frame(cbind(coordX, coordY)) %>%\n    ggplot() +\n    geom_point(aes(x = coordY, y = -coordX)) +\n    xlim(0, max(c(coordX, coordY))) +\n    ylim(-max(c(coordX, coordY)), 0)\n  if(i == nrow(folds))\n    print(points)\n}"
  },
  {
    "objectID": "2021/14/2021-14.html",
    "href": "2021/14/2021-14.html",
    "title": "2022-14: Extended Polymerization",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(stringr)\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))"
  },
  {
    "objectID": "2021/14/2021-14.html#part-1",
    "href": "2021/14/2021-14.html#part-1",
    "title": "2022-14: Extended Polymerization",
    "section": "Part 1",
    "text": "Part 1\n\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n\nfor(d in 1:10) {\n  pos <- data.frame(\"let\" = NA, \"pos\" = NA)\n  for (i in 1:(length(polymer) - 1)) {\n    pos <- rbind(pos, data.frame(\"let\" =\n                                   pairs$X2[pairs$X1 == paste0(polymer[i:(i + 1)],\n                                                               collapse = \"\")],\n                                 \"pos\" = i))\n  }\n  pos <- pos[-1, ]\n  \n  for (r in 1:nrow(pos)) {\n    polymer <-\n      R.utils::insert(x = polymer,\n                      values = pos$let[r],\n                      ats = r + pos$pos[r])\n  }\n  # print((table(polymer)))\n}\nt <- sort(table(polymer), decreasing = TRUE)\nt[1] - rev(t)[1]\n\n   S \n3230"
  },
  {
    "objectID": "2021/14/2021-14.html#part-2",
    "href": "2021/14/2021-14.html#part-2",
    "title": "2022-14: Extended Polymerization",
    "section": "Part 2",
    "text": "Part 2\n\ndt <- readLines(\"input.txt\")\npolymer <- dt[!grepl(\" -> \", dt)][1]\npolymer <- str_split(polymer, \"\", simplify = TRUE)[1,]\npairs <- \n  data.frame(str_split(dt[grepl(\" -> \", dt)], \" -> \", simplify = TRUE))\n\ndt <-\n  data.frame(\"x\" = polymer[-length(polymer)], \"y\" = polymer[-1]) %>%\n  mutate(\"z\" = paste0(x, y, sep = \"\")) %>%\n  select(\"z\") %>%\n  group_by(z) %>%\n  count()\n  \ncounts <- unique(unlist(strsplit(pairs$X1, \"\")))\ncounts <- \n  rep(0, length(counts)) %>%\n  `names<-`(sort(unique(counts))) %>%\n  data.frame() %>%\n  rownames_to_column(var = \"value\") %>%\n  `colnames<-`(c(\"value\", \"n\")) %>%\n  rbind(table(polymer) |> data.frame() |> `colnames<-`(c(\"value\", \"n\"))) %>%\n  group_by(value) |>\n    summarise(n = sum(n)) |>\n    ungroup()\n\nbuild_poly <- function(dt, counts, i = 1) {\n  if (i == 40 + 1) { return(counts) }\n  dt <- dt %>%\n    right_join(pairs, by = c(\"z\" = \"X1\")) %>%\n    filter(!is.na(n))\n  \n  counts <-\n    dt %>%\n    group_by(X2) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    `colnames<-`(c(\"value\", \"n\")) %>%\n    rbind(counts) %>%\n    group_by(value) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    filter(!is.na(n))\n  \n  dt <- dt %>%\n    separate(\"z\", into = c(\"x\", \"y\"), sep = 1) %>%\n    mutate(x = paste(x, X2, sep = \"\"),\n           y = paste(X2, y, sep = \"\")) %>%\n    select(-X2) %>%\n    pivot_longer(cols = c(x, y)) %>%\n    select(-name) %>%\n    group_by(value) %>%\n      summarise(n = sum(n)) %>%\n    ungroup() %>%\n    rename(\"z\" = value)\n  \n  build_poly(dt, counts, i + 1)\n}\n\noptions(digits = 20)\n\ntab <- \n  build_poly(dt, counts) |>\n  deframe() |>\n  sort()\n\ntab[length(tab)] - tab[1]\n\n            S \n3542388214529"
  },
  {
    "objectID": "2021/18/2021-18.html",
    "href": "2021/18/2021-18.html",
    "title": "2021-18: Snailfish",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\n\n\ndt <- readLines(\"input.txt\")"
  },
  {
    "objectID": "2021/22/2021-22.html",
    "href": "2021/22/2021-22.html",
    "title": "2021-22: Reactor Reboot",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\n\n\ndt <-\n  readLines(\"input.txt\") |>\n  str_split(\" |,|\\\\.\\\\.\") |>\n  lapply(\\(x) str_remove_all(x, \"x=|y=|z=\")) %>%\n  do.call(rbind, .) |>\n  data.frame() |>\n  `colnames<-`(c(\"op\", \"x1\", \"x2\", \"y1\", \"y2\", \"z1\", \"z2\")) |>\n  mutate_at(vars(matches(\"\\\\w\\\\d\")), as.integer)\n\ndt\n\n     op     x1     x2     y1     y2     z1     z2\n1    on    -13     37    -36     14     -3     45\n2    on     -1     43    -15     32    -35     15\n3    on     -7     44     -6     48    -13     38\n4    on    -42      3    -42     10     -3     44\n5    on    -34     13    -27     27    -31     23\n6    on    -14     39    -34     10    -40     10\n7    on    -12     34    -25     19    -32     15\n8    on    -47      6    -29     20    -45      9\n9    on    -37     16    -17     34    -25     29\n10   on    -28     20    -19     34     -3     47\n11  off      1     19    -30    -14     19     33\n12   on    -34     19    -22     25    -17     35\n13  off    -49    -32    -26    -13     19     38\n14   on    -28     25    -46      2    -11     43\n15  off    -30    -21    -44    -26      6     21\n16   on    -20     31    -39     11    -23     28\n17  off     33     49     29     47      8     25\n18   on    -28     25    -26     20    -49     -1\n19  off    -19     -5      3     18    -44    -27\n20   on    -34     15    -29     25    -34     17\n21   on -77707 -66888 -15495   7977  21658  44356\n22   on  16734  33844 -90735 -54900   2270  19264\n23   on  37676  47017 -53726 -31603 -58485 -51594\n24   on -25500 -16563  -6468   2463  69232  89880\n25   on -35872 -12957 -84461 -60975 -20007  -9532\n26   on -89647 -67921 -39059 -13640 -42281  -6574\n27   on  47838  82298 -43677 -35749   9027  31549\n28   on  -9400  11474 -39127 -21505  57808  89970\n29   on  61666  80803  10083  24758  37048  46860\n30   on  26068  46741 -77898 -58561 -30238     62\n31   on -22689 -13065 -81029 -64591 -21055   3749\n32   on  38030  60209 -34391 -15028 -55983 -51628\n33   on  42982  62845 -54347 -47689  15630  45725\n34   on -18872  11038 -76016 -52462 -42387 -37005\n35   on -55695 -38898  36001  55982 -70788 -36425\n36   on  -7131  26336  42833  63923 -64129 -45423\n37   on -60488 -40325 -47405 -31877  48181  58567\n38   on -13302  15801  73748  92138 -34147 -17494\n39   on  31153  53512  41173  61390  38591  49656\n40   on -35709  -8667 -34876    536 -79524 -59100\n41   on  45731  73067  50149  54110 -34129 -20399\n42   on   2923  23025  53277  82004  30350  45240\n43   on -34895 -14927  27451  50766 -67502 -59363\n44   on  -8366  10206  22907  37139  70976  78784\n45   on  26000  31619  55905  81695  28039  45741\n46   on -27099    342  70224  85805  -6497  11011\n47   on  -1601   9361 -40465  -9946  64120  76194\n48   on -29110 -17895  38967  50663  56746  78592\n49   on -77526 -50930 -60463 -42672 -16932    667\n50   on -19801   1121 -95369 -68521  -2863   7840\n51   on -56034 -34754  -4651  19561  61780  87310\n52   on  50357  81377 -54480 -35226 -13214  22298\n53   on -37854 -29487 -24307  -9466 -70318 -65828\n54   on -87626 -68588  -1140  28963  23659  43617\n55   on  10140  45670  19441  48501  52468  67612\n56   on -61161 -46395  50168  60300 -43642 -22240\n57   on -41791 -23146  59820  92015 -30219 -13117\n58   on  51416  66401  21581  26160  36042  66562\n59   on  43985  71278 -76853 -47487  10319  33057\n60   on  16554  44446 -83467 -49432  27702  46302\n61   on -40078 -32697 -19712  13098 -79179 -70318\n62   on -72544 -48748 -24529 -10822  25757  62217\n63   on -49848 -23893  49735  70928 -17843   4166\n64   on  46504  62954 -63451 -39706  -7060  12582\n65   on -18091   5639 -80367 -60849  20700  28381\n66   on -70298 -58521 -36254 -16840  39462  58760\n67   on -57895 -36812 -80262 -60063  17594  35827\n68   on  66005  74563 -40697 -10634 -28571 -12651\n69   on -34740 -12979  14459  27693  72315  83610\n70   on -54526 -27860  20919  36223  53916  69317\n71   on   5482  28204 -72328 -47181  36101  68864\n72   on -10361  18618  50680  80016  29881  52293\n73   on  22013  53090  61184  77888   -690  15445\n74   on  49878  80860 -45597 -24600   8773  42131\n75   on -21481  -2534 -52590 -35874  59304  71419\n76   on -27491  -2116 -57213 -37184  35989  58007\n77   on -27046 -11339 -93198 -69701   2894  23463\n78   on -49531 -33827 -71407 -54183  28280  48597\n79   on   2360  31991  25158  56562 -80620 -60755\n80   on -26128   -998 -62930 -52635  35279  63815\n81   on  48650  66941 -61055 -28617  29166  31637\n82   on  69844  85996 -22985  -2275  21553  38166\n83   on   2845  20505  49897  61909  53069  67906\n84   on -28415  -3203  57533  73503  21661  31210\n85   on   8443  20885  34174  61857  57794  68245\n86   on  12152  42225  17448  37654  50480  71531\n87   on  57295  73077 -41599  -9861 -67808 -36322\n88   on -39269 -26154 -14375  14800  71243  78784\n89   on  10757  31258 -62179 -38241 -79093 -48669\n90   on -30816 -13772  31105  43599  56286  80856\n91   on -81989 -50706 -30815 -14580  18775  44958\n92   on  40071  59419  44624  61873  29016  50450\n93   on  40251  59324 -67414 -49803 -36761 -11231\n94   on  27417  46406 -66475 -47513 -25177 -11900\n95   on -65899 -38890 -12430   5965  57577  63876\n96   on -25267  -2876 -44000 -32310 -80593 -53949\n97   on -18326  -7876  43132  66145 -66613 -36605\n98   on -57018 -53229  36751  59783 -30079  -9617\n99   on -66290 -47772 -31894  -1002  33540  57723\n100  on   -125  24382 -80848 -72343 -49693 -15529\n101  on -24015  -2898 -53625 -39125  55225  73628\n102  on  51897  80923  -4054   3520 -45412 -36746\n103  on -30093  -1431  34246  47381 -75270 -59132\n104  on  31766  51586  48710  67006  39768  49335\n105  on -20923   6424   1580  14928 -89071 -61335\n106  on -78388 -68973   2726  15396  31839  51487\n107  on -17101   1916 -31904 -18696  62499  86196\n108  on  60981  74827 -33558  -6318  17172  47217\n109  on  -3097   3774  74123  95012 -15851  19259\n110  on -29901 -26536  -5670   9081  62581  77681\n111  on -23676  -6641 -87054 -60450   6151  27241\n112  on -75546 -60657 -46787 -18586   6164  28899\n113  on -62447 -45293 -55081 -38324 -45488 -36816\n114  on -35053 -11420 -78994 -73796 -27546  -2495\n115  on  14791  35832   8044  17682 -75881 -70257\n116  on  37114  54311 -62857 -40402  42866  62581\n117  on -78891 -57261 -19933   2380 -46848 -34329\n118  on -40885 -31987  56185  85808 -12714  14124\n119  on -22584  -1227  62080  69853  31132  43774\n120  on  21369  37041 -29949   1877 -84346 -70161\n121  on -32994 -11854 -23931 -13655  68474  75824\n122  on  28950  44900  37331  65913 -53762 -21514\n123  on  14251  32416 -59808 -39089 -69466 -54177\n124  on  -1001  11349 -91855 -70109 -20491  -5599\n125  on -55376 -22523  26566  45387  53177  76643\n126  on   5773  21346 -24068  -6968  63947  88583\n127  on -61909 -45698  56099  78327  -6552  20928\n128  on -91524 -56986  -1853  11970  13238  33401\n129  on  65923  82086  -3320  28990   2252  31777\n130  on -49874 -21418   3494  29323 -69436 -64723\n131  on  73184  89417 -42741  -7654   2716  14770\n132  on -19543   5754 -45523 -35685 -69929 -58853\n133  on  20033  44221 -84229 -57579  -8712   5719\n134  on -91462 -67462   4054  26833 -39415 -13802\n135  on  27732  50763 -58005 -35512 -66011 -34072\n136  on  27133  51350  45426  71070  -8192  -4652\n137  on  32748  56378 -70321 -50194  26633  50320\n138  on -79635 -59790  -1252  13376  19282  37497\n139  on  63307  93679   7073  20800   1161  28560\n140  on -36145 -14630 -37537 -21452  56070  76078\n141  on  30686  50529 -67131 -36989  35265  66047\n142  on -15752 -11751  59850  88935  18731  42395\n143  on  38283  60807  51015  57433 -40995 -25599\n144  on -28800  -5978  73498  82844 -33104 -12502\n145  on  38063  67439 -35709 -20195 -53965 -32238\n146  on -68345 -50452   8456  26579  30921  48065\n147  on -32241 -19903  41696  65189  51000  65538\n148  on  36262  42472 -64295 -31497 -60784 -48215\n149  on -19510   -110  31699  54917 -67629 -53476\n150  on -62256 -40043 -35060 -34579 -70111 -50680\n151  on -39707 -23353 -19810   6512 -87108 -53181\n152  on -82176 -51976 -50348 -40880 -33910 -14246\n153  on -83924 -70902 -19175   2985 -15384  15455\n154  on  49316  72497    425   6060  52206  70825\n155  on -83699 -57057 -27150  -4795  22540  29041\n156  on  -3101  12001  68638  91778 -40657 -29719\n157  on   2252  24442  34848  55848 -75998 -48307\n158  on  -5069  16361 -20661  -2439  65914  86332\n159  on -57402 -38222 -69446 -40489 -54314 -29224\n160  on -13242    408  68201  84940 -45871 -38004\n161  on  56749  63913  -8638   3672  47720  62702\n162  on  54011  76285 -62270 -39823 -22993 -14872\n163  on  58382  77062 -20697  -7882  46625  52172\n164  on -47219 -11653  26546  45116 -73892 -62298\n165  on  52120  73926  32675  54357 -45806 -32181\n166  on -11456  -3541 -68839 -41789  45637  76793\n167  on -45992 -25163  70590  94451  -3611  27080\n168  on -77343 -54249  25725  46466  -7443   1553\n169  on  53624  60939  16322  19384 -60689 -54993\n170  on -62023 -51180 -11378   -249 -60785 -36599\n171  on  51752  62523 -55025 -48761 -35067 -13224\n172  on -79436 -62124  17736  25062 -33415 -15642\n173  on  58309  68890 -53920 -35770  -5858  12657\n174  on -70319 -60470  13686  43339 -44612 -11192\n175  on -14271   3865  -5940  16892 -89272 -77708\n176  on  56603  74277 -30330 -17500 -65513 -34252\n177  on  70395  81599  -8116  -4807 -47231 -23373\n178  on  26409  53159  37900  58813 -58362 -44114\n179  on  -6833  22656  49013  66204 -64722 -42138\n180  on -79939 -47600 -54134 -42160   7100  29266\n181  on -12387   1516 -93270 -73717  21246  31778\n182  on -68856 -43032 -13298  19069  45157  61355\n183  on -52372 -35450   7419  16683 -86081 -55547\n184  on  24953  45687  45007  63906  14094  39220\n185  on -55616 -27396  62300  72738  -2200   9190\n186  on  50053  83913 -11119  -1995 -60574 -21845\n187  on -34214 -11133 -11996  -4356  72157  82626\n188  on -81300 -54391 -17887   -200  31179  50660\n189  on -16117  18870  61218  84345  33172  58266\n190  on -94022 -70920    422  21148 -40110  -4601\n191  on   7997  32024 -93325 -76394  -1522   5982\n192  on  -9500  16520  23350  46041 -88268 -58078\n193  on -23747  -4542 -58091 -41118  62263  73989\n194  on -17732  -2905 -95543 -64883  -1683  25695\n195  on  75498  83226  -6258  14464   2112  14733\n196  on  20265  41561  11946  41840  50936  79878\n197  on  53047  82535 -14468   1393 -43142 -21193\n198  on  27130  52544  57145  81711 -35213  -9752\n199  on -45338 -15941 -19607    110  67448  89256\n200  on -59996 -26746   2539  21005  53468  67082\n201  on   3402  28703 -93591 -66413   8528  10542\n202  on -49409 -35285  32697  52202  48515  71687\n203  on  49025  53870  -9075  16495 -66082 -46321\n204  on  30601  51564 -69996 -47533 -25031   2209\n205  on   5635  35015  53724  79653 -26973 -16059\n206  on  55318  86926 -23333  -9355   7047  44226\n207  on -30289 -12285 -68389 -57981 -48161 -40552\n208  on  58882  92805  23648  37563   5964  22967\n209  on  34496  42738 -72380 -48483 -34740   -955\n210  on  20317  32221  20101  38130 -86821 -68574\n211  on -34120 -25879 -55894 -44842 -55903 -40976\n212  on -45645 -28331 -74951 -59701  30291  41140\n213  on -18717   -645 -49850 -25005 -85064 -56705\n214  on -66069 -62114  -7151  16958  31325  61285\n215  on  -8768   2875  70141  79960 -16283    162\n216  on  48671  75660  34126  57253  25955  40686\n217  on   1592  40495  17266  42218  53722  79079\n218  on -19745   6994 -93790 -75591 -28647   9949\n219  on -33893 -12969 -90507 -60780 -42644 -10587\n220  on  60910  79183 -49087 -26806   -209   8359\n221  on -35209   -832  18733  37433 -77554 -53413\n222 off -24707  -6441 -41376 -10856  55331  90949\n223 off   6474  32653 -14454  17574 -88453 -71268\n224  on -13493  -6403  47314  66556 -54874 -29147\n225  on  -9291  12608  53741  85000 -46306 -17017\n226 off  13983  32183  38353  59846  44630  60489\n227  on -20250  12042   6499  35623 -81728 -71834\n228 off -12034  26843 -13773      3 -84021 -75465\n229  on -26797 -16552 -49960 -32197 -65821 -61668\n230  on   8368  23515  21417  44347  55621  84595\n231 off  49540  69051  31705  39693 -42453 -14061\n232  on -69780 -50337 -64895 -31351  -1140  22240\n233  on  70874  82029  -4927  29616 -17097   7597\n234 off -35974 -21133 -17861     70  66698  84031\n235 off -47342 -11961   -672  21189 -74692 -65282\n236 off  24383  49319  48619  83833  15987  31130\n237 off   4559  23214  61581  86675  11178  41759\n238  on  61861  73539 -60405 -42686   5953  23802\n239 off -59929 -28960 -56097 -28974 -52538 -46415\n240 off -72615 -55995 -36832 -13278  19227  40885\n241  on -12406   8284 -92734 -74910 -35203 -11978\n242 off  11249  35967  28322  57776  56548  84816\n243 off  44731  62241  35624  44662 -66511 -34520\n244 off -87104 -74134 -13992  12953  -3294  10178\n245  on -28985  -3937 -56788 -26115  63095  78456\n246 off  22993  41149 -72025 -38641  53155  65281\n247 off -70263 -64986  10277  24698  17534  54469\n248  on  33137  54068  49394  60447  14589  36485\n249 off   1761   5646 -30207 -23218  67948  86068\n250 off  23532  51240 -68091 -30165 -66152 -47659\n251  on  63492  78630  26451  49621 -16485   2633\n252  on  61364  70239 -44857 -25262  -8792  15341\n253 off -44240 -24659  40477  65486  46273  50810\n254  on -82196 -65068  22741  26991  21666  26831\n255  on  19512  39779  51290  71942  33521  52593\n256 off  52818  66473  38215  68935  11423  29773\n257 off  19475  48035  50117  69010 -49063 -24987\n258  on -14143   9865 -10817   8431  65536  80561\n259 off -72733 -48163 -25291  -9724 -66757 -36479\n260 off -43106 -20567  58626  65043  30453  56787\n261 off  13154  16214   5656  13752  66016  80418\n262 off -11408  18735  39272  59415  60254  73108\n263  on -77078 -61965 -17101 -10110  44955  62934\n264 off  40661  68779  45899  59382 -21792 -15201\n265 off  53315  78287 -31686 -15404 -41990 -23080\n266 off -18699  12677 -34848 -11433  63732  95545\n267 off -24502 -17077 -91563 -71124  15320  22882\n268  on  24300  44953  -8117  20940 -85817 -64192\n269 off -57159 -39199 -29219 -23341 -68301 -54847\n270  on  34394  67095 -53551 -28864  43253  61926\n271 off -50069 -30721 -14112  20450 -84644 -54725\n272  on  23629  36100  59625  71637 -42808 -14597\n273  on -48311 -40298 -52473 -36850 -55879 -29005\n274  on -12671  11981 -46219 -25335  68262  79543\n275  on  -4192  11450 -33767 -22561  62929  78589\n276  on -72223 -46005   -407  27380 -64061 -33742\n277 off  41077  57062 -58884 -45405  19829  48890\n278 off  49487  69913  17640  41283  44735  66488\n279 off -73528 -49377 -49007 -39363   9948  35961\n280 off -71643 -56910  30988  61528   1455   7445\n281 off -37842 -11285  64140  77407  -1880  26818\n282  on -73578 -43035   9872  28002  44466  65647\n283 off    326  24287  68067  99200 -19343  11282\n284  on  55367  74607  22023  39362 -34371 -18588\n285 off  58603  79981 -22871   1116  22611  39894\n286 off  47930  73685  -6214  -2685 -60846 -31022\n287 off  22820  41562 -16265  -4928  58506  83229\n288 off -88133 -62301  15247  30618 -10265  10510\n289 off   1253  22476 -60567 -30741  51569  81597\n290 off  63494  75187 -55856 -27033 -16423  -4091\n291 off  52204  70316  21707  45143  24511  43927\n292 off  27774  33872  30457  60549  52881  74012\n293 off -67751 -48677   6535  14109  41406  63051\n294  on  62817  79049   4793  27715 -40593 -20781\n295  on  21141  51290 -74209 -55507  15792  30070\n296  on -32225 -15877  21103  45553 -66267 -46475\n297 off -53085 -35827 -36046 -19282  55940  62461\n298 off  17599  44204  13384  25615 -76042 -64772\n299  on -23704  -3540 -20375  10502  59465  97525\n300 off -82359 -68971  12420  30737 -38435 -11957\n301 off -40061  -9787  -1989  10412  57295  74944\n302  on -76144 -61483 -58373 -37868 -43080 -14295\n303  on   7696  27949 -72779 -56254 -54768 -32949\n304 off  39003  59670 -62963 -47662   1974  16893\n305 off  29968  35020 -22383 -11225  61966  80305\n306  on  50004  63242 -20016   6273  44941  69658\n307 off -59279 -55566 -61178 -54387 -29065  -8057\n308 off -61413 -26740  60749  79809 -21764  16450\n309 off  32196  66439 -60264 -26865  26941  60013\n310  on -58520 -43376  37472  61676  23422  43293\n311 off -56396 -25541 -68416 -55661 -19690  -9207\n312  on  18618  44778 -85629 -64714  -8305  17838\n313  on -61504 -52282 -57912 -39990 -14780   6801\n314  on  11156  42237  11867  43976 -85896 -64810\n315  on -55007 -28867  52919  63309 -40553 -23411\n316 off  59765  80865  35650  56453 -27643 -24090\n317 off  43182  81228 -34129  -7000  40063  52672\n318  on -13505  20448  64022  91445  26743  48275\n319  on  27815  43279 -70617 -52124  24964  51972\n320 off  35675  49869 -62404 -56365  18269  35287\n321 off  35300  54594  35804  62612 -52851 -29341\n322 off -71395 -53018 -19495  -4921  24089  52405\n323  on -33332  -3755 -59570 -40365  56013  63939\n324  on  42324  60577 -49964 -34186 -52816 -27743\n325 off  48768  67360 -61320 -28892 -37831 -21312\n326  on  16338  40996 -53751 -18105  48116  68706\n327 off -27168  -9712 -84533 -68775   4825  41138\n328 off -60047 -36975  37870  61975  32191  46708\n329  on  26376  40244 -65020 -54338  43732  56693\n330 off -91738 -68157 -24748   6980 -39819 -19451\n331  on  -5317  14596 -21035 -10563  71696  82823\n332 off  49847  64417  23298  37336  21615  52831\n333 off -52432 -40255 -26836  -5279 -70876 -60890\n334 off -20102   9857  -1721  20913  78025  98271\n335 off  -4990   6648 -21613   4090 -86165 -59847\n336  on  43038  56116 -63896 -49438 -26881  -4325\n337  on  -4380   2751  55174  85405 -46983 -21937\n338  on  70338  80320 -37100  -1120 -25918 -14953\n339  on -54364 -27158  23057  50821  50502  69300\n340  on   1520  12529 -78320 -56572  38211  50552\n341 off  49738  66773  30561  59431   2951  29462\n342 off  16271  28523 -45270 -31343  63465  75526\n343  on  71234  85618 -41395  -7960  -4130   3364\n344  on -69317 -40653 -67757 -43558   6142  24036\n345  on  25022  40901 -60207 -43245  29925  58586\n346 off -81117 -47868 -43751 -16831 -35356 -29663\n347  on  -1180  17290  67627  89970  11528  29483\n348  on -61937 -38595 -63471 -51265 -41226  -7643\n349 off -79920 -67593  23081  43335 -27955  -4111\n350  on  52546  75163  49315  56898 -14675   7154\n351 off   3726  34564 -66091 -47518 -66664 -37455\n352  on  34949  60501 -28771 -11144  51352  61485\n353  on -12954  14301 -93475 -65638 -10004  11614\n354  on  11713  39311 -13965  -4062 -81763 -73474\n355  on  51282  59807 -57951 -35734   5994  36901\n356 off  -7411  26099  32784  55370  51744  64477\n357 off  28307  41980 -60121 -44354 -62749 -36419\n358 off  67213  84298 -29046 -11454  21296  44275\n359 off -63074 -36397 -44584 -33108 -62259 -41864\n360  on -52919 -32901 -76109 -58400 -18640 -10098\n361 off  22269  46465 -75997 -51073 -46540 -31244\n362  on -13358   1813 -48320 -19885  65575  90081\n363  on  57248  73703  50245  59021 -23752   -325\n364 off -61356 -40218 -63746 -48236  -4162  13109\n365  on -86721 -52575  18886  39871 -27525 -18940\n366 off -32958  -9613  54585  89567 -25434  -6238\n367  on -34933 -16868  35195  53598  53014  59010\n368  on -50111 -41812  53666  72265 -43276 -17297\n369 off -48541 -31980 -29629  -9928 -72149 -56249\n370 off   8404  34890 -91946 -64517 -36821  -5171\n371  on -61476 -46150  34461  64440 -52672 -31719\n372  on  17053  48276   8196  30921 -90002 -67999\n373 off  30567  51548  48492  49629 -60064 -40577\n374 off -11485  16121  49496  85403 -58551 -28464\n375 off -71575 -66788 -28618 -14850  25881  53946\n376  on -82870 -69951 -31733 -21150   2448  31565\n377 off  21102  31260  28479  55875  53439  84269\n378  on -92343 -73224  -5440  30589 -11302  13705\n379 off  57846  67138 -51876 -19075  25743  40789\n380  on -42146 -14334 -91427 -56913  11466  17841\n381  on  -8337   5046 -97914 -59588 -17297  -3854\n382  on  72959  77792  -7695  23596  16641  36941\n383 off  48708  70778 -52975 -24049  38893  49884\n384 off -48001 -30155 -34640  -8100 -68127 -58824\n385  on -23589   -642 -55673 -20006  53073  77106\n386  on -33552  -8377  53425  81818 -47589 -31657\n387  on  -4435  19578  50903  85239 -52340 -31908\n388 off -65297 -43991  45255  59229 -39945  -7463\n389 off -27752  -7352  56826  62480 -59434 -52524\n390  on -52395 -36890 -60404 -53667 -52971 -34646\n391  on -17036 -10608  22073  34956 -87647 -59521\n392  on -20406   2585 -75526 -51689 -53856 -28503\n393 off  57297  67915  40135  59210 -10318  20975\n394  on  54413  78003   2451  10064  24601  41429\n395 off -30323 -21158  35905  68915 -71573 -39806\n396 off -24500 -12434 -76402 -60478 -18069  -8858\n397 off  60931  77777 -41037 -25321  -7530  26700\n398 off  37607  47278 -15018   6458  67782  87778\n399 off -32488  -5083  26413  40281  60169  76864\n400 off   7746  18062  45927  81504  29094  62804\n401 off -60955 -54035  33191  54217  25181  37101\n402  on  52094  81032 -29343 -25525 -50030 -21747\n403 off  57932  85467  -4500   2029 -46429  -9720\n404  on  36386  64660 -73512 -44017  16903  32394\n405  on  -1492  33205 -82073 -69752   5149  23012\n406 off  -6314   2597 -82434 -52899 -54568 -42166\n407 off  47307  75857 -39178 -30672  23379  47503\n408  on  64489  84771 -20277  -8288 -10334  20346\n409 off -40498 -13375 -21960  -1763 -89263 -65000\n410  on  19554  31662  55672  61731 -60358 -37905\n411  on -39219  -7291  35227  63484 -72685 -36545\n412  on  43613  70012 -33475 -18062  33764  41733\n413  on  19674  39635 -73170 -53816 -59139 -34916\n414  on  -2303  14767  69085  89874 -44748 -25607\n415 off -41923 -21656 -11475  12712 -92655 -63472\n416 off -65609 -28677  49338  76417 -17143  20767\n417  on -66708 -54445  -8844   3726  40665  69409\n418  on  57741  80306 -53751 -27969  -2005  11767\n419 off -36833  -8071  11487  45001 -74496 -55088\n420  on -33089 -16969 -41928 -15082 -82121 -64107"
  },
  {
    "objectID": "2022/01/2022-01.html",
    "href": "2022/01/2022-01.html",
    "title": "2022-01: Calorie Counting",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\nMy initial thought was to use data.table::fread but that skipped the spaces in the input by default. readLines keeps the spaces so I switched to that right away."
  },
  {
    "objectID": "2022/01/2022-01.html#part-1",
    "href": "2022/01/2022-01.html#part-1",
    "title": "2022-01: Calorie Counting",
    "section": "Part 1",
    "text": "Part 1\nThis was just a matter of getting a loop with a maximum value counter going. I knew from the get-go that I would need to use the global assignment operator inside the loop. For reasons I thought that naming my variable sum would work but got an error since that’s a reserved word in R (duh!). Find+replace helped get that sorted but my inner loop logic was still wrong. I realized that I was missing an else case to catch any time the maximum hadn’t changed, but the sum needed to be reset.\n\nsm <- 0\nmaxsm <- 0\nfor (x in dt) {\n  x <- as.numeric(x)\n  if (!is.na(x)) {\n    sm <<- sm + x\n  } else if (sm > maxsm) {\n    maxsm <<- sm\n    sm <<- 0\n  } else {\n    sm <<- 0\n  }\n}\nmaxsm\n\n[1] 68923"
  },
  {
    "objectID": "2022/01/2022-01.html#part-2",
    "href": "2022/01/2022-01.html#part-2",
    "title": "2022-01: Calorie Counting",
    "section": "Part 2",
    "text": "Part 2\nComing out of Part 1 was really strong, especially on Day 1. Instead of saving just the max sum, I made it a vector to record all sums. Then I just need to sort it, get the top three values, and sum those.\n\nsm <- 0\nmaxsm <- c()\nfor (x in dt) {\n  x <- as.numeric(x)\n  if (!is.na(x)) {\n    sm <<- sm + x\n  } else  {\n    maxsm <<- c(maxsm, sm)\n    sm <<- 0\n  }\n}\nsum(sort(maxsm, decreasing = TRUE)[1:3])\n\n[1] 200044"
  },
  {
    "objectID": "2022/02/2022-02.html",
    "href": "2022/02/2022-02.html",
    "title": "2022-02: Rock Paper Scissors",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\nThis isn’t so bad, just rock, paper, scissors."
  },
  {
    "objectID": "2022/02/2022-02.html#part-1",
    "href": "2022/02/2022-02.html#part-1",
    "title": "2022-02: Rock Paper Scissors",
    "section": "Part 1",
    "text": "Part 1\nI initially did V1 == V2 but that doesn’t work with ABC and XYZ, but a quick fix put me at 549 on the leaderboard so I’m really pleased.\n\ndt %>%\n  mutate(\"my_score\" = case_when(\n    V2 == \"X\" ~ 1,\n    V2 == \"Y\" ~ 2,\n    V2 == \"Z\" ~ 3\n  )) %>%\n  mutate(\"win_score\" = case_when(\n    (V1 == \"A\" & V2 == \"X\") | (V1 == \"B\" & V2 == \"Y\") | (V1 == \"C\" & V2 == \"Z\") ~ 3,\n    V1 == \"A\" & V2 == \"Y\" ~ 6,\n    V1 == \"A\" & V2 == \"Z\" ~ 0,\n    V1 == \"B\" & V2 == \"X\" ~ 0,\n    V1 == \"B\" & V2 == \"Z\" ~ 6,\n    V1 == \"C\" & V2 == \"X\" ~ 6,\n    V1 == \"C\" & V2 == \"Y\" ~ 0\n  )) %>%\n  mutate(\"score\" = my_score + win_score) %>%\n  pull(\"score\") %>%\n  sum()\n\n[1] 14163"
  },
  {
    "objectID": "2022/02/2022-02.html#part-2",
    "href": "2022/02/2022-02.html#part-2",
    "title": "2022-02: Rock Paper Scissors",
    "section": "Part 2",
    "text": "Part 2\nI had this one pretty quick, just a bit of logic to get the play column right. Of course, I then had to remember to change all the right V2 references which took me a minute to figure out when I missed the second mutate.\n\ndt %>%\n  mutate(\"play\" = case_when(\n    V2 == \"X\" & V1 == \"A\" ~ \"Z\",\n    V2 == \"X\" & V1 == \"B\" ~ \"X\",\n    V2 == \"X\" & V1 == \"C\" ~ \"Y\",\n    V2 == \"Y\" & V1 == \"A\" ~ \"X\",\n    V2 == \"Y\" & V1 == \"B\" ~ \"Y\",\n    V2 == \"Y\" & V1 == \"C\" ~ \"Z\",\n    V2 == \"Z\" & V1 == \"A\" ~ \"Y\",\n    V2 == \"Z\" & V1 == \"B\" ~ \"Z\",\n    V2 == \"Z\" & V1 == \"C\" ~ \"X\",\n  )) %>%\n  mutate(\"my_score\" = case_when(\n    play == \"X\" ~ 1,\n    play == \"Y\" ~ 2,\n    play == \"Z\" ~ 3\n  )) %>%\n  mutate(\"win_score\" = case_when(\n    (V1 == \"A\" & play == \"X\") | (V1 == \"B\" & play == \"Y\") | (V1 == \"C\" & play == \"Z\") ~ 3,\n    V1 == \"A\" & play == \"Y\" ~ 6,\n    V1 == \"A\" & play == \"Z\" ~ 0,\n    V1 == \"B\" & play == \"X\" ~ 0,\n    V1 == \"B\" & play == \"Z\" ~ 6,\n    V1 == \"C\" & play == \"X\" ~ 6,\n    V1 == \"C\" & play == \"Y\" ~ 0\n  )) %>%\n  mutate(\"score\" = my_score + win_score) %>%\n  pull(\"score\") %>%\n  sum()\n\n[1] 12091"
  },
  {
    "objectID": "2022/03/2022-03.html",
    "href": "2022/03/2022-03.html",
    "title": "2022-03: Rucksack Reorganization",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\nThis already looks rough. readLines because it’s strings."
  },
  {
    "objectID": "2022/03/2022-03.html#part-1",
    "href": "2022/03/2022-03.html#part-1",
    "title": "2022-03: Rucksack Reorganization",
    "section": "Part 1",
    "text": "Part 1\nUltimately not too bad. I got to make use of \\(x) for an anonymous function. I messed up the second half of the string and had it started at the end of the first half. I got docked a minute for the bad answer but then was able to fix it in time for resubmission.\n\ndata.frame(\"input\" = dt) %>%\n  mutate(V1 = substr(input, 1, nchar(input) / 2),\n         V2 = substr(input, nchar(input) / 2 + 1, nchar(input))) %>%\n  apply(1, \\(x) {\n    v1 <- unlist(strsplit(x[\"V1\"], \"\"))\n    v2 <- unlist(strsplit(x[\"V2\"], \"\"))\n    \n    return(v1[v1 %in% v2])\n  }) %>%\n  sapply(\\(x) {\n    x <- unique(x)\n    sum(which(letters == x), (which(LETTERS == x) + 26), na.rm = TRUE)\n  }) %>%\n  sum()\n\n[1] 7811"
  },
  {
    "objectID": "2022/03/2022-03.html#part-2",
    "href": "2022/03/2022-03.html#part-2",
    "title": "2022-03: Rucksack Reorganization",
    "section": "Part 2",
    "text": "Part 2\nI struggled with creating the groups for some reason. Once I had that going, the rest was pretty easy.\n\ndata.frame(\"input\" = dt) %>%\n  mutate(\"group\" = rep(1:(nrow(.) / 3), each = 3)) -> dt2\n\nd2 <- c()\nfor(g in unique(dt2$group)) {\n  d <- dt2$input[dt2$group == g]\n  \n  v1 <- unlist(strsplit(d[1], \"\"))\n  v2 <- unlist(strsplit(d[2], \"\"))\n  v3 <- unlist(strsplit(d[3], \"\"))\n    \n  d2 <<- c(d2, unique(v3[v3 %in% v1[v1 %in% v2]]))\n}\n\nsapply(d2, \\(x) {\n    x <- unique(x)\n    sum(which(letters == x), (which(LETTERS == x) + 26), na.rm = TRUE)\n  }) %>%\n  sum()\n\n[1] 2639"
  },
  {
    "objectID": "2022/04/2022-04.html",
    "href": "2022/04/2022-04.html",
    "title": "2022-04: Camp Cleanup",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\nThis looks bad at first, but it’s not."
  },
  {
    "objectID": "2022/04/2022-04.html#part-1",
    "href": "2022/04/2022-04.html#part-1",
    "title": "2022-04: Camp Cleanup",
    "section": "Part 1",
    "text": "Part 1\nIt took me a minute to figure out how I wanted to work with the data ranges. I started with mutate then lapply then quickly switched to mapply. From there it wrote itself. I then second-guessed my answer and divided by two because I thought I was double reporting the ranges. I cost myself a minute :(\n\nmapply(\\(x, y) {\n  x <- as.numeric(unlist(strsplit(x, \"-\")))\n  y <- as.numeric(unlist(strsplit(y, \"-\")))\n  \n  all(x[1]:x[2] %in% y[1]:y[2]) | all(y[1]:y[2] %in% x[1]:x[2])\n}, dt$V1, dt$V2) |>\n  unlist() |>\n  table() %>%\n  .[\"TRUE\"]\n\nTRUE \n 532"
  },
  {
    "objectID": "2022/04/2022-04.html#part-2",
    "href": "2022/04/2022-04.html#part-2",
    "title": "2022-04: Camp Cleanup",
    "section": "Part 2",
    "text": "Part 2\n38 seconds for part 2! I just had to change all to any.\n\nmapply(\\(x, y) {\n  x <- as.numeric(unlist(strsplit(x, \"-\")))\n  y <- as.numeric(unlist(strsplit(y, \"-\")))\n  \n  any(x[1]:x[2] %in% y[1]:y[2]) | any(y[1]:y[2] %in% x[1]:x[2])\n}, dt$V1, dt$V2) |>\n  unlist() |>\n  table() %>%\n  .[\"TRUE\"]\n\nTRUE \n 854"
  },
  {
    "objectID": "2022/05/2022-05.html",
    "href": "2022/05/2022-05.html",
    "title": "2022-05: Supply Stacks",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\nThis was a big mess. It took me forever to read in the input and I eventually stumbled upon reaf_fwf because I couldn’t remember what a fixed-width file was. I kept looking for delimited readers and tried all sorts of crazy things."
  },
  {
    "objectID": "2022/05/2022-05.html#part-1",
    "href": "2022/05/2022-05.html#part-1",
    "title": "2022-05: Supply Stacks",
    "section": "Part 1",
    "text": "Part 1\nOnce I had the input in, it was relatively smooth sailing. I missed the part in part 1 where the boxes move one by one (oh part 2, how I wish I knew you then…) but once I had that fixed, I was looking pretty good. I got the test input working but then the real input wasn’t working. I eventually realized that my regex \\\\d was missing any numbers greater than 9 once that was fixed, everything else was pretty easy.\n\ndo_part(1)\n\nRows: 8 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\n\nchr (9): X1, X2, X3, X4, X5, X6, X7, X8, X9\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning in lapply(data.frame(str_match_all(tail(readLines(file_name), -(which(dt\n== : NAs introduced by coercion\n\n\n[1] \"ZBDRNPMVH\""
  },
  {
    "objectID": "2022/05/2022-05.html#part-2",
    "href": "2022/05/2022-05.html#part-2",
    "title": "2022-05: Supply Stacks",
    "section": "Part 2",
    "text": "Part 2\nAfter firing off a celebratory text message, I read part 2, deleted my rev and was done in 52 seconds!\n\ndo_part(2)\n\nRows: 8 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\n\nchr (9): X1, X2, X3, X4, X5, X6, X7, X8, X9\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning in lapply(data.frame(str_match_all(tail(readLines(file_name), -(which(dt\n== : NAs introduced by coercion\n\n\n[1] \"WDLPFNNNB\""
  },
  {
    "objectID": "2022/06/2022-06.html",
    "href": "2022/06/2022-06.html",
    "title": "2022-06: Tuning Trouble",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(mistlecode)\nThis looks easy. Oh wait. I totally misread the problem…"
  },
  {
    "objectID": "2022/06/2022-06.html#part-1",
    "href": "2022/06/2022-06.html#part-1",
    "title": "2022-06: Tuning Trouble",
    "section": "Part 1",
    "text": "Part 1\nHardcoding everything will bite me in the butt later probably. Ultimately not too bad in hindsight.\n\nNewOriginal\n\n\n\ndo_part(4)\n\nbdjq \n1578 \n\n\n\n\n\ndata.frame(\"w\" = dt,\n           \"x\" = c(dt[-1], NA),\n           \"y\" = c(dt[-1:-2], NA, NA),\n           \"z\" = c(dt[-1:-3], NA, NA, NA)) |>\n  mutate(marker = paste0(w, x, y, z, sep = \"\")) |>\n  apply(1, function(x) {\n    max(table(strsplit(x[\"marker\"], \"\")))\n  }) -> tmp\n(which(tmp == 1) + 3)[1]\n\n[1] 1578"
  },
  {
    "objectID": "2022/06/2022-06.html#part-2",
    "href": "2022/06/2022-06.html#part-2",
    "title": "2022-06: Tuning Trouble",
    "section": "Part 2",
    "text": "Part 2\nWell, well, well. Hardcoding is never a good move. Took a bit of time to get it figured out, but I got there in the end.\n\nNewOriginal\n\n\n\ndo_part(14)\n\nmdcbnwqgshpvfj \n          2178 \n\n\n\n\n\nget_vec <- function(vec, place) {\n  if (place == 0) { return(vec) }\n  c(vec[-1:(-place)], rep(NA, place))\n}\n\nlapply(0:13, function(x) {\n  get_vec(dt, x)\n}) |>\n  data.frame() |>\n  `colnames<-`(paste0(\"X\", 1:14)) %>%\n  apply(1, function(x) {\n    paste0(x, collapse = \"\")\n  }) |>\n  sapply(function(x) {\n    max(table(strsplit(x, \"\")))\n  }) -> tmp\n(which(tmp == 1) + 13)[1]\n\nmdcbnwqgshpvfj \n          2178"
  },
  {
    "objectID": "2022/07/2022-07.html",
    "href": "2022/07/2022-07.html",
    "title": "2022-07: No Space Left On Device",
    "section": "",
    "text": "library(mistlecode)\n\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr pacman purrr slider stringr tidyverse\nOh no. This will probably use recursion."
  },
  {
    "objectID": "2022/07/2022-07.html#part-1",
    "href": "2022/07/2022-07.html#part-1",
    "title": "2022-07: No Space Left On Device",
    "section": "Part 1",
    "text": "Part 1\nMy first attempt I just kinda hoped I wouldn’t need recursion. It was silly, but a guy can dream. My next idea was to just create the file system and so that’s what I did. Rather than making the files the size it says, I just filled them with one line holding the size so that I could read it in later. Getting the instructions fleshed out wasn’t too bad. It reminds me a lot of my Cat Simulator 2019 project from Intro to UNIX.\n\ndir.create(\"here_we_go\")\nsetwd(paste0(wd, \"/here_we_go\"))\n\ninvisible(sapply(dt, \\(x) {\n  if(grepl(\"dir \", x)) {\n    d <- str_remove(x, \"dir \")\n    if (!dir.exists(d)) { dir.create(d) }\n  } else if (grepl(\"[0-9]+\", x)) {\n    f <- paste0(str_remove_all(x, \"[0-9 \\\\.]\"), \".txt\")\n    if (!file.exists(f)) {\n      f <- file(f)\n      content <-\n        paste0(as.numeric(paste0(\n          str_extract_all(x, \"\\\\d\", simplify = TRUE), collapse = \"\"\n        )), \"\\n\")\n      cat(content, file = f)\n      close(f)\n    }\n  } else if (grepl(\"\\\\$ cd \\\\.\\\\.\", x)) {\n    setwd(\"../\")\n  } else if (grepl(\"\\\\$ cd \\\\w\", x)) {\n    d <- str_remove(x, \"\\\\$ cd \")\n    if (!dir.exists(d)) { dir.create(d) }\n    setwd(d)\n  } else if (grepl(\"\\\\$ cd /\", x)) {\n    setwd(paste0(wd, \"/here_we_go\")) \n  } else if (!grepl(\"\\\\$ ls|\\\\$ cd /\", x)) { print(x) }\n}))\nsetwd(wd)\n\nGetting this bit working was a pain, but I’m really pleased with it. I had it working on the test input for a while before the real input which was excruciating, but I eventually tracked the problem down to my regex where I remove any file paths. In my earlier step where I repeated file paths then unlisted, any duplicates are assigned a trailing number. In the test input, this number was never more than one digit. In my regex, I was only looking for one digit and so any paths with no digits or more than one digit were missed. With that out of the way, it still doesn’t work. Eventually I realized I was collapsing my paths backwards so all my folder sizes were reversed. Fixing that eventually got me where I needed to be.\n\nv <- \npaste0(\"here_we_go/\", list.files(\"here_we_go\", recursive = TRUE)) |>\n  sapply(\\(x) {\n    count <- str_count(x, \"/\") - 1\n    count <- ifelse(count == 0, 1, count)\n    rep(x, count)\n  }) \npaths <-\n  v |>\n  lapply(\\(x) {\n    xx <- str_remove(x, \"here_we_go/\")\n    sapply(0:(length(x) - 1), \\(x) {\n      if (x == 0) { return(xx) }\n      m <- str_split(xx, \"/\")[[1]]\n      m <- m[-(length(m) - (1:x))]\n      m <- paste0(m, collapse = \"/\")\n      return(m)\n    }) |>\n      unlist() |>\n      unique()\n  }) |>\n  unlist() |>\n  unname()\n\nfiles <- \n  v |>\n  unlist() |>\n  sapply(\\(x) {\n    x <- as.numeric(readLines(x))\n  }) |>\n  data.frame() |>\n  rownames_to_column(var = \"path\") |>\n  `colnames<-`(c(\"full_path\", \"size\")) |>\n  cbind(paths) |>\n  mutate(path = str_remove(paths, \"/\\\\w*\\\\.txt\\\\d*\"))\n  # filter(grepl(\"\\\\.txt\", path)) |>\n  # mutate(path = str_remove(path, \"/\\\\w*\\\\.txt[0-9]?\"))\nfiles |>\n  group_by(path) |>\n    summarise(size = sum(size)) |>\n    arrange(path, .by_group = TRUE) |>\n  ungroup() |>\n  filter(size <= 100000) |>\n  pull(size) |>\n  sum()\n\n[1] 1297683"
  },
  {
    "objectID": "2022/07/2022-07.html#part-2",
    "href": "2022/07/2022-07.html#part-2",
    "title": "2022-07: No Space Left On Device",
    "section": "Part 2",
    "text": "Part 2\nThis wasn’t too bad. Just took a bit to make the changes needed from part 1. I was briefly stuck when just grouping by path in the second pipeline, but adding the level grouping took care of it and I was good to go!\n\nf <- \n  files |>\n  select(paths, size) |>\n  mutate(path = str_remove(paths, \"/\\\\w*\\\\.txt\\\\d*\")) |>\n  select(-paths) |>\n  unique() |>\n  group_by(path) |>\n    summarise(size = sum(size)) |>\n    ungroup() |>\n  mutate(level = str_count(path, \"/\"))\nhome <- sum(f$size[f$level == 0])\n\nf |>\n  group_by(path, level) |>\n    summarise(size = sum(size), .groups = \"keep\") |>\n    arrange(path, .by_group = TRUE) |>\n    ungroup() |>\n  mutate(free = 70000000 - home,\n         sort = size + free) |>\n  arrange(desc(sort), size) |>\n  filter(sort > 30000000) |>\n  tail(1) |>\n  pull(size)\n\n[1] 5756764"
  },
  {
    "objectID": "2022/08/2022-08.html",
    "href": "2022/08/2022-08.html",
    "title": "2022-08: Treetop Tree House",
    "section": "",
    "text": "library(mistlecode)\nOh no. I always do hate grid based ones."
  },
  {
    "objectID": "2022/08/2022-08.html#part-1",
    "href": "2022/08/2022-08.html#part-1",
    "title": "2022-08: Treetop Tree House",
    "section": "Part 1",
    "text": "Part 1\nThis was a weird one. I’m writing this the day after I wrote the code, and I have no clue what my thought process was. I did it reasonably quickly so I’m not too unhappy with it.\n\nmm <- \n  dt |>\n  as.matrix() |>\n  as.character() |>\n  str_split(\"\", simplify = TRUE) |>\n  apply(c(1, 2), as.numeric)\n\ngrid <- expand.grid(\"col\" = 1:ncol(mm), \"row\" = 1:nrow(mm))\n\nm <-\n  mapply(\\(x, y) {\n    tree <- mm[y, x]\n    \n    if (x == 1 | x == ncol(mm) | y == 1 | y == nrow(mm)) { return(c(x, y)) }\n    \n    if (all(mm[(y + 1):nrow(mm), x] < tree, na.rm = TRUE) |\n        all(mm[1:(y - 1), x] < tree, na.rm = TRUE) |\n        all(mm[y, 1:(x - 1)] < tree, na.rm = TRUE) |\n        all(mm[y, (x + 1):ncol(mm)] < tree, na.rm = TRUE)) {\n      return(c(x, y))\n    }\n  }, grid$col, grid$row)\n\nm[!sapply(m, is.null)] %>%\n  do.call(rbind, .) |>\n  data.frame() |>\n  `colnames<-`(c(\"col\", \"row\")) -> mi\nnrow(mi)\n\n[1] 1717"
  },
  {
    "objectID": "2022/08/2022-08.html#part-2",
    "href": "2022/08/2022-08.html#part-2",
    "title": "2022-08: Treetop Tree House",
    "section": "Part 2",
    "text": "Part 2\nThis was a mess. I kept trying to be smart about it and wasted so much time. I mostly had trouble working with patterns like [5050] where the first five can see both the zero and the second five, but not the second zero. This meant that x < 5 ignored the five, and x <= 5 would keep going and read over the remaining zero. Even though I ended up hard-coding everything, I’m rather pleased with how neat it is. I’m sure I could move more of it to functions, but it wouldn’t be too much prettier, if any.\n\nscenic <- matrix(NA, nrow(mm), ncol(mm))\n\nchecker <- function(vec, i, tree, dir) {\n  vec <- detect_index(vec, \\(.x) { .x >= tree }) \n  if (dir == -1) { vec <- ifelse(vec == 0, i - 1, vec) }\n  else { vec <- ifelse(vec == 0, ncol(mm) - i, vec) }\n  vec\n}\n\nmapply(\\(y, x) {\n  tree <- mm[y, x]\n  up <- NA; down <- NA; left <- NA; right <- NA\n  if (y == 1) { up <- 0 }; if (y == nrow(mm)) { down <- 0 }\n  if (x == 1) { left <- 0}; if (x == ncol(mm)) { right <- 0 }\n  \n  rowMin <- ifelse(y - 1 < 1, 1, y - 1); rowMax <- ifelse(y + 1 > nrow(mm), nrow(mm), y + 1)\n  colMin <- ifelse(x - 1 < 1, 1, x - 1); colMax <- ifelse(x + 1 > ncol(mm), ncol(mm), x + 1)\n  \n  yMin <- ifelse(y - 1 < 1, 1, y - 1); yMax <- ifelse(y + 1 > nrow(mm), nrow(mm), y + 1)\n  xMin <- ifelse(x - 1 < 1, 1, x - 1); xMax <- ifelse(x + 1 > ncol(mm), ncol(mm), x + 1)\n  \n  if (is.na(up)) { up <- checker(rev(mm[1:yMin, x]), y, tree, -1) }\n  if (is.na(left)) { left <- checker(rev(mm[y, 1:xMin]), x, tree, -1) }\n  if (is.na(right)) { right <- checker(mm[y, xMax:ncol(mm)], x, tree, 1) }\n  if (is.na(down)) { down <- checker(mm[rowMax:nrow(mm), x], y, tree, 1) }\n  \n  scene <- c(up, left, right, down)\n  scenic[y, x] <<- prod(scene[scene != 0])\n}, grid$row, grid$col) |> invisible()\nmax(scenic)\n\n[1] 321975"
  },
  {
    "objectID": "2022/09/2022-09.html",
    "href": "2022/09/2022-09.html",
    "title": "2022-09: Rope Bridge",
    "section": "",
    "text": "library(mistlecode)\n\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse"
  },
  {
    "objectID": "2022/09/2022-09.html#part-2",
    "href": "2022/09/2022-09.html#part-2",
    "title": "2022-09: Rope Bridge",
    "section": "Part 2",
    "text": "Part 2"
  },
  {
    "objectID": "2022/10/2022-10.html",
    "href": "2022/10/2022-10.html",
    "title": "2022-10: Cathode-Ray Tube",
    "section": "",
    "text": "library(mistlecode)\n\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse\nOh. This looks a lot like last year’s day one."
  },
  {
    "objectID": "2022/10/2022-10.html#part-1",
    "href": "2022/10/2022-10.html#part-1",
    "title": "2022-10: Cathode-Ray Tube",
    "section": "Part 1",
    "text": "Part 1\nPart 1 wasn’t too bad. I was a really big dummy and forgot to download the test input then was trying to check my real input as the test input which didn’t work. Other than that, I’m really happy I got to use mistlecode::expand_directions which I only wrote a few hours prior. I did have to make some live modifications, but nothing crazy. Once everything was mostly right, I had a problem where the first five signals were correct, but the last wasn’t. I eventually realized that I needed to lead the add values and that got everything sorted.\n\ndt <-\n  dt |>\n  mutate(\"mag\" = ifelse(X1 == \"noop\", 1, 2)) |>\n  select(\"dir\" = \"X1\", \"mag\", \"X2\") |>\n  mutate(ins = row_number()) |>\n  expand_directions(preserve_data = TRUE) |>\n  data.table()\n\ndt$dup = duplicated(dt$ins, fromLast = TRUE)\ndt$X2 = ifelse(dt$dup, NA, dt$X2)\n\ndt$X3 <- lead(dt$X2, 1)\n\nsapply(c(20, 60, 100, 140, 180, 220), \\(x) {\n  sum(1, sum(dt[1:x, \"X3\"], na.rm = TRUE)) * x\n}) |>\n  sum()\n\n[1] 14260"
  },
  {
    "objectID": "2022/10/2022-10.html#part-2",
    "href": "2022/10/2022-10.html#part-2",
    "title": "2022-10: Cathode-Ray Tube",
    "section": "Part 2",
    "text": "Part 2\nThis was an absolute mess. I didn’t understand the question at all and still don’t really get it. The difference between what I had and what I thought I should have made the solution relatively clear, but only after struggling with it for hours. I do like ggplot-able solutions though. Those are always nice.\n\nm <- matrix(\" \", 6, 40)\n\ndt$X2 <- ifelse(is.na(dt$X2), 0, dt$X2)\ndt$cumsum <- sapply(1:240, \\(x) { sum(1, sum(dt[1:x, \"X2\"], na.rm = TRUE)) })\n\nm <-\n  sapply(1:240, \\(x) {\n    forty <- (x %/% 40)\n    cumsum <- c(dt$cumsum[x] - 1, dt$cumsum[x], dt$cumsum[x] + 1)\n    sprite_pos <- cumsum[!is.na(cumsum)]\n    if (any((sprite_pos + (40 * forty)) == x)) {\n      sprite_pos <- suppressWarnings(min(which(sprite_pos == x), na.rm = TRUE))\n      if (sprite_pos == 1) { sprite_pos <- cumsum[1] }\n      else if (sprite_pos == 3) { sprite_pos <- cumsum[3] }\n      else { sprite_pos <- cumsum[2] }\n      return(sprite_pos + (40 * forty))\n    }\n    return(NA)\n  })\n\nm[240] <- 0\n\nmatrix_to_coords(matrix(m, 6, 40, byrow = TRUE)) |>\n  data.frame() |>\n  filter(!is.na(data)) |>\n  mutate(col = ifelse(col == 40, 0, col)) |>\n  ggplot() +\n  geom_point(aes(x = col, y = -row), size = 5, shape = 15) +\n  coord_fixed()"
  },
  {
    "objectID": "2022/11/2022-11.html",
    "href": "2022/11/2022-11.html",
    "title": "2022-11: Monkey in the Middle",
    "section": "",
    "text": "library(mistlecode)\n\nTo install `mistlecode` yourself, run `devtools::install_github('guslipkin/mistlecode')`.\n\n Also loading:  cipheR data.table dplyr purrr slider stringr tidyverse\nOh no. I’m going to bed."
  },
  {
    "objectID": "2022/11/2022-11.html#part-1",
    "href": "2022/11/2022-11.html#part-1",
    "title": "2022-11: Monkey in the Middle",
    "section": "Part 1",
    "text": "Part 1\nThis was so much fun! I dipped my toes into S3 classes, made a useful function factory, and did some recursion. I had a bit of trouble making sure my list of monkeys was getting passed around properly and returned because loops can’t change objects in the global environment. That said, I have a bad feeling about part 2.\n\noperation <- function(op, val) {\n  function(old) {\n    if (val == \"old\") { val <- as.integer(old) } \n    else { val <- as.integer(val) }\n    \n    if (op == \"*\") { val <- old * val }\n    else if (op == \"+\") { val <- old + val }\n    \n    return(val)\n  }\n}\n\nnew_monkey <- function(dt, x) {\n  name <- str_extract(dt[1,\"dt\"], \"\\\\d+\")\n  items <- \n    str_split(dt[2,\"dt\"], \":|,\", simplify = TRUE)[1,-1] |> as.numeric()\n  opp <- \n    str_split(dt[3, \"dt\"], \"=\", simplify = TRUE)[1,2] |>\n    str_match(\" (new|old) (\\\\+|\\\\-|\\\\*|\\\\/) (old|\\\\d+)\")\n  op_op <- opp[1,3]\n  op_num <- ifelse(opp[1,4])\n  op <- operation(op = opp[1,3], val = opp[1,4])\n  test <- str_extract(dt[4,\"dt\"], \"\\\\d+\") |> as.integer()\n  case_true <- str_extract(dt[5,\"dt\"], \"\\\\d+\")\n  case_false <- str_extract(dt[6,\"dt\"], \"\\\\d+\")\n  x <- list(\n    \"name\" = name,\n    \"items\" = items,\n    \"operation\" = op,\n    \"test\" = test,\n    \"case_true\" = case_true,\n    \"case_false\" = case_false,\n    \"inspections\" = 0\n  )\n  structure(x, class = \"monkey\")\n}\n\nmonkeys <- \n  lapply(unique(dt$monkey), \\(m) { \n    new_monkey(dt[dt$monkey == m,], m) \n  })\nnames(monkeys) <- sapply(monkeys, \\(m) m$name)\n\nprocess_items <- function(item, monkey, these_monkeys) {\n  if (is.na(monkey$items[item]) | \n      item > length(monkey$items)) { return(these_monkeys) }\n  worry_level <- monkey$operation(monkey$items[item])\n  worry_level <- floor(worry_level / 3)\n  if (worry_level %% monkey$test == 0) {\n    case_true <- \n      c(these_monkeys[[monkey$case_true]]$items, worry_level)\n    these_monkeys[[monkey$case_true]]$items <- \n      case_true[!is.na(case_true)]\n  } else {\n    case_false <- \n      c(these_monkeys[[monkey$case_false]]$items, worry_level)\n    these_monkeys[[monkey$case_false]]$items <- \n      case_false[!is.na(case_false)]\n  }\n  process_items(item + 1, monkey, these_monkeys)\n}\n\nprocess_monkey <- function(i, these_monkeys) {\n  if (i == length(monkeys) + 1) { return(these_monkeys) }\n  monkey <- these_monkeys[[i]]\n  these_monkeys <- process_items(1, monkey, these_monkeys)\n  monkey$inspections <- \n    sum(monkey$inspections, length(monkey$items), na.rm = TRUE)\n  monkey$items <- as.numeric(NA)\n  these_monkeys[[i]] <- monkey\n  process_monkey(i + 1, these_monkeys)\n}\n\nround <- function(these_monkeys, round) {\n  if (round == round_max + 1) { return(these_monkeys) }\n  these_monkeys <- process_monkey(1, these_monkeys)\n  round(these_monkeys, round + 1)\n}\n\n\nround_max <- 20\nm <- round(monkeys, 1)\nsapply(m, \\(m) m$inspections) |>\n  sort(decreasing = TRUE) |>\n  head(2) |>\n  prod()\n\n[1] 316888"
  },
  {
    "objectID": "2022/11/2022-11.html#part-2",
    "href": "2022/11/2022-11.html#part-2",
    "title": "2022-11: Monkey in the Middle",
    "section": "Part 2",
    "text": "Part 2\nI want to scream. I submitted my answer just to see and it’s right, even though the test input was wrong. I could’ve submitted yesterday 😭 So many hours devoted to these monkeys for nothing…\nI figured out the worry_level %% prod(tests) thing pretty quick after part 1, but it took a full day because the test input never lined up, even if I got super close. I still want to figure out why that is, but for now I’m just happy to have the star.\n\nprocess_items <- function(item, monkey, these_monkeys) {\n  if (is.na(monkey$items[item]) | \n      item > length(monkey$items)) { return(these_monkeys) }\n  worry_level <- monkey$operation(monkey$items[item])\n  case <- (worry_level %% monkey$test) == 0\n  worry_level <- worry_level %% prod(tests)\n  if (case) {\n    case_true <- \n      c(these_monkeys[[monkey$case_true]]$items, worry_level)\n    these_monkeys[[monkey$case_true]]$items <- \n      case_true[!is.na(case_true)]\n  } else {\n    case_false <- \n      c(these_monkeys[[monkey$case_false]]$items, worry_level)\n    these_monkeys[[monkey$case_false]]$items <- \n      case_false[!is.na(case_false)]\n  }\n  process_items(item + 1, monkey, these_monkeys)\n}\n\nm <- monkeys\ntests <- sapply(m, \\(m) m$test)\n\nround_max <- 1\ni <- 1\nwhile (i <= 10000) {\n  m <- process_monkey(1, m)\n  i <- i + 1\n}\n\nsapply(m, \\(m) m$inspections) |>\n  sort(decreasing = TRUE) |>\n  head(2) |>\n  prod()\n\n[1] 35270398814"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Welcome to my Advent of Code book! All of my solutions are in R with varying degrees of complexity and documentation."
  },
  {
    "objectID": "index.html#star-chart",
    "href": "index.html#star-chart",
    "title": "Welcome!",
    "section": "Star Chart",
    "text": "Star Chart"
  },
  {
    "objectID": "index.html#my-favorite-solutions",
    "href": "index.html#my-favorite-solutions",
    "title": "Welcome!",
    "section": "My Favorite Solutions",
    "text": "My Favorite Solutions\n\n2021-09: I used the dbscan clustering method to solve a path finding issue.\n2022-04: While not my fastest part 1, part 2 took me just 38 seconds!\n2022-11: I used S3 Classes and function factories for the first time, and got just a little bit better at recursion."
  }
]